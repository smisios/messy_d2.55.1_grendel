# 1 "messy_mecca_kpp.f90"
Module messy_mecca_kpp
 
! -*- f90 -*-

!  This module is automatically generated by kp4
!
!  FORTRAN Code generated by kpp was modified to be used
!
! NOTE: those are required for (some) reaction rates
  USE messy_main_constants_mem,ONLY: N_A,R_gas,atm2Pa
  USE messy_cmn_photol_mem     ! IP_MAX,ip_*,jname ! mz_rs_20081125
  USE messy_main_tools,ONLY: read_nml_open,read_nml_check,read_nml_close &
                            ,str,find_next_free_unit
  USE messy_main_tools_kinetics ! ELEMENTAL rate coefficient functions

  IMPLICIT        NONE
  PRIVATE
!SAVE  ! NOTE: OCCURS AGAIN IN AUTOMATICALLY GENERATED CODE ...

  PUBLIC :: IERR_NAMES

  PUBLIC :: SPC_NAMES,EQN_NAMES,EQN_TAGS,REQ_HET,REQ_AEROSOL,REQ_PHOTRAT &
          ,REQ_MCFCT,IP_MAX,jname

  PUBLIC :: dp
  PUBLIC :: atol,rtol
  PUBLIC :: NSPEC,nreact
  PUBLIC :: A
! mz_rs_20101111+
  PUBLIC :: rconst
! mz_rs_20101111-
! mz_rs_20130208+
  PUBLIC :: NVAR
! mz_rs_20130208-

  PUBLIC :: Initialize,Integrate,Update_RCONST,initialize_indexarrays
  PUBLIC :: kpp_integrate
  PUBLIC :: initialize_kpp_ctrl

! END OF MODULE HEADER TEMPLATE
                                                                 
! Variables used for vector mode
                                                                 
  logical,parameter           :: L_VECTOR=.FALSE.            
  integer,parameter           :: I_LU_DI = 1
  integer,parameter           :: VL_DIM=1
  integer                     :: vl                              
                                                                 
  integer                     :: VL_glo                          
  integer                     :: is,ie                           
                                                                 
  integer,dimension(VL_dim)   :: Kacc,Krej                       
  integer,dimension(VL_dim)   :: IERRV                           
  logical                     :: data_loaded=.false.             


!
!   Definition of different levels of accuracy
!   for REAL variables using KIND parameterization
!
!   KPP SP -  Single precision kind
  INTEGER, PARAMETER :: sp = SELECTED_REAL_KIND(6,30)
!   KPP DP -  Double precision kind
  INTEGER, PARAMETER :: dp = SELECTED_REAL_KIND(12,307)
!   KPP QP -  Quadruple precision kind
  INTEGER, PARAMETER :: qp = SELECTED_REAL_KIND(18,400)



!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Parameter Module File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Parameters.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~






!   NSPEC -  Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 141 
!   NVAR -  Number of Variable species
  INTEGER, PARAMETER :: NVAR = 138 
!   NVARACT -  Number of Active species
  INTEGER, PARAMETER :: NVARACT = 126 
!   NFIX -  Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 3 
!   NREACT -  Number of reactions
  INTEGER, PARAMETER :: NREACT = 349 
!   NVARST -  Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
!   NFIXST -  Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 139 
!   NONZERO -  Number of nonzero entries in Jacobian
  INTEGER, PARAMETER :: NONZERO = 1308 
!   LU_NONZERO -  Number of nonzero entries in LU factoriz. of Jacobian
  INTEGER, PARAMETER :: LU_NONZERO = 1538 
!   CNVAR -  (NVAR+ 1) Number of elements in compressed row format
  INTEGER, PARAMETER :: CNVAR = 139 
!   NLOOKAT -  Number of species to look at
  INTEGER, PARAMETER :: NLOOKAT = 0 
!   NMONITOR -  Number of species to monitor
  INTEGER, PARAMETER :: NMONITOR = 0 
!   NMASS -  Number of atoms to check mass balance
  INTEGER, PARAMETER :: NMASS = 1 

!   Index declaration for variable species in C and VAR
!     VAR(ind_spc) = C(ind_spc)

  INTEGER, PARAMETER,PUBLIC :: ind_BrNO2 = 1 
  INTEGER, PARAMETER,PUBLIC :: ind_CF2ClBr = 2 
  INTEGER, PARAMETER,PUBLIC :: ind_CF3Br = 3 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3I = 4 
  INTEGER, PARAMETER,PUBLIC :: ind_O3s = 5 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3 = 6 
  INTEGER, PARAMETER,PUBLIC :: ind_LCARBON = 7 
  INTEGER, PARAMETER,PUBLIC :: ind_LFLUORINE = 8 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3SO3H = 9 
  INTEGER, PARAMETER,PUBLIC :: ind_NO3m_cs = 10 
  INTEGER, PARAMETER,PUBLIC :: ind_Hp_cs = 11 
  INTEGER, PARAMETER,PUBLIC :: ind_LO3s = 12 
  INTEGER, PARAMETER,PUBLIC :: ind_LossCH4 = 13 
  INTEGER, PARAMETER,PUBLIC :: ind_LossCO = 14 
  INTEGER, PARAMETER,PUBLIC :: ind_LossN2O = 15 
  INTEGER, PARAMETER,PUBLIC :: ind_LossO3 = 16 
  INTEGER, PARAMETER,PUBLIC :: ind_ProdO3 = 17 
  INTEGER, PARAMETER,PUBLIC :: ind_BIACET = 18 
  INTEGER, PARAMETER,PUBLIC :: ind_Cl2O2 = 19 
  INTEGER, PARAMETER,PUBLIC :: ind_S = 20 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H6 = 21 
  INTEGER, PARAMETER,PUBLIC :: ind_NC4H10 = 22 
  INTEGER, PARAMETER,PUBLIC :: ind_CCl4 = 23 
  INTEGER, PARAMETER,PUBLIC :: ind_CF2Cl2 = 24 
  INTEGER, PARAMETER,PUBLIC :: ind_CF2ClCF2Cl = 25 
  INTEGER, PARAMETER,PUBLIC :: ind_CF3CF2Cl = 26 
  INTEGER, PARAMETER,PUBLIC :: ind_CFCl3 = 27 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2Br2 = 28 
  INTEGER, PARAMETER,PUBLIC :: ind_CHBr3 = 29 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3SO3 = 30 
  INTEGER, PARAMETER,PUBLIC :: ind_NH3 = 31 
  INTEGER, PARAMETER,PUBLIC :: ind_C3H8 = 32 
  INTEGER, PARAMETER,PUBLIC :: ind_CF2ClCFCl2 = 33 
  INTEGER, PARAMETER,PUBLIC :: ind_ClNO2 = 34 
  INTEGER, PARAMETER,PUBLIC :: ind_OClO = 35 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2ClBr = 36 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3Br = 37 
  INTEGER, PARAMETER,PUBLIC :: ind_CHCl2Br = 38 
  INTEGER, PARAMETER,PUBLIC :: ind_CHClBr2 = 39 
  INTEGER, PARAMETER,PUBLIC :: ind_H2SO4 = 40 
  INTEGER, PARAMETER,PUBLIC :: ind_SH = 41 
  INTEGER, PARAMETER,PUBLIC :: ind_CHF3 = 42 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2Cl2 = 43 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CCl3 = 44 
  INTEGER, PARAMETER,PUBLIC :: ind_CHCl3 = 45 
  INTEGER, PARAMETER,PUBLIC :: ind_OCS = 46 
  INTEGER, PARAMETER,PUBLIC :: ind_NACA = 47 
  INTEGER, PARAMETER,PUBLIC :: ind_N = 48 
  INTEGER, PARAMETER,PUBLIC :: ind_N2O = 49 
  INTEGER, PARAMETER,PUBLIC :: ind_NH2OH = 50 
  INTEGER, PARAMETER,PUBLIC :: ind_SO3 = 51 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3Cl = 52 
  INTEGER, PARAMETER,PUBLIC :: ind_NHOH = 53 
  INTEGER, PARAMETER,PUBLIC :: ind_MPAN = 54 
  INTEGER, PARAMETER,PUBLIC :: ind_LMEKOOH = 55 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CHF2 = 56 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H5OOH = 57 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CO3H = 58 
  INTEGER, PARAMETER,PUBLIC :: ind_SO = 59 
  INTEGER, PARAMETER,PUBLIC :: ind_IC3H7NO3 = 60 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOOH = 61 
  INTEGER, PARAMETER,PUBLIC :: ind_LHOC3H6OOH = 62 
  INTEGER, PARAMETER,PUBLIC :: ind_IC3H7OOH = 63 
  INTEGER, PARAMETER,PUBLIC :: ind_HNO4 = 64 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CO2H = 65 
  INTEGER, PARAMETER,PUBLIC :: ind_DMSO = 66 
  INTEGER, PARAMETER,PUBLIC :: ind_HYPERACET = 67 
  INTEGER, PARAMETER,PUBLIC :: ind_HONO = 68 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2FCF3 = 69 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H2 = 70 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CFCl2 = 71 
  INTEGER, PARAMETER,PUBLIC :: ind_CHF2CF3 = 72 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CF3 = 73 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2F2 = 74 
  INTEGER, PARAMETER,PUBLIC :: ind_PAN = 75 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOOH = 76 
  INTEGER, PARAMETER,PUBLIC :: ind_CHF2Cl = 77 
  INTEGER, PARAMETER,PUBLIC :: ind_Cl2 = 78 
  INTEGER, PARAMETER,PUBLIC :: ind_LC4H9OOH = 79 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3SO2 = 80 
  INTEGER, PARAMETER,PUBLIC :: ind_MEK = 81 
  INTEGER, PARAMETER,PUBLIC :: ind_MVKOOH = 82 
  INTEGER, PARAMETER,PUBLIC :: ind_N2O5 = 83 
  INTEGER, PARAMETER,PUBLIC :: ind_NH2O = 84 
  INTEGER, PARAMETER,PUBLIC :: ind_HNO = 85 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCH3 = 86 
  INTEGER, PARAMETER,PUBLIC :: ind_H2O2 = 87 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3OH = 88 
  INTEGER, PARAMETER,PUBLIC :: ind_BrCl = 89 
  INTEGER, PARAMETER,PUBLIC :: ind_NH2 = 90 
  INTEGER, PARAMETER,PUBLIC :: ind_ISON = 91 
  INTEGER, PARAMETER,PUBLIC :: ind_IC3H7O2 = 92 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCH2O2 = 93 
  INTEGER, PARAMETER,PUBLIC :: ind_MGLYOX = 94 
  INTEGER, PARAMETER,PUBLIC :: ind_CO = 95 
  INTEGER, PARAMETER,PUBLIC :: ind_C3H6 = 96 
  INTEGER, PARAMETER,PUBLIC :: ind_LMEKO2 = 97 
  INTEGER, PARAMETER,PUBLIC :: ind_H2 = 98 
  INTEGER, PARAMETER,PUBLIC :: ind_CH4 = 99 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H4 = 100 
  INTEGER, PARAMETER,PUBLIC :: ind_Br2 = 101 
  INTEGER, PARAMETER,PUBLIC :: ind_HNO3 = 102 
  INTEGER, PARAMETER,PUBLIC :: ind_LC4H9O2 = 103 
  INTEGER, PARAMETER,PUBLIC :: ind_BrNO3 = 104 
  INTEGER, PARAMETER,PUBLIC :: ind_SO2 = 105 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3OOH = 106 
  INTEGER, PARAMETER,PUBLIC :: ind_C5H8 = 107 
  INTEGER, PARAMETER,PUBLIC :: ind_ACETOL = 108 
  INTEGER, PARAMETER,PUBLIC :: ind_ISO2 = 109 
  INTEGER, PARAMETER,PUBLIC :: ind_MVK = 110 
  INTEGER, PARAMETER,PUBLIC :: ind_LC4H9NO3 = 111 
  INTEGER, PARAMETER,PUBLIC :: ind_MVKO2 = 112 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCl = 113 
  INTEGER, PARAMETER,PUBLIC :: ind_DMS = 114 
  INTEGER, PARAMETER,PUBLIC :: ind_LHOC3H6O2 = 115 
  INTEGER, PARAMETER,PUBLIC :: ind_ClNO3 = 116 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H5O2 = 117 
  INTEGER, PARAMETER,PUBLIC :: ind_HOBr = 118 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CHO = 119 
  INTEGER, PARAMETER,PUBLIC :: ind_O1D = 120 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CO3 = 121 
  INTEGER, PARAMETER,PUBLIC :: ind_H = 122 
  INTEGER, PARAMETER,PUBLIC :: ind_HBr = 123 
  INTEGER, PARAMETER,PUBLIC :: ind_ClO = 124 
  INTEGER, PARAMETER,PUBLIC :: ind_O3 = 125 
  INTEGER, PARAMETER,PUBLIC :: ind_O3P = 126 
  INTEGER, PARAMETER,PUBLIC :: ind_OH = 127 
  INTEGER, PARAMETER,PUBLIC :: ind_HO2 = 128 
  INTEGER, PARAMETER,PUBLIC :: ind_H2O = 129 
  INTEGER, PARAMETER,PUBLIC :: ind_HCl = 130 
  INTEGER, PARAMETER,PUBLIC :: ind_BrO = 131 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3O2 = 132 
  INTEGER, PARAMETER,PUBLIC :: ind_HCHO = 133 
  INTEGER, PARAMETER,PUBLIC :: ind_NO = 134 
  INTEGER, PARAMETER,PUBLIC :: ind_NO2 = 135 
  INTEGER, PARAMETER,PUBLIC :: ind_NO3 = 136 
  INTEGER, PARAMETER,PUBLIC :: ind_Br = 137 
  INTEGER, PARAMETER,PUBLIC :: ind_Cl = 138 

!   Index declaration for fixed species in C
!     C(ind_spc)

  INTEGER, PARAMETER,PUBLIC :: ind_O2 = 139 
  INTEGER, PARAMETER,PUBLIC :: ind_N2 = 140 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2 = 141 

!   Index declaration for dummy species

  INTEGER, PARAMETER,PUBLIC :: ind_H2OH2O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_N2D = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNITROGEN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2OO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2OOA = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2OH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3O2NO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3ONO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2O2NO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H5OH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2CHOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CHOHO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CHOHOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ETHGLY = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_GLYOX = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCH2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2CH2O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2CH2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2CO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCHCHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOOCH2CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOOCH2CO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOOCH2CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOOCH2CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HYETHO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H5NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H5O2NO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ETHOHNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCCH2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO3CH2CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO3CH2CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO3CH2PAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PHAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ALCOCH2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H5CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PROPACID = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C2H5CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PERPROACID = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C33CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CHCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CHOCOCH2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCH2CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCH2CO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCH2CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCH2CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCOCH2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOC2H4CO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOC2H4CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOC2H4CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2COCH2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2COCH2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2COCHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HYPROPO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HYPROPO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IPROPOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC3H7O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC3H7OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPROPOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PROPENOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C32OH13CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3DIALO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3DIALOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCOHCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCOHCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_METACETHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3PAN1 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3PAN2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCH2O2NO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC3H7NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NOA = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PPN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PR2O2HNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PRONO3BO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PROPOLNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCOHPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIACETO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIACETOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIACETOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BUT1ENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BUT2OLO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BUT2OLO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BUT2OLOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BUTENOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C312COCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C312COCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3H7CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C413COOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C44O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C44OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4CODIAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CBUT2ENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCHCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCHO2CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCOCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COOHCHCHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CHOC3COO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO23C3CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2C3CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2H3CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2H3CO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2H3CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2H3CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EZCH3CO2CHCHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EZCHOCCH3CHO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCCH3CHOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCCH3CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOCO2CH3CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HMAC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HO12CO3C4 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HVMK = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBUTALOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBUTDIAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBUTOLBO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBUTOLBOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IC4H10 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IC4H9O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IC4H9OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IPRCHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IPRCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IPRHOCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IPRHOCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IPRHOCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACR = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACRO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACRO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACROH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACROOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MBOOO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MEPROPENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MPROPENOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PERIBUACID = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TBUT2ENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TC4H9O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TC4H9OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZFUCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZFUO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZFUONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZFUOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO14O3CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO14O3CO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2C4DIAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EPXC4DIAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EPXDLCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EPXDLCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EPXDLCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCOC4DIAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALANHY = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALANHYO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALANHYOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALDALCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALDALCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALDIAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALDIALCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALDIALO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALDIALOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALNHYOHCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MECOACEOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MECOACETO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BUT2OLNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C312COPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4PAN5 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBUTOLBNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IC4H9NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MACRNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MVKNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PIPN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TC4H9NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EPXDLPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALDIALPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NBZFUO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NBZFUONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NBZFUOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC4DCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LBUT1ENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LBUT1ENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LHMVKABO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LHMVKABOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LBUT1ENNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LMEKNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C1ODC2O2C4OD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C1ODC2O2C4OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C1ODC2OOHC4OD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C1ODC3O2C4OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C1OOHC2O2C4OD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C1OOHC2OOHC4OD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C1OOHC3O2C4OD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4MDIAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C511O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C511OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C512O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C512OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C513CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C513O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C513OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C514O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C514OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C59O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C59OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CHOC3COCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CHOC3COOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO13C4CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO23C4CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO23C4CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO23C4CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DB1O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DB1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DB1OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DB2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DB2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOC5 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPAOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPBO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPBOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPBOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPDO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPDOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPDOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MBO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MBOACO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MBOCOCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ME3FURAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ACCOMECHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ACCOMECO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ACCOMECO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C24O3CCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4CO2DBCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4CO2DCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5134CO2OH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C54CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO14O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO14OH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO14OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5DIALCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5DIALO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5DIALOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5DICARB = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5DICARBO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5DICAROOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MC3ODBCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MMALANHY = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MMALANHYO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MMALNHYOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLFUO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLFUONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLFUOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4MCONO3OH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C514NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5PAN9 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CHOC3COPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DB1NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPBDNO3O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPBNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPDNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC4CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC4OHCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC4OHCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC4OHCPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NISOPO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NISOPOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NMBOBCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ACCOMEPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4CO2DBPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5COO2NO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NC4MDCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NTLFUO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NTLFUOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LC578O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LC578OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LDISOPACO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LDISOPACO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LHC4ACCHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LHC4ACCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LHC4ACCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LHC4ACCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LIEPOX = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPAB = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPACO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPACO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPACOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPCD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPEFO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPEFO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LMBOABO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LMBOABOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LME3FURANO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LZCO3C23DBCOD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LZCO3HC23DBCOD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LZCODC23DBCOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LC5PAN1719 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPACNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPACNO3O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LMBOABNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNISO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNISOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNMBOABO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNMBOABOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LZCPANC23DBCOD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C614CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C614O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C614OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO235C5CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO235C6O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO235C6OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BENZENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZBIPERO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZBIPEROOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEPOXMUC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZOBIPEROH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO2DBCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO2DCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO2OHCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5COOHCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6125CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C615CO2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C615CO2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6CO4DB = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CATEC1O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CATEC1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CATEC1OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CATECHOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CPDKETENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PBZQCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PBZQO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PBZQONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PBZQOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PHENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PHENOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PHENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C614NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZBIPERNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZEMUCPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO2DBPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5CO2OHPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DNPHEN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DNPHENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DNPHENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOC6H4NO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NBZQO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NBZQOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCATECHOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCATECO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCATECOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCPDKETENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NDNPHENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NDNPHENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NNCATECO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NNCATECOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPHEN1O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPHEN1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPHEN1OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPHENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPHENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C235C6CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C716O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C716OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C721O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C721OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C722O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C722OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO235C6CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO235C6CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MCPDKETENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROO6R3O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROO6R3O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROO6R5O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BENZAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6CO2OHCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6COOHCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5CH2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5CH2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C7CO4DB = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CRESO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CRESOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CRESOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MCATEC1O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MCATEC1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MCATEC1OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MCATECHOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OXYL1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OXYL1OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PHCOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PTLQCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PTLQO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PTLQONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PTLQOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLBIPERO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLBIPEROOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCCO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCCO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCCO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEPOXMUC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLOBIPEROH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TOL1O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TOLUENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C7PAN3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6CO2OHPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C6H5CH2NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DNCRES = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DNCRESO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DNCRESOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MNCATECH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MNCATECO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MNCATECOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MNCPDKETENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MNNCATCOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MNNCATECO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCRES1O = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCRES1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCRES1OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCRESO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NCRESOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NDNCRESO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NDNCRESOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPTLQO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NPTLQOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PBZN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLBIPERNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TLEMUCPAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TOL1OHNO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C721CHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C721CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C721CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C810O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C810OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C811O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C812O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C812OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C813O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C813OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C85O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C85OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C86O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C86OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C89O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C89OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C8BC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C8BCCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C8BCO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C8BCOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NORPINIC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EBENZ = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_STYRENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_STYRENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_STYRENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C721PAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C810NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C89NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C8BCNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NSTYRENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NSTYRENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LXYL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C811CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C811CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C85CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C85CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C89CO2H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C89CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C89CO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C96O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C96OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C97O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C97OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C98O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C98OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NOPINDCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NOPINDO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NOPINDOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NOPINONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NOPINOO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NORPINAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NORPINENOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PINIC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C811PAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C89PAN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C96NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C9PAN2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LTMB = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_APINAOO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_APINBOO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_APINENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BPINAO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BPINAOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BPINENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C106O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C106OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C109CO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C109O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C109OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C96CO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CAMPHENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CARENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MENTHEN6ONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OH2MENTHEN6ONE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHMENTHEN6ONEO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PERPINONIC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PINAL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PINALO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PINALOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PINENOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PINONIC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_RO6R1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_RO6R3O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROO6R1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SABINENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BPINANO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C106NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C10PAN2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PINALNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_RO6R1NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROO6R1NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LAPINABNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LAPINABO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LAPINABOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNAPINABO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNAPINABOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNBPINABO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LNBPINABOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LHAROM = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LCHLORINE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LBROMINE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3H7I = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2ClI = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2I2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HI = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HIO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOI = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_I = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_I2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_I2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBr = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ICl = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_INO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_INO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IPART = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OIO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SF6 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LSULFUR = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Hg = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgCl = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgCl2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgBr = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgBr2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ClHgBr = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BrHgOBr = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ClHgOBr = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_RGM_cs = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Dummy = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PRODUCTS = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_M = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Op = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2p = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Np = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_N2p = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NOp = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_em = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_kJmol = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O4Sp = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2Dp = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2Pp = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CFCl3_c = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CF2Cl2_c = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_N2O_c = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CCl3_c = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CF2ClBr_c = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CF3Br_c = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LTERP = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LALK4 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LALK5 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LARO1 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LARO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LOLE1 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LOLE2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfPOG02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfPOG03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfPOG04 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfPOG05 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbPOG02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbPOG03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbPOG04 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfSOGsv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfSOGsv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbSOGsv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbSOGsv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfSOGiv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfSOGiv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfSOGiv03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LfSOGiv04 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbSOGiv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbSOGiv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbbSOGiv03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbSOGv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbSOGv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbSOGv03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbSOGv04 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbOSOGv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbOSOGv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LbOSOGv03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LaSOGv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LaSOGv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LaSOGv03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LaSOGv04 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LaOSOGv01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LaOSOGv02 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LaOSOGv03 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ACBZO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ALKNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ALKO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ALKOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ALKOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BCARY = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BENZO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BENZOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BEPOMUC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIGALD1 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIGALD2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIGALD3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIGALD4 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIGALKANE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BIGENE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BrONO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZALD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZOO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BZOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3H7O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C3H7OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CFC113 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CFC114 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CFC115 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_COF2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_COFCL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DICARBO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ELVOC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ENEO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_EOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_F = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_H1202 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_H2402 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCFC141B = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCFC142B = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCFC22 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HF = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCH2OO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HPALD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IEC1O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LIECHO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LIECO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LIECO3H = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LIMON = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPNO3NO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPNO3O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPNO3OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPOOHO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_LISOPOOHOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MALO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MBONO3O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MBOO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MBOOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MDIALO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MEKNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MVKN = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_MYRC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NTERPNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NTERPO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PACALD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PBZNIT = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TEPOMUC = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TERP2O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TERP2OOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TERPNO3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TERPO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TERPOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TERPROD1 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TERPROD2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TOLO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TOLOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_XYLENO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_XYLENOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_XYLOL = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_XYLOLO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_XYLOLOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2_1D = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2_1S = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ONIT = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4H8 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C4H9O3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5H12 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5H11O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5H6O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HYDRALD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5H9O3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISOPOOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5H12O2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ONITR = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_C5H10O4 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROO6R5P = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NH4 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SO4 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ISPD = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ClOO = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Rn = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Pb = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_XO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_XO2N = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROOH = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OLE = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ROR = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ORGNTR = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ACO2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PAR = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_RXPAR = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DMP = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DMB = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_TM5 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv0 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv1 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv2 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv3 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv4 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv5 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv6 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv7 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv8 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHv9 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O1S = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O21d = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2b1s = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2c1s = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2x = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2A3D = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2A3S = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O25P = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OH_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HO2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_H2O_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_H2O2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NH3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HONO_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HNO3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HNO4_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3OH_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOOH_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCHO_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3O2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3OOH_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CO2H_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_PAN_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3CHO_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COCH3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Cl_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Cl2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCl_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOCl_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Br_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Br2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HBr_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOBr_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BrCl_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_I2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IO_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HOI_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ICl_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBr_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SO2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_H2SO4_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DMS_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_DMSO_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Hg_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgO_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgOHOH_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgOHCl_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgCl2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgBr2_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgSO3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ClHgBr_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BrHgOBr_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ClHgOBr_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOH3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeCl3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeF3_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_OHm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HO2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_O2mm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Hp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NH4p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_NO4m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCOOm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HCO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3COOm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Clm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Cl2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ClOm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ClOHm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Brm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Br2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BrOm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BrOHm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_BrCl2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Br2Clm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Im_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IO2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_ICl2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_IBr2m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SO3mm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SO4m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SO4mm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_SO5m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HSO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HSO4m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HSO5m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH3SO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_CH2OHSO3m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Hgp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Hgpp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgOHp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgClp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgBrp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_HgSO32mm_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Fepp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOpp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOHp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOH2p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeClp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Feppp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeHOpp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeHO2pp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOHpp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOH4m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOHHO2p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeClpp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeCl2p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeBrpp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeBr2p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeFpp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeF2p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeSO3p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeSO4p_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeSO42m_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_FeOH2Fepppp_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_D1O_a01 = 0 
  INTEGER, PARAMETER,PUBLIC :: ind_Nap_a01 = 0 

!   Index declaration for fixed species in FIX
!      FIX(indf_spc) = C(ind_spc) = C(NVAR+ indf_spc)

  INTEGER, PARAMETER :: indf_O2 = 1 
  INTEGER, PARAMETER :: indf_N2 = 2 
  INTEGER, PARAMETER :: indf_CO2 = 3 


!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Global Data Module File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Global.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~






!   Declaration of global variables

!   C -  Concentration of all species
  REAL(kind=dp) :: C(NSPEC)
!   VAR -  Concentrations of variable species (global)
  REAL(kind=dp) :: VAR(NVAR)
!   FIX -  Concentrations of fixed species (global)
  REAL(kind=dp) :: FIX(NFIX)
!   VAR, FIX are chunks of array C
      EQUIVALENCE( C(1),VAR(1))
      EQUIVALENCE( C(139),FIX(1))
!   RCONST -  Rate constants (global)
  REAL(kind=dp) :: RCONST(NREACT)
!   TIME -  Current integration time
  REAL(kind=dp) :: TIME
!   SUN -  Sunlight intensity between [0,1]
  REAL(kind=dp) :: SUN
!   TEMP -  Temperature
  REAL(dp),dimension(:),allocatable             :: TEMP
!   TSTART -  Integration start time
  REAL(kind=dp) :: TSTART
!   TEND -  Integration end time
  REAL(kind=dp) :: TEND
!   DT -  Integration step
  REAL(kind=dp) :: DT
!   ATOL -  Absolute tolerance
  REAL(kind=dp) :: ATOL(NVAR)
!   RTOL -  Relative tolerance
  REAL(kind=dp) :: RTOL(NVAR)
!   STEPMIN -  Lower bound for integration step
  REAL(kind=dp) :: STEPMIN
!   STEPMAX -  Upper bound for integration step
  REAL(kind=dp) :: STEPMAX
!   CFACTOR -  Conversion factor for concentration units
  REAL(kind=dp) :: CFACTOR

!   INLINED global variable declarations

!  MECCA info from xmecca:
  CHARACTER(LEN=*), PUBLIC, PARAMETER :: &
    timestamp            = 'xmecca was run on 2021-07-28 at 13:45:38 by stergios on machine s81n11.grendel.cscaa.dk',&
    batchfile            = 'CMIP6-AMIP.bat',&
    gas_spc_file         = '-rw------- 1 stergios fysjcd 78259 Apr  8 08:46 gas.spc',&
    aqueous_spc_file     = '-rw------- 1 stergios fysjcd 10517 Apr  8 08:46 aqueous.spc',&
    gas_eqn_file         = '-rw------- 1 stergios fysjcd 312020 Apr  8 08:46 gas.eqn',&
    aqueous_eqn_file     = '-rw------- 1 stergios fysjcd 61362 Apr  8 08:46 aqueous.eqn',&
    gas_spc_file_sum     = '12686    77',&
    aqueous_spc_file_sum = '43424    11',&
    gas_eqn_file_sum     = '17865   305',&
    aqueous_eqn_file_sum = '55518    60',&
    rplfile              = 'mim1-CMIP6-deck-03',&
    wanted               = '(((Tr && (G || Het) && !I) || St) && !Hg)',&
    diagtracfile         = 'CMIP6-v03',&
    rxnrates             = 'n',&
    tag                  = 'n'
  LOGICAL, PARAMETER :: REQ_MCFCT = .FALSE.

!  from xmecca for aerosol:
  INTEGER, PARAMETER, PUBLIC :: APN = 1
!  from aerosol.awk:
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O2_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O3_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_OH_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_H2O_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_H2O2_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NH3_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO3_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HONO_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HNO3_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HNO4_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3OH_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCOOH_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCHO_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3O2_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3OOH_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3CO2H_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_PAN_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3CHO_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3COCH3_a  = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Cl_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Cl2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCl_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HOCl_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HBr_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HOBr_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrCl_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_I2_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IO_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HOI_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ICl_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IBr_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO2_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_H2SO4_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_DMS_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_DMSO_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hg_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgO_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgOHOH_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgOHCl_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgCl2_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgBr2_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgSO3_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClHgBr_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrHgOBr_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClHgOBr_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH3_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeCl3_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeF3_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O2m_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_OHm_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HO2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_O2mm_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hp_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NH4p_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_NO4m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCOOm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HCO3m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3COOm_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Clm_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Cl2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClOm_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ClOHm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Brm_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrOm_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrOHm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_BrCl2m_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Br2Clm_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Im_a        = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IO2m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_ICl2m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_IBr2m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO3m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO3mm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO4m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO4mm_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_SO5m_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HSO3m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HSO4m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HSO5m_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH3SO3m_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_CH2OHSO3m_a = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hgp_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Hgpp_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgOHp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgClp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgBrp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_HgSO32mm_a  = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Fepp_a      = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOpp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOHp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH2p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeClp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Feppp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeHOpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeHO2pp_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOHpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH4m_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOHHO2p_a  = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeClpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeCl2p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeBrpp_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeBr2p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeFpp_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeF2p_a     = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeSO3p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeSO4p_a    = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeSO42m_a   = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_FeOH2Fepppp_a = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_D1O_a       = 0
  INTEGER, PUBLIC, DIMENSION(APN) :: ind_Nap_a       = 0

!  variable declarations from gas.eqn:
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &
!    - - - - - - - - - - - -
!  inorganic and C1 chemistry:
  REAL :: k_HO2_HO2, k_NO3_NO2, k_NO2_HO2, k_HNO3_OH, k_CH3OOH_OH, &
          k_CH3CO2H_OH, k_ClO_ClO, k_BrO_NO2, k_I_NO2, k_DMS_OH, k_CH2OO_SO2
  REAL :: k_O3s  !  used in some *.rpl files
!  new methane chemistry:
  REAL :: beta_null_CH3NO3, beta_inf_CH3NO3, beta_CH3NO3, &
          k_NO2_CH3O2, k_CH2OO_NO2, beta_C2H5NO3, k_C6H5O2_NO2
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &
!    - - - - - - - - - - - -
!  only for mim1, see mim1.rpl:
  REAL :: k_PrO2_HO2, k_PrO2_NO, k_PrO2_CH3O2
  REAL :: k0_NO_HO2, k1d_NO_HO2, k1w_NO_HO2, k2d_NO_HO2, k2w_NO_HO2, &
          alpha_NO_HO2, beta_NO_HO2, f_BrO_CH3O2
!  end of mim1 block
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &
!    - - - - - - - - - - - -
!  organic chemistry (MIM, MAM, MOM...):
  REAL :: k_CH3CO3_NO2, k_PAN_M
  REAL(dp) :: KRO2NO, KAPHO2, KAPNO, KRO2NO3, KNO3AL, KDEC
!  maximum number of C atoms the rate coefficients are calculated for:
  REAL :: k_hsb, k_hsd, k_16hs, k_16hsz14, k_16hsz41, k_15hsdhb, k_14hsal, &
          k_15hs24vynal, k_15hs42vynal, k_hydec
  REAL :: j_IC3H7NO3, j_ACETOL, j_HPALD, j_ketene
  REAL(dp) :: RO2       !  sum of peroxy radicals
  REAL(dp) :: k_CH3O2    !  CH3O2 self- reaction
  REAL(dp) :: k_RO2RCO3, k_RO2pRO2, k_RO2sRO2, k_RO2tRO2, &
              k_RO2pORO2, k_RO2sORO2, k_RO2tORO2, &
              k_RO2LISOPACO2, k_RO2ISOPBO2, k_RO2ISOPDO2
  REAL(dp) :: k_CH2CHOH_OH_HCOOH, k_CH2CHOH_OH_ALD, k_CH2CHOH_HCOOH, k_ALD_HCOOH
  REAL(dp) :: k1_RO2RCO3, k1_RO2pRO2, k1_RO2sRO2, k1_RO2tRO2, &
              k1_RO2pORO2, k1_RO2sORO2, k1_RO2tORO2, &
              k1_RO2LISOPACO2, k1_RO2ISOPBO2, k1_RO2ISOPDO2
  REAL(dp), PARAMETER :: k_C6H5O_NO2  = 2.08E-12  !  ref3172
  REAL(dp), PARAMETER :: k_C6H5O_O3   = 2.86E-13  !  ref3171
!  SAR for OH reactions (ref3030 with introduction of temperature dependency)
!  parameters for the SAR on H- abstraction OH:
  REAL(dp) :: k_p, k_s, k_t, k_ROHRO, k_CO2H, k_ROOHRO
  REAL(dp), PARAMETER :: &
    f_sOH = 3.44, f_tOH = 2.68, &
    f_sOOH = 8.,  f_tOOH = 8., &
    f_ONO2 = 0.04 , f_CH2ONO2 = 0.2, &
    f_cpan= 0.25, f_allyl = 3.6, f_alk= 1.23, &
    f_CHO = 0.55, f_CO2H = 1.67, f_CO = 0.73, &
    f_O = 8.15, f_pCH2OH = 1.29, f_tCH2OH = 0.53
!  parameters for the SAR on OH- addtion to alkenes
!  Note for ach2ooh calculated
!  assuming RO2 distribution in ref3159
!  B, E, D, F, AC are 0.41, 0.02, 0.22, 0.05, 0.30 respectively
  REAL(dp) :: k_adp, k_ads, k_adt
  REAL(dp), PARAMETER :: &
    k_adsecprim = 3.0E-11, k_adtertprim = 5.7E-11 &
   , a_PAN = 0.56      , a_CHO = 0.31   , a_COCH3 = 0.76 &
   , a_CH2ONO2 = 0.64  , a_CH2OH = 1.7  , a_CH2OOH = 1.7 &
   , a_COH = 2.2       , a_COOH = 2.2   , a_CO2H = 0.25
!  Branching ratios for RO2 +  HO2 reactions
!  CH3CO3 +  HO2 has unique branching ratios (see reaction)
!  beta- hydroxy acyl peroxy radicals, e.g. HOCH2CO3
!  (GroC, PhD Thesis, ref3195)
  REAL(dp), PARAMETER :: r_CO3_OH  = 0.69, r_CO3_O3  = 0.10, r_CO3_OOH = 0.21
!  beta- keto peroxy radicals equal or bigger than CH3COCHO2CH3 (Dillon and Crowley, ref3192)
  REAL(dp), PARAMETER :: r_COCH2O2_OH  = 0.15, r_COCH2O2_OOH = 0.85
  REAL(dp), PARAMETER :: r_CHOHCH2O2_OH = 0.10  !  derived from Liu ref3193 for ISOPBO2 and ISOPDO2. Consistent with exp. data by &
!    C. GroC (MPIC)
  REAL(dp), PARAMETER :: r_CH2OCH2O2_OH  = 0.4  !  ref3175 for CH3OCH2O2
  REAL(dp), PARAMETER :: r_BIPERO2_OH = 0.40  !  ref3188 for toluene
  REAL(dp), PARAMETER :: f_HPAL = 0.5  !  HPALD-yield after 1,6- H- shift
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &
!    - - - - - - - - - - - -
!  Parameters included for acid-base equilibria calculation
!  used to enable the double use of the aqueous.eqn for liquid
!  and aerosol phase.
  REAL(dp), PARAMETER :: &
    f_equil_HO2   = 1.e5_dp, f_equil_HONO   = 1.e5_dp, &
    f_equil_HNO3  = 1.e7_dp, f_equil_HNO4   = 1.e5_dp, &
    f_equil_HCOOH = 1.e5_dp, f_equil_SO2    = 1.e9_dp, &
    f_equil_HSO3m = 1.e9_dp, f_equil_HSO4m  = 1.e7_dp, &
    f_equil_NH3   = 1.e7_dp, f_equil_H2O    = 1.e9_dp, &
    f_equil_CO2   = 1.e5_dp, f_equil_HCl    = 1.e2_dp, &
    f_equil_HBr   = 1.e6_dp,                           &
    f_equil_HOCl  = 1.e2_dp, f_equil_HOBr   = 1.e2_dp, &
    f_equil_ICl   = 1.e2_dp, f_equil_IBr    = 1.e2_dp, &
    f_equil_IClBr = 1.e2_dp, f_equil_H2SO4  = 1.e7_dp

!  from xmecca:
  LOGICAL, PARAMETER :: REQ_HET     = .TRUE.
  LOGICAL, PARAMETER :: REQ_PHOTRAT = .TRUE.
  LOGICAL, PARAMETER :: REQ_AEROSOL = .FALSE.

!  from xmecca:
  INTEGER, PARAMETER, PUBLIC :: MAX_MCEXP = 1
!KPPPP_DIRECTIVE vector variable definition start
  REAL(dp),dimension(:,:),allocatable           :: mcexp
!KPPPP_DIRECTIVE vector variable definition end

!  iht_ = index of troposheric heterogeneous reactions
  INTEGER, PARAMETER, PUBLIC :: &
    iht_N2O5      =  1, iht_HNO3      =  2, iht_Hg      =  3, iht_RGM       = 4
  INTEGER, PARAMETER, PUBLIC :: IHT_MAX = 4
!  ihs_ = index of stratospheric heterogeneous reactions
!  (must be the same as in messy_msbm.f90 !)
  INTEGER, PARAMETER :: &
    ihs_N2O5_H2O  =  1, ihs_HOCl_HCl  =  2, ihs_ClNO3_HCl =  3, &
    ihs_ClNO3_H2O =  4, ihs_N2O5_HCl  =  5, ihs_ClNO3_HBr =  6, &
    ihs_BrNO3_HCl =  7, ihs_HOCl_HBr  =  8, ihs_HOBr_HCl  =  9, &
    ihs_HOBr_HBr  = 10, ihs_BrNO3_H2O = 11, ihs_Hg        = 12, &
    ihs_RGM       = 13
  INTEGER, PARAMETER, PUBLIC :: IHS_MAX = 13
!KPPPP_DIRECTIVE vector variable definition start
!  IMPORTANT NOTES ABOUT TEMP, PRESS, AND CAIR:
!  -  The KPP variable "temp" is already defined automatically by KPP in
!    messy_mecca_kpp_global.f90. The KPP variables "press" and "cair" are
!    defined here.
!  -  The 3 variables temp, press, and cair are only used inside KPP.
!    They are different from the variables with the same names in the base
!    model (as used in the SMIL files *_si.f90 and *_box.f90)
!  -  Data transfer between the SMIL and the KPP variables is done via the
!    fill subroutines in messy_mecca_kpp.f90:
!    -  fill_temp transfers temperature
!    -  fill_press transfers pressure
!    -  fill_cair transfers cair (this is redundant because cair could be
!      calculated from temp and press; nevertheless, redundant transfer to
!      KPP is preferred to avoid potential numerical differences when
!      recalculating cair inside KPP)
  REAL(dp),dimension(:),allocatable             :: cair
  REAL(dp),dimension(:),allocatable             :: press
  REAL(dp),dimension(:),allocatable             :: temp_ion
  REAL(dp),dimension(:),allocatable             :: temp_elec
  REAL(dp),dimension(:,:),allocatable           :: xaer
  REAL(dp),dimension(:,:),allocatable           :: cvfac
  REAL(dp),dimension(:,:),allocatable           :: lwc
  REAL(dp),dimension(:,:,:),allocatable         :: k_exf
  REAL(dp),dimension(:,:,:),allocatable         :: k_exb
  REAL(dp),dimension(:,:),allocatable           :: k_exf_N2O5
  REAL(dp),dimension(:,:),allocatable           :: k_exf_ClNO3
  REAL(dp),dimension(:,:),allocatable           :: k_exf_BrNO3
  REAL(dp),dimension(:,:),allocatable           :: jx
  REAL(dp),dimension(:,:),allocatable           :: khet_Tr
  REAL(dp),dimension(:,:),allocatable           :: khet_St
!KPPPP_DIRECTIVE vector variable definition end
  INTEGER, PUBLIC  :: xnom7sulf = 1  !  = 1- xm7sulf

!  KPP info from xmecca:
  CHARACTER(LEN=*), PUBLIC, PARAMETER :: &
    mecca_spc_file     = '-rw-r--r-- 1 stergios fysjcd 91210 Jul 28 13:46 mecca.spc',&
    mecca_eqn_file     = '-rw-r--r-- 1 stergios fysjcd 74379 Jul 28 13:46 mecca.eqn',&
    mecca_spc_file_sum = '56290    90',&
    mecca_eqn_file_sum = '32784    73',&
    kppoption          = '4',&
    KPP_HOME           = '/home/stergios/models/messy_d2.55.1_grendel/messy/tools/kpp',&
    KPP_version        = '2.2.3_rs3',&
    integr             = 'rosenbrock_mz'

!   INLINED global variable declarations



!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Sparse Jacobian Data Structures File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_JacobianSP.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~






!   Sparse Jacobian Data


  INTEGER, PARAMETER, DIMENSION(360) :: LU_IROW_0 =  (/ &
       1,  2,  3,  4,  5,  6,  6,  6,  7,  7,  7,  7, &
       7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7, &
       7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7, &
       7,  7,  7,  7,  8,  8,  8,  8,  8,  8,  8,  9, &
       9,  9,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, &
      13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, &
      16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, &
      16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, &
      16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, &
      16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, &
      17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, &
      17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, &
      17, 17, 17, 17, 18, 18, 18, 19, 19, 20, 20, 21, &
      21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, &
      27, 28, 28, 29, 29, 30, 30, 30, 30, 31, 31, 32, &
      32, 33, 33, 34, 34, 34, 35, 35, 35, 36, 36, 37, &
      37, 38, 38, 39, 39, 40, 40, 40, 41, 41, 41, 42, &
      42, 42, 43, 43, 43, 44, 44, 44, 45, 45, 45, 46, &
      46, 46, 47, 47, 47, 48, 48, 48, 49, 49, 49, 49, &
      49, 49, 50, 50, 50, 50, 51, 51, 51, 51, 51, 52, &
      52, 52, 53, 53, 53, 53, 53, 54, 54, 54, 54, 55, &
      55, 55, 55, 56, 56, 56, 56, 57, 57, 57, 57, 58, &
      58, 58, 58, 59, 59, 59, 59, 59, 59, 59, 59, 60, &
      60, 60, 60, 61, 61, 61, 61, 62, 62, 62, 62, 63, &
      63, 63, 63, 64, 64, 64, 64, 65, 65, 65, 65, 65, &
      65, 66, 66, 66, 66, 67, 67, 67, 67, 68, 68, 68, &
      68, 68, 69, 69, 69, 69, 70, 70, 70, 70, 71, 71, &
      71, 71, 72, 72, 72, 72, 73, 73, 73, 73, 74, 74, &
      74, 74, 75, 75, 75, 75, 76, 76, 76, 76, 76, 76, &
      76, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 78 /) 
  INTEGER, PARAMETER, DIMENSION(360) :: LU_IROW_1 =  (/ &
      78, 79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 80, &
      81, 81, 81, 81, 81, 81, 81, 81, 82, 82, 82, 82, &
      83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 85, 85, &
      85, 85, 85, 85, 85, 85, 86, 86, 86, 86, 86, 86, &
      86, 86, 87, 87, 87, 87, 87, 87, 87, 88, 88, 88, &
      88, 88, 88, 88, 88, 88, 88, 88, 89, 89, 89, 89, &
      89, 89, 89, 89, 89, 89, 89, 89, 89, 90, 90, 90, &
      90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 91, 92, &
      92, 92, 92, 92, 92, 92, 93, 93, 93, 93, 93, 93, &
      93, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94, 94, &
      94, 94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95, &
      95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, &
      95, 95, 95, 95, 95, 95, 95, 95, 96, 96, 96, 96, &
      97, 97, 97, 97, 97, 97, 97, 97, 97, 98, 98, 98, &
      98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 99, &
     100,100,100,100,100,101,101,101,101,101,101,101, &
     101,101,101,101,101,101,102,102,102,102,102,102, &
     102,102,102,102,102,102,102,103,103,103,103,103, &
     103,103,104,104,104,104,104,104,105,105,105,105, &
     105,105,105,105,105,105,105,105,105,105,106,106, &
     106,106,106,106,107,107,107,107,108,108,108,108, &
     108,108,108,108,108,108,108,108,108,108,108,108, &
     108,109,109,109,109,109,109,109,109,110,110,110, &
     110,110,110,110,110,110,110,110,111,111,111,111, &
     111,111,111,111,111,111,111,112,112,112,112,112, &
     112,112,112,112,112,112,112,113,113,113,113,113, &
     113,113,113,114,114,114,114,114,114,115,115,115, &
     115,115,115,115,115,115,115,115,116,116,116,116, &
     116,116,116,116,117,117,117,117,117,117,117,117, &
     117,117,117,117,117,117,117,117,117,117,117,118 /) 
  INTEGER, PARAMETER, DIMENSION(360) :: LU_IROW_2 =  (/ &
     118,118,118,118,118,118,118,118,118,118,118,118, &
     118,118,118,118,119,119,119,119,119,119,119,119, &
     119,119,119,119,119,119,119,119,119,119,119,120, &
     120,120,120,120,120,120,120,120,120,120,120,120, &
     120,120,120,120,120,120,120,120,120,120,120,120, &
     120,120,120,120,120,120,121,121,121,121,121,121, &
     121,121,121,121,121,121,121,121,121,121,121,121, &
     121,121,121,121,121,121,121,121,121,121,121,121, &
     121,121,121,122,122,122,122,122,122,122,122,122, &
     122,122,122,122,122,122,122,122,122,122,122,122, &
     122,122,122,122,122,122,122,123,123,123,123,123, &
     123,123,123,123,123,123,123,123,123,123,123,123, &
     123,123,123,123,123,123,123,123,124,124,124,124, &
     124,124,124,124,124,124,124,124,124,124,124,124, &
     124,124,124,124,124,124,124,124,124,124,124,125, &
     125,125,125,125,125,125,125,125,125,125,125,125, &
     125,125,125,125,125,125,125,125,125,125,125,125, &
     125,125,126,126,126,126,126,126,126,126,126,126, &
     126,126,126,126,126,126,126,126,126,126,126,126, &
     126,126,126,126,126,126,126,126,126,126,126,126, &
     126,126,126,126,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,127,127,127,127, &
     127,127,127,127,127,127,127,127,128,128,128,128, &
     128,128,128,128,128,128,128,128,128,128,128,128 /) 
  INTEGER, PARAMETER, DIMENSION(360) :: LU_IROW_3 =  (/ &
     128,128,128,128,128,128,128,128,128,128,128,128, &
     128,128,128,128,128,128,128,128,128,128,128,128, &
     128,128,128,128,128,128,128,128,128,128,128,128, &
     129,129,129,129,129,129,129,129,129,129,129,129, &
     129,129,129,129,129,129,129,129,129,129,129,129, &
     129,129,129,129,129,129,129,129,129,129,129,129, &
     129,129,129,129,129,129,129,129,129,129,129,129, &
     129,129,129,129,129,129,129,129,129,129,129,129, &
     129,129,129,129,129,129,129,129,129,129,129,129, &
     129,129,129,129,129,129,130,130,130,130,130,130, &
     130,130,130,130,130,130,130,130,130,130,130,130, &
     130,130,130,130,130,130,130,130,130,130,130,130, &
     130,130,130,130,130,130,130,130,130,130,130,130, &
     131,131,131,131,131,131,131,131,131,131,131,131, &
     131,131,131,131,131,131,131,132,132,132,132,132, &
     132,132,132,132,132,132,132,132,132,132,132,132, &
     132,132,132,132,132,132,132,132,132,132,132,132, &
     132,132,132,132,132,132,132,132,132,132,133,133, &
     133,133,133,133,133,133,133,133,133,133,133,133, &
     133,133,133,133,133,133,133,133,133,133,133,133, &
     133,133,133,133,133,133,133,133,133,133,133,133, &
     133,133,133,134,134,134,134,134,134,134,134,134, &
     134,134,134,134,134,134,134,134,134,134,134,134, &
     134,134,134,134,134,134,134,134,134,134,134,134, &
     134,135,135,135,135,135,135,135,135,135,135,135, &
     135,135,135,135,135,135,135,135,135,135,135,135, &
     135,135,135,135,135,135,135,135,135,135,135,135, &
     135,135,135,135,135,135,135,135,135,135,136,136, &
     136,136,136,136,136,136,136,136,136,136,136,136, &
     136,136,136,136,136,136,136,136,136,136,136,136 /) 
  INTEGER, PARAMETER, DIMENSION(98) :: LU_IROW_4 =  (/ &
     136,137,137,137,137,137,137,137,137,137,137,137, &
     137,137,137,137,137,137,137,137,137,137,137,137, &
     137,137,137,137,137,137,137,137,137,137,137,137, &
     137,137,137,138,138,138,138,138,138,138,138,138, &
     138,138,138,138,138,138,138,138,138,138,138,138, &
     138,138,138,138,138,138,138,138,138,138,138,138, &
     138,138,138,138,138,138,138,138,138,138,138,138, &
     138,138,138,138,138,138,138,138,138,138,138,138, &
     138,138 /) 
  INTEGER, PARAMETER, DIMENSION(1538) :: LU_IROW =  (/&
    LU_IROW_0, LU_IROW_1, LU_IROW_2, LU_IROW_3, LU_IROW_4 /) 

  INTEGER, PARAMETER, DIMENSION(360) :: LU_ICOL_0 =  (/ &
       1,  2,  3,  4,  5,  6, 70,138,  2,  3,  7, 23, &
      24, 25, 26, 27, 28, 29, 33, 36, 37, 38, 39, 42, &
      43, 44, 45, 52, 56, 69, 70, 71, 72, 73, 74, 77, &
     120,127,137,138,  2,  3,  8, 24, 27, 77,120,  9, &
      30, 66,127,128, 10, 83, 11, 83,  5, 12, 13, 99, &
     120,127,138, 14, 95,127, 15, 49,120, 16, 19, 25, &
      26, 42, 44, 46, 49, 52, 56, 69, 71, 72, 73, 74, &
      77, 83, 84, 85, 90, 96, 98, 99,100,104,107,110, &
     113,116,117,118,119,120,121,122,123,124,125,126, &
     127,128,129,130,131,132,133,135,136,  1, 17, 20, &
      34, 35, 48, 49, 59, 64, 66, 68, 92, 93, 97,101, &
     102,103,105,109,112,114,115,117,121,122,127,128, &
     132,134,137,138, 18, 55,127, 19,124, 20, 46, 21, &
     127, 22,127, 23,120, 24,120, 25,120, 26,120, 27, &
     120, 28,127, 29,127, 30, 80,125,128, 31,127, 32, &
     127, 33,120, 34, 83,130, 35,124,131, 36,127, 37, &
     127, 38,127, 39,127, 40, 51,129, 41, 46,127, 42, &
     120,127, 43,127,138, 44,120,127, 45,127,138, 46, &
     126,127, 47, 91,127, 48,134,135, 48, 49, 90,120, &
     134,135, 50, 53, 85,127, 40, 51,105,127,129, 52, &
     120,127, 50, 53, 84, 85,127, 54,112,127,135, 55, &
      97,127,128, 56,120,127,138, 57,117,127,128, 58, &
     121,127,128, 20, 41, 46, 59,105,125,126,127, 60, &
      92,127,134, 61,109,127,128, 62,115,127,128, 63, &
      92,127,128, 64,127,128,135, 65,117,121,127,128, &
     132, 66,114,127,131, 67, 93,127,128, 68, 85,127, &
     134,135, 69,120,127,138, 70,127,137,138, 71,120, &
     127,138, 72,120,127,138, 73,120,127,138, 74,120, &
     127,138, 75,121,127,135, 76, 96,100,107,110,125, &
     127, 77,120,127,138, 78, 89,113,116,124,130,137 /) 
  INTEGER, PARAMETER, DIMENSION(360) :: LU_ICOL_1 =  (/ &
     138, 79,103,127,128, 80,114,125,127,136,137,138, &
      79, 81,103,111,127,128,132,134, 82,112,127,128, &
      83,129,130,135,136, 84, 90,125,128,135, 53, 84, &
      85, 90,125,127,128,135, 60, 63, 86, 92,127,128, &
     132,134, 87,100,107,125,127,128,138, 88, 92, 93, &
      96,103,109,112,117,125,127,132, 78, 89,101,104, &
     113,116,118,123,124,130,131,137,138, 31, 84, 90, &
     125,127,128,134,135, 91,107,109,127,134,136, 32, &
      63, 92,127,128,132,134, 67, 86, 92, 93,127,128, &
     132,134, 67, 82, 93, 94, 96,108,109,110,112,125, &
     127,128,132,134, 46, 47, 75, 82, 91, 94, 95, 96, &
      99,100,107,108,109,110,112,119,121,125,126,127, &
     128,132,133,134,135,136,137,138, 96,125,127,136, &
      55, 81, 97,103,111,127,128,132,134, 98, 99,120, &
     122,127,128,133,138, 96, 99,120,125,127,136,138, &
     100,125,127,137,138, 89,101,104,113,116,118,123, &
     124,127,130,131,137,138, 83,102,104,114,116,119, &
     123,127,129,130,133,135,136, 22, 79,103,127,128, &
     132,134,104,129,130,131,135,137, 51, 59, 66, 80, &
     105,114,125,126,127,129,131,136,137,138,106,127, &
     128,132,137,138,107,125,127,136, 54, 62, 82, 91, &
      93,107,108,109,112,115,125,127,128,132,134,135, &
     136,107,109,125,127,128,132,134,136, 61, 91,107, &
     109,110,125,127,128,132,134,136, 96, 97,103,111, &
     115,125,127,128,132,134,136, 54, 82,107,110,112, &
     125,127,128,132,134,135,136,113,116,123,124,127, &
     128,129,130,114,127,131,136,137,138, 62, 96,100, &
     115,125,127,128,134,136,137,138,116,123,124,126, &
     129,130,135,138, 21, 32, 57, 79, 81, 96,103,111, &
     115,117,121,125,127,128,132,134,136,137,138,101 /) 
  INTEGER, PARAMETER, DIMENSION(360) :: LU_ICOL_2 =  (/ &
     104,113,116,118,123,124,126,127,128,129,130,131, &
     132,135,137,138, 55, 57, 79, 96, 97,103,111,115, &
     117,119,121,125,127,128,132,134,136,137,138, 23, &
      24, 25, 26, 27, 33, 42, 44, 49, 52, 56, 69, 71, &
      72, 73, 74, 77, 90, 98, 99,120,122,125,127,128, &
     129,133,134,135,136,138, 18, 55, 58, 67, 75, 81, &
      82, 86, 92, 93, 94, 96, 97,103,107,108,109,110, &
     111,112,115,117,119,121,125,127,128,132,134,135, &
     136,137,138, 95, 96, 98, 99,100,107,108,109,110, &
     112,115,119,120,121,122,125,126,127,128,129,130, &
     132,133,134,135,136,137,138, 70,100,106,113,114, &
     116,118,119,121,123,124,125,126,127,128,129,130, &
     131,132,133,134,135,136,137,138, 19, 23, 24, 27, &
      33, 35, 77,113,116,120,122,123,124,125,126,127, &
     128,129,130,131,132,133,134,135,136,137,138, 59, &
      80, 84, 90, 96,100,105,107,110,114,120,121,122, &
     125,126,127,128,129,130,131,132,133,134,135,136, &
     137,138, 20, 25, 26, 33, 35, 42, 46, 48, 51, 59, &
      69, 71, 72, 73, 74, 77,105,114,116,118,120,122, &
     123,124,125,126,127,128,129,130,131,132,133,134, &
     135,136,137,138, 21, 22, 28, 29, 31, 32, 36, 37, &
      38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, &
      54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, &
      67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, &
      81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, &
      95, 96, 97, 98, 99,100,101,102,103,104,105,106, &
     107,108,109,110,111,112,113,114,115,116,117,118, &
     119,120,121,122,123,124,125,126,127,128,129,130, &
     131,132,133,134,135,136,137,138, 30, 57, 60, 61, &
      63, 64, 66, 76, 79, 80, 82, 85, 87, 88, 90, 91 /) 
  INTEGER, PARAMETER, DIMENSION(360) :: LU_ICOL_3 =  (/ &
      92, 93, 94, 96, 97,100,103,105,106,107,108,109, &
     110,111,112,114,115,117,119,121,122,124,125,126, &
     127,128,129,130,131,132,133,134,135,136,137,138, &
      21, 22, 28, 29, 31, 32, 36, 37, 38, 39, 40, 42, &
      43, 44, 45, 50, 51, 52, 53, 58, 62, 64, 65, 68, &
      69, 71, 72, 73, 74, 75, 76, 77, 79, 83, 84, 85, &
      86, 87, 90, 92, 96, 98, 99,100,102,103,104,105, &
     106,107,110,111,113,114,115,116,117,118,119,120, &
     121,122,123,124,125,126,127,128,129,130,131,132, &
     133,134,135,136,137,138, 43, 45, 56, 69, 70, 71, &
      72, 73, 74, 77, 83, 87, 98, 99,100,104,106,107, &
     113,114,116,118,119,120,121,122,123,124,125,126, &
     127,128,129,130,131,132,133,134,135,136,137,138, &
     104,114,118,123,124,125,126,127,128,129,130,131, &
     132,133,134,135,136,137,138,  4, 37, 52, 58, 65, &
      66, 70, 80, 86, 92, 93, 96, 99,103,106,107,109, &
     112,114,117,119,120,121,122,124,125,126,127,128, &
     129,130,131,132,133,134,135,136,137,138, 47, 61, &
      66, 67, 75, 82, 88, 91, 92, 93, 96, 99,100,103, &
     106,107,108,109,110,112,114,115,117,120,121,122, &
     124,125,126,127,128,129,130,131,132,133,134,135, &
     136,137,138, 48, 49, 53, 68, 84, 85, 90, 92, 93, &
      97,103,109,111,112,115,117,120,121,122,124,125, &
     126,127,128,129,130,131,132,133,134,135,136,137, &
     138,  1, 34, 47, 48, 54, 60, 64, 68, 75, 83, 85, &
      90, 91, 92, 93, 97,102,103,104,107,109,111,112, &
     114,115,116,117,119,121,123,124,125,126,127,128, &
     129,130,131,132,133,134,135,136,137,138, 64, 83, &
      96,102,104,107,114,116,117,119,121,123,124,125, &
     126,127,128,129,130,131,132,133,134,135,136,137 /) 
  INTEGER, PARAMETER, DIMENSION(98) :: LU_ICOL_4 =  (/ &
     138,  1,  2,  3, 28, 29, 36, 37, 38, 39, 70, 78, &
      89,100,101,104,106,113,114,116,118,119,121,123, &
     124,125,126,127,128,129,130,131,132,133,134,135, &
     136,137,138,  2, 19, 23, 24, 25, 26, 27, 33, 34, &
      36, 38, 39, 43, 44, 45, 52, 56, 69, 70, 71, 72, &
      73, 74, 77, 78, 83, 87, 89, 98, 99,100,101,104, &
     106,107,113,114,116,118,119,120,121,122,123,124, &
     125,126,127,128,129,130,131,132,133,134,135,136, &
     137,138 /) 
  INTEGER, PARAMETER, DIMENSION(1538) :: LU_ICOL =  (/&
    LU_ICOL_0, LU_ICOL_1, LU_ICOL_2, LU_ICOL_3, LU_ICOL_4 /) 

  INTEGER, PARAMETER, DIMENSION(139) :: LU_CROW =  (/ &
       1,  2,  3,  4,  5,  6,  9, 41, 48, 53, 55, 57, &
      59, 64, 67, 70,118,149,152,154,156,158,160,162, &
     164,166,168,170,172,174,178,180,182,184,187,190, &
     192,194,196,198,201,204,207,210,213,216,219,222, &
     225,231,235,240,243,248,252,256,260,264,268,276, &
     280,284,288,292,296,302,306,310,315,319,323,327, &
     331,335,339,343,350,354,362,366,373,381,385,390, &
     395,403,411,418,429,442,450,456,463,471,485,513, &
     517,526,534,541,546,559,572,579,585,599,605,609, &
     626,634,645,656,668,676,682,693,701,720,737,756, &
     787,820,848,873,900,927,965,1065,1117,1195,1237,1256, &
     1295,1336,1370,1415,1442,1480,1539 /) 

  INTEGER, PARAMETER, DIMENSION(139) :: LU_DIAG =  (/ &
       1,  2,  3,  4,  5,  6, 11, 43, 48, 53, 55, 58, &
      59, 64, 67, 70,119,149,152,154,156,158,160,162, &
     164,166,168,170,172,174,178,180,182,184,187,190, &
     192,194,196,198,201,204,207,210,213,216,219,222, &
     226,231,236,240,244,248,252,256,260,264,271,276, &
     280,284,288,292,296,302,306,310,315,319,323,327, &
     331,335,339,343,350,354,362,366,374,381,385,390, &
     397,405,411,418,430,444,450,458,466,474,491,513, &
     519,526,535,541,547,560,574,579,589,599,605,615, &
     627,638,648,660,668,676,685,693,710,724,746,776, &
     810,834,857,885,913,952,1053,1106,1185,1228,1248,1288, &
     1330,1365,1411,1439,1478,1538,1539 /) 



!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Utility Data Module File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Monitor.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~





  CHARACTER(LEN=32), PARAMETER, DIMENSION(90) :: SPC_NAMES_0 =  (/ &
     'BrNO2                           ','CF2ClBr                         ','CF3Br                           ',&
     'CH3I                            ','O3s                             ','CH3                             ',&
     'LCARBON                         ','LFLUORINE                       ','CH3SO3H                         ',&
     'NO3m_cs                         ','Hp_cs                           ','LO3s                            ',&
     'LossCH4                         ','LossCO                          ','LossN2O                         ',&
     'LossO3                          ','ProdO3                          ','BIACET                          ',&
     'Cl2O2                           ','S                               ','C2H6                            ',&
     'NC4H10                          ','CCl4                            ','CF2Cl2                          ',&
     'CF2ClCF2Cl                      ','CF3CF2Cl                        ','CFCl3                           ',&
     'CH2Br2                          ','CHBr3                           ','CH3SO3                          ',&
     'NH3                             ','C3H8                            ','CF2ClCFCl2                      ',&
     'ClNO2                           ','OClO                            ','CH2ClBr                         ',&
     'CH3Br                           ','CHCl2Br                         ','CHClBr2                         ',&
     'H2SO4                           ','SH                              ','CHF3                            ',&
     'CH2Cl2                          ','CH3CCl3                         ','CHCl3                           ',&
     'OCS                             ','NACA                            ','N                               ',&
     'N2O                             ','NH2OH                           ','SO3                             ',&
     'CH3Cl                           ','NHOH                            ','MPAN                            ',&
     'LMEKOOH                         ','CH3CHF2                         ','C2H5OOH                         ',&
     'CH3CO3H                         ','SO                              ','IC3H7NO3                        ',&
     'ISOOH                           ','LHOC3H6OOH                      ','IC3H7OOH                        ',&
     'HNO4                            ','CH3CO2H                         ','DMSO                            ',&
     'HYPERACET                       ','HONO                            ','CH2FCF3                         ',&
     'C2H2                            ','CH3CFCl2                        ','CHF2CF3                         ',&
     'CH3CF3                          ','CH2F2                           ','PAN                             ',&
     'HCOOH                           ','CHF2Cl                          ','Cl2                             ',&
     'LC4H9OOH                        ','CH3SO2                          ','MEK                             ',&
     'MVKOOH                          ','N2O5                            ','NH2O                            ',&
     'HNO                             ','CH3COCH3                        ','H2O2                            ',&
     'CH3OH                           ','BrCl                            ','NH2                             ' /)
  CHARACTER(LEN=32), PARAMETER, DIMENSION(51) :: SPC_NAMES_1 =  (/ &
     'ISON                            ','IC3H7O2                         ','CH3COCH2O2                      ',&
     'MGLYOX                          ','CO                              ','C3H6                            ',&
     'LMEKO2                          ','H2                              ','CH4                             ',&
     'C2H4                            ','Br2                             ','HNO3                            ',&
     'LC4H9O2                         ','BrNO3                           ','SO2                             ',&
     'CH3OOH                          ','C5H8                            ','ACETOL                          ',&
     'ISO2                            ','MVK                             ','LC4H9NO3                        ',&
     'MVKO2                           ','HOCl                            ','DMS                             ',&
     'LHOC3H6O2                       ','ClNO3                           ','C2H5O2                          ',&
     'HOBr                            ','CH3CHO                          ','O1D                             ',&
     'CH3CO3                          ','H                               ','HBr                             ',&
     'ClO                             ','O3                              ','O3P                             ',&
     'OH                              ','HO2                             ','H2O                             ',&
     'HCl                             ','BrO                             ','CH3O2                           ',&
     'HCHO                            ','NO                              ','NO2                             ',&
     'NO3                             ','Br                              ','Cl                              ',&
     'O2                              ','N2                              ','CO2                             ' /)
  CHARACTER(LEN=32), PARAMETER, DIMENSION(141) :: SPC_NAMES =  (/&
    SPC_NAMES_0, SPC_NAMES_1 /) 

  INTEGER, DIMENSION(1) :: LOOKAT
  INTEGER, DIMENSION(1) :: MONITOR
  CHARACTER(LEN=32), DIMENSION(1) :: SMASS
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_0 =  (/ &
     '          O1D + O2 --> O3P + O2                                                                     ',&
     '          O3P + O2 --> O3                                                                           ',&
     '          O1D + O3 --> 2 LossO3 + 2 O2                                                              ',&
     '          O3 + O3P --> 2 LossO3 + 2 O2                                                              ',&
     '            H + O2 --> HO2                                                                          ',&
     '            H + O3 --> LossO3 + OH + O2                                                             ',&
     '          H2 + O1D --> LossO3 + H + OH                                                              ',&
     '          O3P + OH --> LossO3 + H + O2                                                              ',&
     '           O3 + OH --> LossO3 + HO2 + O2                                                            ',&
     '           H2 + OH --> H + H2O                                                                      ',&
     '         O3P + HO2 --> LossO3 + OH + O2                                                             ',&
     '          O3 + HO2 --> LossO3 + OH + 2 O2                                                           ',&
     '           H + HO2 --> 2 OH                                                                         ',&
     '           H + HO2 --> H2 + O2                                                                      ',&
     '           H + HO2 --> ProdO3 + O3P + H2O                                                           ',&
     '          OH + HO2 --> H2O + O2                                                                     ',&
     '             2 HO2 --> H2O2 + O2                                                                    ',&
     '         O1D + H2O --> LossO3 + 2 OH                                                                ',&
     '         H2O2 + OH --> HO2 + H2O                                                                    ',&
     '            N + O2 --> ProdO3 + O3P + NO                                                            ',&
     '          O1D + N2 --> O3P + N2                                                                     ',&
     '         N2O + O1D --> LossN2O + LossO3 + 2 NO                                                      ',&
     '         N2O + O1D --> LossN2O + LossO3 + O2 + N2                                                   ',&
     '           O3 + NO --> NO2 + O2                                                                     ',&
     '            N + NO --> ProdO3 + O3P + N2                                                            ',&
     '         O3P + NO2 --> 2 LossO3 + NO + O2                                                           ',&
     '          O3 + NO2 --> NO3 + O2                                                                     ',&
     '           N + NO2 --> N2O + O3P                                                                    ',&
     '          NO + NO3 --> 2 NO2                                                                        ',&
     '         NO2 + NO3 --> N2O5                                                                         ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_1 =  (/ &
     '              N2O5 --> NO2 + NO3                                                                    ',&
     '           OH + NO --> HONO                                                                         ',&
     '          HO2 + NO --> ProdO3 + OH + NO2                                                            ',&
     '          OH + NO2 --> HNO3                                                                         ',&
     '         HO2 + NO2 --> HNO4                                                                         ',&
     '         HO2 + NO3 --> LossO3 + OH + NO2 + O2                                                       ',&
     '         HONO + OH --> ProdO3 + H2O + NO2                                                           ',&
     '         HNO3 + OH --> ProdO3 + H2O + NO3                                                           ',&
     '              HNO4 --> HO2 + NO2                                                                    ',&
     '         HNO4 + OH --> H2O + NO2                                                                    ',&
     '          NH3 + OH --> NH2 + H2O                                                                    ',&
     '          NH2 + O3 --> LossO3 + NH2O + O2                                                           ',&
     '         NH2 + HO2 --> NH2O + OH                                                                    ',&
     '         NH2 + HO2 --> HNO + H2O                                                                    ',&
     '          NH2 + NO --> OH + HO2 + N2                                                                ',&
     '          NH2 + NO --> H2O + N2                                                                     ',&
     '         NH2 + NO2 --> LossO3 + N2O + H2O                                                           ',&
     '         NH2 + NO2 --> LossO3 + NH2O + NO                                                           ',&
     '         NH2O + O3 --> LossO3 + NH2 + O2                                                            ',&
     '              NH2O --> NHOH                                                                         ',&
     '          HNO + OH --> H2O + NO                                                                     ',&
     '        NHOH + HNO --> NH2OH + NO                                                                   ',&
     '         HNO + NO2 --> LossO3 + HONO + NO                                                           ',&
     '         NHOH + OH --> HNO + H2O                                                                    ',&
     '        NH2OH + OH --> NHOH + H2O                                                                   ',&
     '          HNO + O2 --> HO2 + NO                                                                     ',&
     '         CH4 + O1D --> LossCH4 + LossO3 + 0.05 H2 + 0.4 H + 0.75 OH + 0.75 CH3O2 ... etc.           ',&
     '          CH4 + OH --> LossCH4 + H2O + CH3O2                                                        ',&
     '        CH3OH + OH --> HO2 + HCHO                                                                   ',&
     '       HO2 + CH3O2 --> CH3OOH + O2                                                                  ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_2 =  (/ &
     '        CH3O2 + NO --> ProdO3 + HO2 + HCHO + NO2                                                    ',&
     '       CH3O2 + NO3 --> LossO3 + HO2 + HCHO + NO2                                                    ',&
     '           2 CH3O2 --> 2 HO2 + 2 HCHO                                                               ',&
     '           2 CH3O2 --> CH3OH + HCHO + O2                                                            ',&
     '       CH3OOH + OH --> 0.3 OH + H2O + 0.7 CH3O2 + 0.3 HCHO                                          ',&
     '         OH + HCHO --> CO + HO2 + H2O                                                               ',&
     '        HCHO + NO3 --> LossO3 + CO + HNO3 + HO2                                                     ',&
     '           CO + OH --> LossCO + H + CO2                                                             ',&
     '        HCOOH + OH --> HO2 + H2O + CO2                                                              ',&
     '         C2H6 + OH --> C2H5O2 + H2O                                                                 ',&
     '         C2H4 + O3 --> LossO3 + 0.23125 HCOOH + 0.13875 H2O2 + 0.63 CO + 0.13 OH ... etc.           ',&
     '         C2H4 + OH --> 0.666667 LHOC3H6O2                                                           ',&
     '      C2H5O2 + HO2 --> C2H5OOH                                                                      ',&
     '       C2H5O2 + NO --> ProdO3 + CH3CHO + HO2 + NO2                                                  ',&
     '      C2H5O2 + NO3 --> LossO3 + CH3CHO + HO2 + NO2                                                  ',&
     '    C2H5O2 + CH3O2 --> 0.25 CH3OH + 0.75 CH3CHO + HO2 + 0.75 HCHO                                   ',&
     '      C2H5OOH + OH --> 0.3 C2H5O2 + 0.7 CH3CHO + 0.7 OH                                             ',&
     '       CH3CHO + OH --> CH3CO3 + H2O                                                                 ',&
     '      CH3CHO + NO3 --> LossO3 + HNO3 + CH3CO3                                                       ',&
     '      CH3CO2H + OH --> H2O + CH3O2 + CO2                                                            ',&
     '      CH3CO3 + HO2 --> CH3CO3H                                                                      ',&
     '      CH3CO3 + HO2 --> ProdO3 + CH3CO2H + O3                                                        ',&
     '       CH3CO3 + NO --> ProdO3 + CH3O2 + NO2 + CO2                                                   ',&
     '      CH3CO3 + NO2 --> PAN                                                                          ',&
     '      CH3CO3 + NO3 --> LossO3 + CH3O2 + NO2 + CO2                                                   ',&
     '    CH3CO3 + CH3O2 --> HO2 + CH3O2 + HCHO + CO2                                                     ',&
     '    CH3CO3 + CH3O2 --> CH3CO2H + HCHO                                                               ',&
     '   C2H5O2 + CH3CO3 --> 0.18 CH3CO2H + CH3CHO + 0.82 HO2 + 0.82 CH3O2                                ',&
     '          2 CH3CO3 --> 2 CH3O2 + O2 + 2 CO2                                                         ',&
     '      CH3CO3H + OH --> CH3CO3 + H2O                                                                 ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_3 =  (/ &
     '         NACA + OH --> CO + HCHO + NO2                                                              ',&
     '          PAN + OH --> CO + H2O + HCHO + NO2                                                        ',&
     '               PAN --> CH3CO3 + NO2                                                                 ',&
     '         C2H2 + OH --> CH3O2                                                                        ',&
     '         C3H8 + OH --> 0.82 IC3H7O2 + 0.18 C2H5O2 + H2O                                             ',&
     '         C3H6 + O3 --> LossO3 + 0.22 HCOOH + 0.03 CH3OH + 0.04 MGLYOX + 0.31 CO ... etc.            ',&
     '         C3H6 + OH --> LHOC3H6O2                                                                    ',&
     '        C3H6 + NO3 --> LossO3 + LC4H9NO3                                                            ',&
     '     IC3H7O2 + HO2 --> IC3H7OOH                                                                     ',&
     '      IC3H7O2 + NO --> ProdO3 + 0.04 IC3H7NO3 + 0.96 CH3COCH3 + 0.96 HO2 + 0.96 NO2 ... etc.        ',&
     '   IC3H7O2 + CH3O2 --> CH3COCH3 + 0.2 CH3OH + 0.8 HO2 + 0.8 HCHO                                    ',&
     '     IC3H7OOH + OH --> 0.7 CH3COCH3 + 0.3 IC3H7O2 + 0.7 OH                                          ',&
     '   LHOC3H6O2 + HO2 --> LHOC3H6OOH                                                                   ',&
     '    LHOC3H6O2 + NO --> ProdO3 + 0.02 LC4H9NO3 + 0.98 CH3CHO + 0.98 HO2 + 0.98 HCHO ... etc.         ',&
     '   LHOC3H6OOH + OH --> 0.5 ACETOL + 0.5 LHOC3H6O2 + 0.5 OH + H2O                                    ',&
     '     CH3COCH3 + OH --> CH3COCH2O2 + H2O                                                             ',&
     '  CH3COCH2O2 + HO2 --> HYPERACET                                                                    ',&
     '   CH3COCH2O2 + NO --> ProdO3 + CH3CO3 + HCHO + NO2                                                 ',&
     'CH3COCH2O2 + CH3O2 --> 0.5 CH3OH + 0.5 MGLYOX + 0.2 ACETOL + 0.3 CH3CO3 + 0.3 HO2 ... etc.          ',&
     '    HYPERACET + OH --> 0.3 CH3COCH2O2 + 0.7 MGLYOX + 0.7 OH                                         ',&
     '       ACETOL + OH --> MGLYOX + HO2                                                                 ',&
     '       MGLYOX + OH --> CO + CH3CO3                                                                  ',&
     '     IC3H7NO3 + OH --> CH3COCH3 + NO2                                                               ',&
     '       NC4H10 + OH --> LC4H9O2 + H2O                                                                ',&
     '   LC4H9O2 + CH3O2 --> 0.88 MEK + 0.18 CH3OH + 0.12 C2H5O2 + 0.12 CH3CHO + 1.23 HO2 ... etc.        ',&
     '     LC4H9O2 + HO2 --> LC4H9OOH                                                                     ',&
     '      LC4H9O2 + NO --> ProdO3 + 0.56 MEK + 0.16 LC4H9NO3 + 0.28 C2H5O2 + 0.28 CH3CHO ... etc.       ',&
     '     LC4H9OOH + OH --> 0.85 MEK + 0.15 LC4H9O2 + 0.85 OH + 0.85 H2O                                 ',&
     '          MVK + O3 --> LossO3 + 0.45 HCOOH + 0.9 MGLYOX + 0.22 CO + 0.1 CH3CO3 ... etc.             ',&
     '          MVK + OH --> MVKO2                                                                        ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_4 =  (/ &
     '       MVKO2 + HO2 --> MVKOOH                                                                       ',&
     '        MVKO2 + NO --> ProdO3 + 0.5 MGLYOX + 0.25 CO + 0.25 ACETOL + 0.25 CH3CO3 ... etc.           ',&
     '       MVKO2 + NO2 --> MPAN                                                                         ',&
     '     MVKO2 + CH3O2 --> 0.25 CH3OH + 0.5 MGLYOX + 0.125 CO + 0.375 ACETOL + 0.125 CH3CO3 ... etc.    ',&
     '           2 MVKO2 --> MGLYOX + 0.5 CO + ACETOL + HO2 + 0.5 HCHO                                    ',&
     '       MVKOOH + OH --> MVKO2                                                                        ',&
     '          MEK + OH --> LMEKO2                                                                       ',&
     '      LMEKO2 + HO2 --> LMEKOOH                                                                      ',&
     '       LMEKO2 + NO --> ProdO3 + 0.015 LC4H9NO3 + 0.985 CH3CHO + 0.985 CH3CO3 ... etc.               ',&
     '      LMEKOOH + OH --> 0.8 BIACET + 0.2 LMEKO2 + 0.8 OH                                             ',&
     '     LC4H9NO3 + OH --> MEK + H2O + NO2                                                              ',&
     '         MPAN + OH --> ACETOL + NO2                                                                 ',&
     '              MPAN --> MVKO2 + NO2                                                                  ',&
     '         C5H8 + O3 --> LossO3 + 0.28 HCOOH + 0.09 H2O2 + 0.14 CO + 0.65 MVK ... etc.                ',&
     '         C5H8 + OH --> ISO2                                                                         ',&
     '        C5H8 + NO3 --> LossO3 + ISON                                                                ',&
     '        ISO2 + HO2 --> ISOOH                                                                        ',&
     '         ISO2 + NO --> ProdO3 + 0.044 ISON + 0.956 MVK + 0.956 HO2 + 0.956 HCHO ... etc.            ',&
     '      ISO2 + CH3O2 --> 0.25 CH3OH + 0.25 MGLYOX + 0.25 ACETOL + 0.5 MVK + HO2 ... etc.              ',&
     '            2 ISO2 --> 2 MVK + HO2 + HCHO                                                           ',&
     '        ISOOH + OH --> MVK + OH                                                                     ',&
     '         ISON + OH --> NACA + ACETOL                                                                ',&
     '           O3 + Cl --> ClO + O2                                                                     ',&
     '         ClO + O3P --> 2 LossO3 + Cl + O2                                                           ',&
     '             2 ClO --> 2 LossO3 + Cl2 + O2                                                          ',&
     '             2 ClO --> 2 LossO3 + 2 Cl + O2                                                         ',&
     '             2 ClO --> LossO3 + OClO + Cl                                                           ',&
     '             2 ClO --> Cl2O2                                                                        ',&
     '             Cl2O2 --> 2 ClO                                                                        ',&
     '           H2 + Cl --> H + HCl                                                                      ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_5 =  (/ &
     '          HO2 + Cl --> HCl + O2                                                                     ',&
     '          HO2 + Cl --> ProdO3 + ClO + OH                                                            ',&
     '         H2O2 + Cl --> HO2 + HCl                                                                    ',&
     '          ClO + OH --> LossO3 + 0.94 HO2 + 0.06 HCl + 0.94 Cl + 0.06 O2                             ',&
     '         ClO + HO2 --> HOCl + O2                                                                    ',&
     '          OH + HCl --> H2O + Cl                                                                     ',&
     '         HOCl + OH --> ClO + H2O                                                                    ',&
     '          ClO + NO --> NO2 + Cl                                                                     ',&
     '         ClO + NO2 --> ClNO3                                                                        ',&
     '             ClNO3 --> ClO + NO2                                                                    ',&
     '       ClNO3 + O3P --> ClO + NO3                                                                    ',&
     '        ClNO3 + Cl --> Cl2 + NO3                                                                    ',&
     '          CH4 + Cl --> LossCH4 + HCl + CH3O2                                                        ',&
     '         HCHO + Cl --> CO + HO2 + HCl                                                               ',&
     '       CH3OOH + Cl --> OH + HCl + HCHO                                                              ',&
     '       ClO + CH3O2 --> LossO3 + HO2 + HCHO + Cl                                                     ',&
     '        CCl4 + O1D --> LCARBON + ClO + 3 Cl                                                         ',&
     '       CH3Cl + O1D --> LossO3 + OH + Cl                                                             ',&
     '        CH3Cl + OH --> LCARBON + H2O + Cl                                                           ',&
     '     CH3CCl3 + O1D --> 2 LCARBON + LossO3 + OH + 3 Cl                                               ',&
     '      CH3CCl3 + OH --> 2 LCARBON + H2O + 3 Cl                                                       ',&
     '         C2H4 + Cl --> 0.666667 LHOC3H6O2 + HCl                                                     ',&
     '       CH3CHO + Cl --> CH3CO3 + HCl                                                                 ',&
     '         C2H2 + Cl --> CH3 + LCARBON + HCl                                                          ',&
     '      CF2Cl2 + O1D --> LCARBON + 2 LFLUORINE + ClO + Cl                                             ',&
     '       CFCl3 + O1D --> LCARBON + LFLUORINE + ClO + 2 Cl                                             ',&
     '           O3 + Br --> BrO + O2                                                                     ',&
     '         O3P + BrO --> 2 LossO3 + Br + O2                                                           ',&
     '             2 BrO --> 2 LossO3 + 2 Br + O2                                                         ',&
     '             2 BrO --> 2 LossO3 + Br2 + O2                                                          ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_6 =  (/ &
     '          HO2 + Br --> HBr + O2                                                                     ',&
     '         HO2 + BrO --> HOBr + O2                                                                    ',&
     '          HBr + OH --> H2O + Br                                                                     ',&
     '        HOBr + O3P --> LossO3 + OH + BrO                                                            ',&
     '          Br2 + OH --> ProdO3 + HOBr + Br                                                           ',&
     '        BrNO3 + Br --> Br2 + NO3                                                                    ',&
     '          BrO + NO --> NO2 + Br                                                                     ',&
     '         BrO + NO2 --> BrNO3                                                                        ',&
     '             BrNO3 --> BrO + NO2                                                                    ',&
     '         HCHO + Br --> CO + HBr + HO2                                                               ',&
     '       CH3OOH + Br --> HBr + CH3O2                                                                  ',&
     '       BrO + CH3O2 --> HOBr + HCHO                                                                  ',&
     '       BrO + CH3O2 --> LossO3 + HO2 + HCHO + Br                                                     ',&
     '        CH3Br + OH --> LCARBON + H2O + Br                                                           ',&
     '         C2H4 + Br --> 0.666667 LHOC3H6O2 + HBr                                                     ',&
     '       CH3CHO + Br --> CH3CO3 + HBr                                                                 ',&
     '         C2H2 + Br --> LCARBON + HBr + CH3O2                                                        ',&
     '        CHBr3 + OH --> LCARBON + H2O + 3 Br                                                         ',&
     '       CH2Br2 + OH --> LCARBON + H2O + 2 Br                                                         ',&
     '         BrCl + Br --> Br2 + Cl                                                                     ',&
     '          Cl2 + Br --> BrCl + Cl                                                                    ',&
     '          Br2 + Cl --> BrCl + Br                                                                    ',&
     '         ClO + BrO --> LossO3 + OClO + Br                                                           ',&
     '         ClO + BrO --> 2 LossO3 + Br + Cl + O2                                                      ',&
     '         ClO + BrO --> 2 LossO3 + BrCl + O2                                                         ',&
     '         BrCl + Cl --> Cl2 + Br                                                                     ',&
     '      CHCl2Br + OH --> LCARBON + H2O + Br + 2 Cl                                                    ',&
     '      CHClBr2 + OH --> LCARBON + H2O + 2 Br + Cl                                                    ',&
     '      CH2ClBr + OH --> LCARBON + H2O + Br + Cl                                                      ',&
     '          SO2 + OH --> ProdO3 + SO3 + HO2                                                           ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_7 =  (/ &
     '          DMS + OH --> ProdO3 + CH3SO2 + HCHO                                                       ',&
     '          DMS + OH --> ProdO3 + DMSO + HO2                                                          ',&
     '         DMS + NO3 --> CH3SO2 + HNO3 + HCHO                                                         ',&
     '         DMSO + OH --> 0.4 CH3SO3H + 0.4 ProdO3 + 0.6 SO2 + 0.4 HO2 + 0.6 CH3O2 ... etc.            ',&
     '            CH3SO2 --> SO2 + CH3O2                                                                  ',&
     '       CH3SO2 + O3 --> CH3SO3                                                                       ',&
     '      CH3SO3 + HO2 --> CH3SO3H                                                                      ',&
     '          DMS + Cl --> ProdO3 + CH3SO2 + HCl + HCHO                                                 ',&
     '          DMS + Br --> ProdO3 + CH3SO2 + HBr + HCHO                                                 ',&
     '         DMS + BrO --> DMSO + Br                                                                    ',&
     '                O2 --> 2 ProdO3 + 2 O3P                                                             ',&
     '                O3 --> O1D + O2                                                                     ',&
     '                O3 --> O3P + O2                                                                     ',&
     '               H2O --> H + OH                                                                       ',&
     '              H2O2 --> 2 OH                                                                         ',&
     '               N2O --> LossN2O + ProdO3 + O1D + N2                                                  ',&
     '               NO2 --> O3P + NO                                                                     ',&
     '                NO --> ProdO3 + N + O3P                                                             ',&
     '               NO3 --> O3P + NO2                                                                    ',&
     '               NO3 --> 2 LossO3 + NO + O2                                                           ',&
     '              N2O5 --> NO2 + NO3                                                                    ',&
     '              HONO --> OH + NO                                                                      ',&
     '              HNO3 --> OH + NO2                                                                     ',&
     '              HNO4 --> 0.333 ProdO3 + 0.333 OH + 0.667 HO2 + 0.667 NO2 + 0.333 NO3 ... etc.         ',&
     '            CH3OOH --> OH + HO2 + HCHO                                                              ',&
     '              HCHO --> CO + H2                                                                      ',&
     '              HCHO --> CO + H + HO2                                                                 ',&
     '               CO2 --> ProdO3 + CO + O3P                                                            ',&
     '               CH4 --> LossCH4 + CO + 0.69 H2 + 0.31 H + 1.155 H2O                                  ',&
     '           C2H5OOH --> CH3CHO + OH + HO2                                                            ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_8 =  (/ &
     '            CH3CHO --> CO + HO2 + CH3O2                                                             ',&
     '           CH3CO3H --> OH + CH3O2 + CO2                                                             ',&
     '              NACA --> CO + HCHO + NO2                                                              ',&
     '               PAN --> CH3CO3 + NO2                                                                 ',&
     '          IC3H7OOH --> CH3COCH3 + OH + HO2                                                          ',&
     '          CH3COCH3 --> CH3CO3 + CH3O2                                                               ',&
     '            ACETOL --> CH3CO3 + HO2 + HCHO                                                          ',&
     '            MGLYOX --> CO + CH3CO3 + HO2                                                            ',&
     '         HYPERACET --> CH3CO3 + OH + HCHO                                                           ',&
     '          IC3H7NO3 --> CH3COCH3 + HO2 + NO2                                                         ',&
     '          LC4H9OOH --> 0.67 MEK + 0.33 C2H5O2 + 0.33 CH3CHO + OH + 0.67 HO2 ... etc.                ',&
     '               MVK --> CO + CH3CO3 + HO2 + HCHO                                                     ',&
     '            MVKOOH --> 0.5 MGLYOX + 0.25 CO + 0.25 ACETOL + 0.25 CH3CO3 + OH ... etc.               ',&
     '               MEK --> C2H5O2 + CH3CO3                                                              ',&
     '           LMEKOOH --> CH3CHO + CH3CO3 + OH                                                         ',&
     '            BIACET --> 2 CH3CO3                                                                     ',&
     '          LC4H9NO3 --> 0.67 MEK + 0.33 C2H5O2 + 0.33 CH3CHO + 0.67 HO2 + NO2 ... etc.               ',&
     '              MPAN --> ACETOL + NO2                                                                 ',&
     '             ISOOH --> MVK + OH + HO2 + HCHO                                                        ',&
     '              ISON --> MVK + HO2 + HCHO + NO2                                                       ',&
     '               Cl2 --> 2 Cl                                                                         ',&
     '             Cl2O2 --> 2 LossO3 + 2 Cl                                                              ',&
     '              OClO --> ProdO3 + ClO + O3P                                                           ',&
     '               HCl --> H + Cl                                                                       ',&
     '              HOCl --> LossO3 + OH + Cl                                                             ',&
     '             ClNO2 --> ProdO3 + NO2 + Cl                                                            ',&
     '             ClNO3 --> NO3 + Cl                                                                     ',&
     '             ClNO3 --> ClO + NO2                                                                    ',&
     '             CH3Cl --> CH3O2 + Cl                                                                   ',&
     '              CCl4 --> LCARBON + 4 Cl                                                               ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_9 =  (/ &
     '           CH3CCl3 --> 2 LCARBON + 3 Cl                                                             ',&
     '             CFCl3 --> LCARBON + LFLUORINE + 3 Cl                                                   ',&
     '            CF2Cl2 --> LCARBON + 2 LFLUORINE + 2 Cl                                                 ',&
     '               Br2 --> 2 Br                                                                         ',&
     '               BrO --> O3P + Br                                                                     ',&
     '              HOBr --> LossO3 + OH + Br                                                             ',&
     '             BrNO2 --> ProdO3 + NO2 + Br                                                            ',&
     '             BrNO3 --> 0.15 BrO + 0.15 NO2 + 0.85 NO3 + 0.85 Br                                     ',&
     '             CH3Br --> CH3O2 + Br                                                                   ',&
     '            CH2Br2 --> LCARBON + 2 Br                                                               ',&
     '             CHBr3 --> LCARBON + 3 Br                                                               ',&
     '             CF3Br --> LCARBON + 3 LFLUORINE + Br                                                   ',&
     '              BrCl --> Br + Cl                                                                      ',&
     '           CF2ClBr --> LCARBON + 2 LFLUORINE + Br + Cl                                              ',&
     '           CH2ClBr --> LCARBON + Br + Cl                                                            ',&
     '           CHCl2Br --> LCARBON + Br + 2 Cl                                                          ',&
     '           CHClBr2 --> LCARBON + 2 Br + Cl                                                          ',&
     '              CH3I --> CH3O2                                                                        ',&
     '        N2O5 + H2O --> LossO3 + 2 HNO3                                                              ',&
     '              N2O5 --> 2 NO3m_cs + 2 Hp_cs + 3 LossO3                                               ',&
     '        HOCl + HCl --> LossO3 + Cl2 + H2O                                                           ',&
     '       ClNO3 + HCl --> LossO3 + Cl2 + HNO3                                                          ',&
     '       ClNO3 + H2O --> HNO3 + HOCl                                                                  ',&
     '        N2O5 + HCl --> 2 LossO3 + ClNO2 + HNO3                                                      ',&
     '        HOBr + HBr --> LossO3 + Br2 + H2O                                                           ',&
     '       BrNO3 + H2O --> HNO3 + HOBr                                                                  ',&
     '       ClNO3 + HBr --> LossO3 + BrCl + HNO3                                                         ',&
     '       BrNO3 + HCl --> LossO3 + BrCl + HNO3                                                         ',&
     '        HOCl + HBr --> LossO3 + BrCl + H2O                                                          ',&
     '        HOBr + HCl --> LossO3 + BrCl + H2O                                                          ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(30) :: EQN_NAMES_10 =  (/ &
     '               O3s --> LO3s                                                                         ',&
     '           SO + O2 --> 2 ProdO3 + SO2 + O3P                                                         ',&
     '           SO + O3 --> SO2 + O2                                                                     ',&
     '            S + O2 --> ProdO3 + SO + O3P                                                            ',&
     '           SH + O2 --> SO + OH                                                                      ',&
     '         SO3 + H2O --> H2SO4                                                                        ',&
     '          OCS + OH --> SH + CO2                                                                     ',&
     '         OCS + O3P --> LossO3 + SO + CO                                                             ',&
     '               OCS --> S + CO                                                                       ',&
     '               SO2 --> SO + O3P                                                                     ',&
     '               SO3 --> SO2 + O3P                                                                    ',&
     '             H2SO4 --> SO3 + H2O                                                                    ',&
     '      CHF2Cl + O1D --> 0.72 LCARBON + 0.17 LossO3 + 0.28 CHF2Cl + 0.55 ClO ... etc.                 ',&
     '       CHF2Cl + OH --> LCARBON + H2O                                                                ',&
     '       CHF2Cl + Cl --> LCARBON + HCl                                                                ',&
     '            CHF2Cl --> LCARBON + 2 LFLUORINE + Cl                                                   ',&
     '     CH2FCF3 + O1D --> 0.7 LCARBON + 0.35 LossO3 + 0.65 CH2FCF3 + 0.65 O3P ... etc.                 ',&
     '      CH2FCF3 + OH --> 2 LCARBON + H2O                                                              ',&
     '      CH2FCF3 + Cl --> 2 LCARBON + HCl                                                              ',&
     '  CF2ClCFCl2 + O1D --> 1.6 LCARBON + 0.2 CF2ClCFCl2 + 0.8 ClO + 0.2 O3P + 1.6 Cl ... etc.           ',&
     '        CF2ClCFCl2 --> 2 LCARBON + 3 Cl                                                             ',&
     '       CH2Cl2 + OH --> LCARBON + H2O                                                                ',&
     '       CH2Cl2 + Cl --> LCARBON + HCl                                                                ',&
     '            CH2Cl2 --> LCARBON + 2 Cl                                                               ',&
     '        CHF3 + O1D --> 0.23 LCARBON + 0.23 LossO3 + 0.77 CHF3 + 0.77 O3P                            ',&
     '         CHF3 + OH --> LCARBON + H2O                                                                ',&
     '    CH3CFCl2 + O1D --> 0.69 LCARBON + 0.69 LossO3 + 0.31 CH3CFCl2 + 0.31 O3P ... etc.               ',&
     '     CH3CFCl2 + OH --> 2 LCARBON + H2O                                                              ',&
     '     CH3CFCl2 + Cl --> 2 LCARBON + HCl                                                              ',&
     '          CH3CFCl2 --> 2 LCARBON + 2 Cl                                                             ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(19) :: EQN_NAMES_11 =  (/ &
     '  CF2ClCF2Cl + O1D --> 0.75 LCARBON + 0.75 LossO3 + 0.25 CF2ClCF2Cl + 0.25 O3P ... etc.             ',&
     '        CF2ClCF2Cl --> 2 LCARBON + 2 Cl                                                             ',&
     '     CHF2CF3 + O1D --> 1.52 LCARBON + 0.76 LossO3 + 0.24 CHF2CF3 + 0.24 O3P ... etc.                ',&
     '      CHF2CF3 + OH --> 2 LCARBON + H2O                                                              ',&
     '      CHF2CF3 + Cl --> 2 LCARBON + HCl                                                              ',&
     '      CH3CF3 + O1D --> 0.8 LCARBON + 0.82 LossO3 + 0.18 CH3CF3 + 0.18 O3P + 0.38 OH ... etc.        ',&
     '       CH3CF3 + OH --> 2 LCARBON + H2O                                                              ',&
     '       CH3CF3 + Cl --> 2 LCARBON + HCl                                                              ',&
     '        CHCl3 + OH --> LCARBON + H2O + 3 Cl                                                         ',&
     '        CHCl3 + Cl --> LCARBON + HCl + 3 Cl                                                         ',&
     '             CHCl3 --> LCARBON + 3 Cl                                                               ',&
     '    CF3CF2Cl + O1D --> 0.6 LCARBON + 0.3 LossO3 + 0.7 CF3CF2Cl + 0.7 O3P                            ',&
     '          CF3CF2Cl --> 2 LCARBON + Cl                                                               ',&
     '       CH2F2 + O1D --> 0.3 LCARBON + 0.3 LossO3 + 0.7 CH2F2 + 0.7 O3P                               ',&
     '        CH2F2 + OH --> LCARBON + H2O                                                                ',&
     '        CH2F2 + Cl --> LCARBON + HCl                                                                ',&
     '     CH3CHF2 + O1D --> LCARBON + 0.66 LossO3 + 0.34 CH3CHF2 + 0.34 O1D + 0.15 OH ... etc.           ',&
     '      CH3CHF2 + OH --> 2 LCARBON                                                                    ',&
     '      CH3CHF2 + Cl --> 2 LCARBON + HCl                                                              ' /)
  CHARACTER(LEN=100), PARAMETER, DIMENSION(349) :: EQN_NAMES =  (/&
    EQN_NAMES_0, EQN_NAMES_1, EQN_NAMES_2, EQN_NAMES_3, EQN_NAMES_4, &
    EQN_NAMES_5, EQN_NAMES_6, EQN_NAMES_7, EQN_NAMES_8, EQN_NAMES_9, &
    EQN_NAMES_10, EQN_NAMES_11 /) 

  CHARACTER(LEN=32), PARAMETER, DIMENSION(90) :: EQN_TAGS_0 =  (/ &
     'G1000                           ','G1001                           ','G1002a                          ',&
     'G1003                           ','G2100                           ','G2101                           ',&
     'G2102                           ','G2103                           ','G2104                           ',&
     'G2105                           ','G2106                           ','G2107                           ',&
     'G2108a                          ','G2108b                          ','G2108c                          ',&
     'G2109                           ','G2110                           ','G2111                           ',&
     'G2112                           ','G3100                           ','G3101                           ',&
     'G3102a                          ','G3102b                          ','G3103                           ',&
     'G3104                           ','G3105                           ','G3106                           ',&
     'G3107                           ','G3108                           ','G3109                           ',&
     'G3110                           ','G3200                           ','G3201                           ',&
     'G3202                           ','G3203                           ','G3204                           ',&
     'G3205                           ','G3206                           ','G3207                           ',&
     'G3208                           ','G3209                           ','G3210                           ',&
     'G3211                           ','G3212                           ','G3213                           ',&
     'G3214                           ','G3215                           ','G3216                           ',&
     'G3217                           ','G3218                           ','G3219                           ',&
     'G3220                           ','G3221                           ','G3222                           ',&
     'G3223                           ','G3224                           ','G4100                           ',&
     'G4101                           ','G4102                           ','G4103                           ',&
     'G4104                           ','G4105                           ','G4106a                          ',&
     'G4106b                          ','G4107                           ','G4108                           ',&
     'G4109                           ','G4110                           ','G4111                           ',&
     'G4200                           ','G4201                           ','G4202                           ',&
     'G4203                           ','G4204                           ','G4205                           ',&
     'G4206                           ','G4207                           ','G4208                           ',&
     'G4209                           ','G4210                           ','G4211a                          ',&
     'G4211b                          ','G4212                           ','G4213                           ',&
     'G4214                           ','G4215a                          ','G4215b                          ',&
     'G4216                           ','G4217                           ','G4218                           ' /)
  CHARACTER(LEN=32), PARAMETER, DIMENSION(90) :: EQN_TAGS_1 =  (/ &
     'G4219                           ','G4220                           ','G4221                           ',&
     'G4222                           ','G4300                           ','G4301                           ',&
     'G4302                           ','G4303                           ','G4304                           ',&
     'G4305                           ','G4306                           ','G4307                           ',&
     'G4308                           ','G4309                           ','G4310                           ',&
     'G4311                           ','G4312                           ','G4313                           ',&
     'G4314                           ','G4315                           ','G4316                           ',&
     'G4317                           ','G4320                           ','G4400                           ',&
     'G4401                           ','G4402                           ','G4403                           ',&
     'G4404                           ','G4405                           ','G4406                           ',&
     'G4407                           ','G4408                           ','G4409                           ',&
     'G4410                           ','G4411                           ','G4412                           ',&
     'G4413                           ','G4414                           ','G4415                           ',&
     'G4416                           ','G4417                           ','G4418                           ',&
     'G4419                           ','G4500                           ','G4501                           ',&
     'G4502                           ','G4503                           ','G4504                           ',&
     'G4505                           ','G4506                           ','G4507                           ',&
     'G4508                           ','G6100                           ','G6101                           ',&
     'G6102a                          ','G6102b                          ','G6102c                          ',&
     'G6102d                          ','G6103                           ','G6200                           ',&
     'G6201a                          ','G6201b                          ','G6202                           ',&
     'G6203                           ','G6204                           ','G6205                           ',&
     'G6206                           ','G6300                           ','G6301                           ',&
     'G6302                           ','G6303                           ','G6304                           ',&
     'G6400                           ','G6401                           ','G6402                           ',&
     'G6403                           ','G6404                           ','G6405                           ',&
     'G6406                           ','G6407                           ','G6408                           ',&
     'G6409                           ','G6410                           ','G6411                           ',&
     'G6500                           ','G6501                           ','G7100                           ',&
     'G7101                           ','G7102a                          ','G7102b                          ' /)
  CHARACTER(LEN=32), PARAMETER, DIMENSION(90) :: EQN_TAGS_2 =  (/ &
     'G7200                           ','G7201                           ','G7202                           ',&
     'G7203                           ','G7204                           ','G7300                           ',&
     'G7301                           ','G7302                           ','G7303                           ',&
     'G7400                           ','G7401                           ','G7402a                          ',&
     'G7402b                          ','G7403                           ','G7404                           ',&
     'G7405                           ','G7406                           ','G7407                           ',&
     'G7408                           ','G7600                           ','G7601                           ',&
     'G7602                           ','G7603a                          ','G7603b                          ',&
     'G7603c                          ','G7604                           ','G7605                           ',&
     'G7606                           ','G7607                           ','G9200a                          ',&
     'G9400a                          ','G9400b                          ','G9401                           ',&
     'G9402                           ','G9403                           ','G9404                           ',&
     'G9405                           ','G9600                           ','G9700                           ',&
     'G9701                           ','J1000a                          ','J1001a                          ',&
     'J1001b                          ','J2100a                          ','J2101                           ',&
     'J3100                           ','J3101                           ','J3102a                          ',&
     'J3103a                          ','J3103b                          ','J3104                           ',&
     'J3200                           ','J3201                           ','J3202                           ',&
     'J4100                           ','J4101a                          ','J4101b                          ',&
     'J4102                           ','J4103                           ','J4200                           ',&
     'J4201                           ','J4202                           ','J4203                           ',&
     'J4204                           ','J4300                           ','J4301                           ',&
     'J4302                           ','J4303                           ','J4304                           ',&
     'J4306                           ','J4400                           ','J4401                           ',&
     'J4402                           ','J4403                           ','J4404                           ',&
     'J4405                           ','J4406                           ','J4407                           ',&
     'J4500                           ','J4501                           ','J6000                           ',&
     'J6100                           ','J6101                           ','J6200                           ',&
     'J6201                           ','J6300                           ','J6301a                          ',&
     'J6301b                          ','J6400                           ','J6401                           ' /)
  CHARACTER(LEN=32), PARAMETER, DIMENSION(79) :: EQN_TAGS_3 =  (/ &
     'J6402                           ','J6500                           ','J6501                           ',&
     'J7000                           ','J7100                           ','J7200                           ',&
     'J7300                           ','J7301                           ','J7400                           ',&
     'J7401                           ','J7402                           ','J7500                           ',&
     'J7600                           ','J7601                           ','J7602                           ',&
     'J7603                           ','J7604                           ','J8401a                          ',&
     'HET200                          ','HET201                          ','HET410                          ',&
     'HET420                          ','HET421                          ','HET422                          ',&
     'HET510                          ','HET520                          ','HET540                          ',&
     'HET541                          ','HET542                          ','HET543                          ',&
     'G01Diag                         ','G9100                           ','G9101                           ',&
     'G9102                           ','G9201                           ','G9202                           ',&
     'G9406                           ','G9407                           ','J9000                           ',&
     'J9001                           ','J9002                           ','J9003                           ',&
     'G6500dc01                       ','G6500dc02                       ','G6500dc03                       ',&
     'J6500dc01                       ','G5300dc01                       ','G5300dc02                       ',&
     'G5300dc03                       ','G6500dc04                       ','J6500dc02                       ',&
     'G6400dc01                       ','G6400dc02                       ','J6400dc01                       ',&
     'G5300dc04                       ','G5300dc05                       ','G6500dc05                       ',&
     'G6500dc06                       ','G6500dc07                       ','J6500dc03                       ',&
     'G6500dc08                       ','J6500dc04                       ','G5300dc06                       ',&
     'G5300dc07                       ','G6500dc09                       ','G5300dc08                       ',&
     'G5300dc09                       ','G6500dc10                       ','G6400dc03                       ',&
     'G6400dc04                       ','J6400dc02                       ','G6500dc11                       ',&
     'J6500dc05                       ','G5300dc10                       ','G5300dc11                       ',&
     'J6500dc06                       ','G5300dc12                       ','G5300dc13                       ',&
     'G6500dc12                       ' /)
  CHARACTER(LEN=32), PARAMETER, DIMENSION(349) :: EQN_TAGS =  (/&
    EQN_TAGS_0, EQN_TAGS_1, EQN_TAGS_2, EQN_TAGS_3 /) 

!   INLINED global variables

!   End INLINED global variables


! Automatic generated PUBLIC Statements for ip_ and ihs_ variables
 
! Automatic generated PUBLIC Statements for ip_ and ihs_ variables
 
! Automatic generated PUBLIC Statements for ip_ and ihs_ variables
 
  PUBLIC  ihs_N2O5_H2O,ihs_HOCl_HCl,ihs_ClNO3_HCl
  PUBLIC  ihs_ClNO3_H2O,ihs_N2O5_HCl,ihs_ClNO3_HBr
  PUBLIC  ihs_BrNO3_HCl,ihs_HOCl_HBr,ihs_HOBr_HCl
  PUBLIC  ihs_HOBr_HBr,ihs_BrNO3_H2O,ihs_Hg
  PUBLIC  ihs_RGM
! Automatic generated PUBLIC Statements for ip_ and ihs_ variables
 
! Automatic generated PUBLIC Statements for ip_ and ihs_ variables
 
 
!  variable definations from  individual module headers
 
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Initialization File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Initialize.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~





!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Numerical Integrator (Time-Stepping) File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Integrator.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   INTEGRATE -  Integrator routine
!     Arguments :
!        TIN       -  Start Time for Integration
!        TOUT      -  End Time for Integration
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


  SAVE
!  ~~~>  Statistics on the work performed by the Rosenbrock method
  INTEGER :: Nfun,Njac,Nstp,Nacc,Nrej,Ndec,Nsol,Nsng
  INTEGER, PARAMETER :: ifun=1, ijac=2, istp=3, iacc=4, &
    irej=5, idec=6, isol=7, isng=8, itexit=1, ihexit=2
    

!  description of the error numbers IERR
  CHARACTER(LEN=50), PARAMETER, DIMENSION(- 8:1) :: IERR_NAMES =  (/&
    'Matrix is repeatedly singular                     ',& ! -8
    'Step size too small                               ',& ! -7
    'No of steps exceeds maximum bound                 ',& ! -6
    'Improper tolerance values                         ',& ! -5
    'FacMin/FacMax/FacRej must be positive             ',& ! -4
    'Hmin/Hmax/Hstart must be positive                 ',& ! -3
    'Selected Rosenbrock method not implemented        ',& ! -2
    'Improper value for maximal no of steps            ',& ! -1
    '                                                  ',& !  0 (not used)
    'Success                                           ' /) !  1

!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Linear Algebra Data and Routines File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_LinearAlgebra.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~






!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   The ODE Jacobian of Chemical Model File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Jacobian.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~






!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   The ODE Function of Chemical Model File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Function.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~





!   A -  Rate for each equation
  REAL(kind=dp) :: A(NREACT)

!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   The Reaction Rates File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Rates.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~





!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!   Auxiliary Routines File
!
!   Generated by KPP- 2.2.3_rs3 symbolic chemistry Kinetics PreProcessor
!         (http://www.cs.vt.edu/~asandu/Software/KPP)
!   KPP is distributed under GPL, the general public licence
!         (http://www.gnu.org/copyleft/gpl.html)
!   (C) 1995- 1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
!   (C) 1997- 2005, A. Sandu, Michigan Tech, Virginia Tech
!       With important contributions from:
!          M. Damian, Villanova University, USA
!          R. Sander, Max- Planck Institute for Chemistry, Mainz, Germany
!
!   File                 : messy_mecca_kpp_Util.f90
!   Time                 : Wed Jul 28 13:46:05 2021
!   Working directory    : /home/stergios/models/messy_d2.55.1_grendel/messy/tools/kp4/tmp_workdir
!   Equation file        : messy_mecca_kpp.kpp
!   Output root filename : messy_mecca_kpp
!
!   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~






!  HEADER MODULE initialize_kpp_ctrl_template

!  NOTES:
!  -  L_VECTOR is automatically defined by kp4
!  -  VL_DIM is automatically defined by kp4
!  -  I_LU_DI is automatically defined by kp4
!  -  WANTED is automatically defined by xmecca
!  -  ICNTRL RCNTRL are automatically defined by kpp
!  -  "USE messy_main_tools" is in Module_header of messy_mecca_kpp.f90
!  -  SAVE will be automatically added by kp4

! SAVE

!  FOR FIXED TIME STEP CONTROL
!  ... max. number of fixed time steps (sum must be 1)
  INTEGER, PARAMETER         :: NMAXFIXSTEPS = 50
!  ... switch for fixed time stepping
  LOGICAL, PUBLIC            :: l_fixed_step = .FALSE.
  INTEGER, PUBLIC            :: nfsteps = 1
!  ... number of kpp control parameters
  INTEGER, PARAMETER, PUBLIC :: NKPPCTRL = 20
!
  INTEGER,  DIMENSION(NKPPCTRL), PUBLIC     :: icntrl = 0
  REAL(DP), DIMENSION(NKPPCTRL), PUBLIC     :: rcntrl = 0.0_dp
  REAL(DP), DIMENSION(NMAXFIXSTEPS), PUBLIC :: t_steps = 0.0_dp

!  END HEADER MODULE initialize_kpp_ctrl_template

 
! Interface Block
 
  interface            Initialize
    module procedure   Initialize
  end interface        Initialize
 
  interface            INTEGRATE
    module procedure   INTEGRATE
  end interface        INTEGRATE
 
  interface            Fun
    module procedure   Fun
  end interface        Fun
 
  interface            Fun_SPLIT
    module procedure   Fun_SPLIT
  end interface        Fun_SPLIT
 
  interface            CalcStoichNum
    module procedure   CalcStoichNum
  end interface        CalcStoichNum
 
  interface            KppSolve
    module procedure   KppSolve
  end interface        KppSolve
 
  interface            WLAMCH
    module procedure   WLAMCH
  end interface        WLAMCH
 
  interface            WLAMCH_ADD
    module procedure   WLAMCH_ADD
  end interface        WLAMCH_ADD
 
  interface            Jac_SP
    module procedure   Jac_SP
  end interface        Jac_SP
 
  interface            Update_RCONST
    module procedure   Update_RCONST
  end interface        Update_RCONST
 
  interface            initialize_indexarrays
    module procedure   initialize_indexarrays
  end interface        initialize_indexarrays
 
  interface            initialize_kpp_ctrl
    module procedure   initialize_kpp_ctrl
  end interface        initialize_kpp_ctrl
 
  interface            k_arr
    module procedure   k_arr
  end interface        k_arr
 
  interface            k_3rd
    module procedure   k_3rd
  end interface        k_3rd
 
!interface not working  interface            WCOPY
!interface not working    module procedure   WCOPY
!interface not working  end interface        WCOPY
 
  interface            WSCAL
    module procedure   WSCAL
  end interface        WSCAL
 
!interface not working  interface            WAXPY
!interface not working    module procedure   WAXPY
!interface not working  end interface        WAXPY
 
  interface            Rosenbrock
    module procedure   Rosenbrock
  end interface        Rosenbrock
 
  interface            FunTemplate
    module procedure   FunTemplate
  end interface        FunTemplate
 
  interface            JacTemplate
    module procedure   JacTemplate
  end interface        JacTemplate
 
  interface            Update_SUN
    module procedure   Update_SUN
  end interface        Update_SUN
 
  interface            error_output
    module procedure   error_output
  end interface        error_output
 
  interface            KppDecomp
    module procedure   KppDecomp
  end interface        KppDecomp
 
  interface            kpp_integrate
    module procedure   kpp_integrate
  end interface        kpp_integrate
 
  interface            fill_TEMP
    module procedure   fill_TEMP
  end interface        fill_TEMP
  public               fill_TEMP
 
  interface            fill_mcexp
    module procedure   fill_mcexp
  end interface        fill_mcexp
  public               fill_mcexp
 
  interface            fill_cair
    module procedure   fill_cair
  end interface        fill_cair
  public               fill_cair
 
  interface            fill_press
    module procedure   fill_press
  end interface        fill_press
  public               fill_press
 
  interface            fill_temp_ion
    module procedure   fill_temp_ion
  end interface        fill_temp_ion
  public               fill_temp_ion
 
  interface            fill_temp_elec
    module procedure   fill_temp_elec
  end interface        fill_temp_elec
  public               fill_temp_elec
 
  interface            fill_xaer
    module procedure   fill_xaer
  end interface        fill_xaer
  public               fill_xaer
 
  interface            fill_cvfac
    module procedure   fill_cvfac
  end interface        fill_cvfac
  public               fill_cvfac
 
  interface            fill_lwc
    module procedure   fill_lwc
  end interface        fill_lwc
  public               fill_lwc
 
  interface            fill_k_exf
    module procedure   fill_k_exf
  end interface        fill_k_exf
  public               fill_k_exf
 
  interface            fill_k_exb
    module procedure   fill_k_exb
  end interface        fill_k_exb
  public               fill_k_exb
 
  interface            fill_k_exf_N2O5
    module procedure   fill_k_exf_N2O5
  end interface        fill_k_exf_N2O5
  public               fill_k_exf_N2O5
 
  interface            fill_k_exf_ClNO3
    module procedure   fill_k_exf_ClNO3
  end interface        fill_k_exf_ClNO3
  public               fill_k_exf_ClNO3
 
  interface            fill_k_exf_BrNO3
    module procedure   fill_k_exf_BrNO3
  end interface        fill_k_exf_BrNO3
  public               fill_k_exf_BrNO3
 
  interface            fill_jx
    module procedure   fill_jx
  end interface        fill_jx
  public               fill_jx
 
  interface            fill_khet_Tr
    module procedure   fill_khet_Tr
  end interface        fill_khet_Tr
  public               fill_khet_Tr
 
  interface            fill_khet_St
    module procedure   fill_khet_St
  end interface        fill_khet_St
  public               fill_khet_St
 
 
 CONTAINS
 
SUBROUTINE Initialize()




  INTEGER :: i
  REAL(kind=dp) :: x

  CFACTOR = 1.000000e+00_dp

  x = (0.)*CFACTOR
  DO i = 1, NVAR
    VAR(i) = x
  END DO

  x = (0.)*CFACTOR
  DO i = 1, NFIX
    FIX(i) = x
  END DO

!   constant rate coefficients
  RCONST(3) = 1.2e-10
  RCONST(7) = 1.2e-10
  RCONST(13) = 7.2e-11
  RCONST(14) = 6.9e-12
  RCONST(15) = 1.6e-12
  RCONST(19) = 1.8e-12
  RCONST(36) = 3.5e-12
  RCONST(49) = 1.2e-14
  RCONST(50) = 1300
  RCONST(54) = 1.66e-12
  RCONST(57) = 1.75e-10
  RCONST(62) = 1.3e-12
  RCONST(69) = 4e-13
  RCONST(75) = 2.3e-12
  RCONST(85) = 4e-12
  RCONST(124) = 2e-12
  RCONST(125) = 2e-12
  RCONST(126) = 3e-11
  RCONST(131) = 1.7e-12
  RCONST(132) = 3.2e-11
  RCONST(139) = 2e-12
  RCONST(140) = 2e-12
  RCONST(141) = 1e-10
  RCONST(142) = 1.3e-11
  RCONST(165) = 5.9e-11
  RCONST(167) = 3.3e-10
  RCONST(168) = 1.65e-10
  RCONST(170) = 3.25e-10
  RCONST(173) = 8e-11
  RCONST(175) = 1.4e-10
  RCONST(176) = 2.3e-10
  RCONST(179) = 2.7e-12
  RCONST(186) = 4.9e-11
  RCONST(200) = 3.32e-15
  RCONST(201) = 1.1e-15
  RCONST(206) = 1.45e-11
  RCONST(214) = 1e-10
  RCONST(216) = 3e-13
  RCONST(217) = 5e-11
  RCONST(218) = 3.3e-10
  RCONST(220) = 4.4e-13
  RCONST(304) = 2.3e-12
  RCONST(305) = 4e-19
  RCONST(313) = 1e-10
  RCONST(317) = 4.9e-11
  RCONST(320) = 2e-10
  RCONST(325) = 9.1e-12
  RCONST(327) = 2.6e-10
  RCONST(331) = 1.3e-10
  RCONST(333) = 1.2e-10
  RCONST(336) = 4.4e-11
  RCONST(342) = 5e-11
  RCONST(344) = 5.1e-11
  RCONST(347) = 1.75e-10
!   END constant rate coefficients

!   INLINED initializations

  rtol(:) = 1E-2_dp  !  relative tolerance
  atol(:) = 1E1_dp   !  absolute tolerance
  IF ((ind_OH  >0).AND.(ind_OH  <=NVAR))atol(ind_OH)  = 1._dp
  IF ((ind_NO3 >0).AND.(ind_NO3 <=NVAR))atol(ind_NO3) = 1._dp
  IF ((ind_Cl  >0).AND.(ind_Cl  <=NVAR))atol(ind_Cl)  = 1._dp
  IF ((ind_Br  >0).AND.(ind_Br  <=NVAR))atol(ind_Br)  = 1._dp
  IF ((ind_O1D >0).AND.(ind_O1D <=NVAR))atol(ind_O1D) = 1._dp

!   End INLINED initializations

      
END SUBROUTINE Initialize
 
SUBROUTINE INTEGRATE( TIN, TOUT, &
  ICNTRL_U, RCNTRL_U, ISTATUS_U, RSTATUS_U, IERR_U)


   REAL(kind=dp), INTENT(IN) :: TIN   !  Start Time
   REAL(kind=dp), INTENT(IN) :: TOUT  !  End Time
!  Optional input parameters and statistics
   INTEGER,  INTENT(IN),  OPTIONAL :: ICNTRL_U(20)
   REAL(kind=dp), INTENT(IN),  OPTIONAL :: RCNTRL_U(20)
   INTEGER,  INTENT(OUT), OPTIONAL :: ISTATUS_U(20)
   REAL(kind=dp), INTENT(OUT), OPTIONAL :: RSTATUS_U(20)
   INTEGER,  INTENT(OUT), OPTIONAL :: IERR_U

   INTEGER :: N_stp, N_acc, N_rej, N_sng
   SAVE N_stp, N_acc, N_rej, N_sng
   INTEGER :: i, IERR
   REAL(kind=dp) :: RCNTRL(20), RSTATUS(20)
   INTEGER :: ICNTRL(20), ISTATUS(20)

   ICNTRL(:)  = 0
   RCNTRL(:)  = 0.0_dp
   ISTATUS(:) = 0
   RSTATUS(:) = 0.0_dp

!  If optional parameters are given, and if they are >0,
!  then they overwrite default settings.
   IF (PRESENT(ICNTRL_U))THEN
     WHERE(ICNTRL_U(:) > 0) ICNTRL(:) = ICNTRL_U(:)
   END IF
   IF (PRESENT(RCNTRL_U))THEN
     WHERE(RCNTRL_U(:) > 0) RCNTRL(:) = RCNTRL_U(:)
   END IF

   CALL Rosenbrock(VAR,TIN,TOUT,   &
         ATOL,RTOL,                &
         RCNTRL,ICNTRL,RSTATUS,ISTATUS,IERR)

   STEPMIN = RCNTRL(ihexit)
!  if optional parameters are given for output they to return information
   IF (PRESENT(ISTATUS_U))ISTATUS_U(:) = ISTATUS(:)
   IF (PRESENT(RSTATUS_U))RSTATUS_U(:) = RSTATUS(:)
   IF (PRESENT(IERR_U))   IERR_U       = IERR

END SUBROUTINE INTEGRATE
 
SUBROUTINE Fun(V, F, RCT, Vdot)

!   V -  Concentrations of variable species (local)
  REAL(kind=dp) :: V(NVAR)
!   F -  Concentrations of fixed species (local)
  REAL(kind=dp) :: F(NFIX)
!   RCT -  Rate constants (local)
  REAL(kind=dp) :: RCT(NREACT)
!   Vdot -  Time derivative of variable species concentrations
  REAL(kind=dp) :: Vdot(NVAR)


!   Computation of equation rates
  A(1) = RCT(1)*V(120)*F(1)
  A(2) = RCT(2)*V(126)*F(1)
  A(3) = 1.2e-10*V(120)*V(125)
  A(4) = RCT(4)*V(125)*V(126)
  A(5) = RCT(5)*V(122)*F(1)
  A(6) = RCT(6)*V(122)*V(125)
  A(7) = 1.2e-10*V(98)*V(120)
  A(8) = RCT(8)*V(126)*V(127)
  A(9) = RCT(9)*V(125)*V(127)
  A(10) = RCT(10)*V(98)*V(127)
  A(11) = RCT(11)*V(126)*V(128)
  A(12) = RCT(12)*V(125)*V(128)
  A(13) = 7.2e-11*V(122)*V(128)
  A(14) = 6.9e-12*V(122)*V(128)
  A(15) = 1.6e-12*V(122)*V(128)
  A(16) = RCT(16)*V(127)*V(128)
  A(17) = RCT(17)*V(128)*V(128)
  A(18) = RCT(18)*V(120)*V(129)
  A(19) = 1.8e-12*V(87)*V(127)
  A(20) = RCT(20)*V(48)*F(1)
  A(21) = RCT(21)*V(120)*F(2)
  A(22) = RCT(22)*V(49)*V(120)
  A(23) = RCT(23)*V(49)*V(120)
  A(24) = RCT(24)*V(125)*V(134)
  A(25) = RCT(25)*V(48)*V(134)
  A(26) = RCT(26)*V(126)*V(135)
  A(27) = RCT(27)*V(125)*V(135)
  A(28) = RCT(28)*V(48)*V(135)
  A(29) = RCT(29)*V(134)*V(136)
  A(30) = RCT(30)*V(135)*V(136)
  A(31) = RCT(31)*V(83)
  A(32) = RCT(32)*V(127)*V(134)
  A(33) = RCT(33)*V(128)*V(134)
  A(34) = RCT(34)*V(127)*V(135)
  A(35) = RCT(35)*V(128)*V(135)
  A(36) = 3.5e-12*V(128)*V(136)
  A(37) = RCT(37)*V(68)*V(127)
  A(38) = RCT(38)*V(102)*V(127)
  A(39) = RCT(39)*V(64)
  A(40) = RCT(40)*V(64)*V(127)
  A(41) = RCT(41)*V(31)*V(127)
  A(42) = RCT(42)*V(90)*V(125)
  A(43) = RCT(43)*V(90)*V(128)
  A(44) = RCT(44)*V(90)*V(128)
  A(45) = RCT(45)*V(90)*V(134)
  A(46) = RCT(46)*V(90)*V(134)
  A(47) = RCT(47)*V(90)*V(135)
  A(48) = RCT(48)*V(90)*V(135)
  A(49) = 1.2e-14*V(84)*V(125)
  A(50) = 1300*V(84)
  A(51) = RCT(51)*V(85)*V(127)
  A(52) = RCT(52)*V(53)*V(85)
  A(53) = RCT(53)*V(85)*V(135)
  A(54) = 1.66e-12*V(53)*V(127)
  A(55) = RCT(55)*V(50)*V(127)
  A(56) = RCT(56)*V(85)*F(1)
  A(57) = 1.75e-10*V(99)*V(120)
  A(58) = RCT(58)*V(99)*V(127)
  A(59) = RCT(59)*V(88)*V(127)
  A(60) = RCT(60)*V(128)*V(132)
  A(61) = RCT(61)*V(132)*V(134)
  A(62) = 1.3e-12*V(132)*V(136)
  A(63) = RCT(63)*V(132)*V(132)
  A(64) = RCT(64)*V(132)*V(132)
  A(65) = RCT(65)*V(106)*V(127)
  A(66) = RCT(66)*V(127)*V(133)
  A(67) = RCT(67)*V(133)*V(136)
  A(68) = RCT(68)*V(95)*V(127)
  A(69) = 4e-13*V(76)*V(127)
  A(70) = RCT(70)*V(21)*V(127)
  A(71) = RCT(71)*V(100)*V(125)
  A(72) = RCT(72)*V(100)*V(127)
  A(73) = RCT(73)*V(117)*V(128)
  A(74) = RCT(74)*V(117)*V(134)
  A(75) = 2.3e-12*V(117)*V(136)
  A(76) = RCT(76)*V(117)*V(132)
  A(77) = RCT(77)*V(57)*V(127)
  A(78) = RCT(78)*V(119)*V(127)
  A(79) = RCT(79)*V(119)*V(136)
  A(80) = RCT(80)*V(65)*V(127)
  A(81) = RCT(81)*V(121)*V(128)
  A(82) = RCT(82)*V(121)*V(128)
  A(83) = RCT(83)*V(121)*V(134)
  A(84) = RCT(84)*V(121)*V(135)
  A(85) = 4e-12*V(121)*V(136)
  A(86) = RCT(86)*V(121)*V(132)
  A(87) = RCT(87)*V(121)*V(132)
  A(88) = RCT(88)*V(117)*V(121)
  A(89) = RCT(89)*V(121)*V(121)
  A(90) = RCT(90)*V(58)*V(127)
  A(91) = RCT(91)*V(47)*V(127)
  A(92) = RCT(92)*V(75)*V(127)
  A(93) = RCT(93)*V(75)
  A(94) = RCT(94)*V(70)*V(127)
  A(95) = RCT(95)*V(32)*V(127)
  A(96) = RCT(96)*V(96)*V(125)
  A(97) = RCT(97)*V(96)*V(127)
  A(98) = RCT(98)*V(96)*V(136)
  A(99) = RCT(99)*V(92)*V(128)
  A(100) = RCT(100)*V(92)*V(134)
  A(101) = RCT(101)*V(92)*V(132)
  A(102) = RCT(102)*V(63)*V(127)
  A(103) = RCT(103)*V(115)*V(128)
  A(104) = RCT(104)*V(115)*V(134)
  A(105) = RCT(105)*V(62)*V(127)
  A(106) = RCT(106)*V(86)*V(127)
  A(107) = RCT(107)*V(93)*V(128)
  A(108) = RCT(108)*V(93)*V(134)
  A(109) = RCT(109)*V(93)*V(132)
  A(110) = RCT(110)*V(67)*V(127)
  A(111) = RCT(111)*V(108)*V(127)
  A(112) = RCT(112)*V(94)*V(127)
  A(113) = RCT(113)*V(60)*V(127)
  A(114) = RCT(114)*V(22)*V(127)
  A(115) = RCT(115)*V(103)*V(132)
  A(116) = RCT(116)*V(103)*V(128)
  A(117) = RCT(117)*V(103)*V(134)
  A(118) = RCT(118)*V(79)*V(127)
  A(119) = RCT(119)*V(110)*V(125)
  A(120) = RCT(120)*V(110)*V(127)
  A(121) = RCT(121)*V(112)*V(128)
  A(122) = RCT(122)*V(112)*V(134)
  A(123) = RCT(123)*V(112)*V(135)
  A(124) = 2e-12*V(112)*V(132)
  A(125) = 2e-12*V(112)*V(112)
  A(126) = 3e-11*V(82)*V(127)
  A(127) = RCT(127)*V(81)*V(127)
  A(128) = RCT(128)*V(97)*V(128)
  A(129) = RCT(129)*V(97)*V(134)
  A(130) = RCT(130)*V(55)*V(127)
  A(131) = 1.7e-12*V(111)*V(127)
  A(132) = 3.2e-11*V(54)*V(127)
  A(133) = RCT(133)*V(54)
  A(134) = RCT(134)*V(107)*V(125)
  A(135) = RCT(135)*V(107)*V(127)
  A(136) = RCT(136)*V(107)*V(136)
  A(137) = RCT(137)*V(109)*V(128)
  A(138) = RCT(138)*V(109)*V(134)
  A(139) = 2e-12*V(109)*V(132)
  A(140) = 2e-12*V(109)*V(109)
  A(141) = 1e-10*V(61)*V(127)
  A(142) = 1.3e-11*V(91)*V(127)
  A(143) = RCT(143)*V(125)*V(138)
  A(144) = RCT(144)*V(124)*V(126)
  A(145) = RCT(145)*V(124)*V(124)
  A(146) = RCT(146)*V(124)*V(124)
  A(147) = RCT(147)*V(124)*V(124)
  A(148) = RCT(148)*V(124)*V(124)
  A(149) = RCT(149)*V(19)
  A(150) = RCT(150)*V(98)*V(138)
  A(151) = RCT(151)*V(128)*V(138)
  A(152) = RCT(152)*V(128)*V(138)
  A(153) = RCT(153)*V(87)*V(138)
  A(154) = RCT(154)*V(124)*V(127)
  A(155) = RCT(155)*V(124)*V(128)
  A(156) = RCT(156)*V(127)*V(130)
  A(157) = RCT(157)*V(113)*V(127)
  A(158) = RCT(158)*V(124)*V(134)
  A(159) = RCT(159)*V(124)*V(135)
  A(160) = RCT(160)*V(116)
  A(161) = RCT(161)*V(116)*V(126)
  A(162) = RCT(162)*V(116)*V(138)
  A(163) = RCT(163)*V(99)*V(138)
  A(164) = RCT(164)*V(133)*V(138)
  A(165) = 5.9e-11*V(106)*V(138)
  A(166) = RCT(166)*V(124)*V(132)
  A(167) = 3.3e-10*V(23)*V(120)
  A(168) = 1.65e-10*V(52)*V(120)
  A(169) = RCT(169)*V(52)*V(127)
  A(170) = 3.25e-10*V(44)*V(120)
  A(171) = RCT(171)*V(44)*V(127)
  A(172) = RCT(172)*V(100)*V(138)
  A(173) = 8e-11*V(119)*V(138)
  A(174) = RCT(174)*V(70)*V(138)
  A(175) = 1.4e-10*V(24)*V(120)
  A(176) = 2.3e-10*V(27)*V(120)
  A(177) = RCT(177)*V(125)*V(137)
  A(178) = RCT(178)*V(126)*V(131)
  A(179) = 2.7e-12*V(131)*V(131)
  A(180) = RCT(180)*V(131)*V(131)
  A(181) = RCT(181)*V(128)*V(137)
  A(182) = RCT(182)*V(128)*V(131)
  A(183) = RCT(183)*V(123)*V(127)
  A(184) = RCT(184)*V(118)*V(126)
  A(185) = RCT(185)*V(101)*V(127)
  A(186) = 4.9e-11*V(104)*V(137)
  A(187) = RCT(187)*V(131)*V(134)
  A(188) = RCT(188)*V(131)*V(135)
  A(189) = RCT(189)*V(104)
  A(190) = RCT(190)*V(133)*V(137)
  A(191) = RCT(191)*V(106)*V(137)
  A(192) = RCT(192)*V(131)*V(132)
  A(193) = RCT(193)*V(131)*V(132)
  A(194) = RCT(194)*V(37)*V(127)
  A(195) = RCT(195)*V(100)*V(137)
  A(196) = RCT(196)*V(119)*V(137)
  A(197) = RCT(197)*V(70)*V(137)
  A(198) = RCT(198)*V(29)*V(127)
  A(199) = RCT(199)*V(28)*V(127)
  A(200) = 3.32e-15*V(89)*V(137)
  A(201) = 1.1e-15*V(78)*V(137)
  A(202) = RCT(202)*V(101)*V(138)
  A(203) = RCT(203)*V(124)*V(131)
  A(204) = RCT(204)*V(124)*V(131)
  A(205) = RCT(205)*V(124)*V(131)
  A(206) = 1.45e-11*V(89)*V(138)
  A(207) = RCT(207)*V(38)*V(127)
  A(208) = RCT(208)*V(39)*V(127)
  A(209) = RCT(209)*V(36)*V(127)
  A(210) = RCT(210)*V(105)*V(127)
  A(211) = RCT(211)*V(114)*V(127)
  A(212) = RCT(212)*V(114)*V(127)
  A(213) = RCT(213)*V(114)*V(136)
  A(214) = 1e-10*V(66)*V(127)
  A(215) = RCT(215)*V(80)
  A(216) = 3e-13*V(80)*V(125)
  A(217) = 5e-11*V(30)*V(128)
  A(218) = 3.3e-10*V(114)*V(138)
  A(219) = RCT(219)*V(114)*V(137)
  A(220) = 4.4e-13*V(114)*V(131)
  A(221) = RCT(221)*F(1)
  A(222) = RCT(222)*V(125)
  A(223) = RCT(223)*V(125)
  A(224) = RCT(224)*V(129)
  A(225) = RCT(225)*V(87)
  A(226) = RCT(226)*V(49)
  A(227) = RCT(227)*V(135)
  A(228) = RCT(228)*V(134)
  A(229) = RCT(229)*V(136)
  A(230) = RCT(230)*V(136)
  A(231) = RCT(231)*V(83)
  A(232) = RCT(232)*V(68)
  A(233) = RCT(233)*V(102)
  A(234) = RCT(234)*V(64)
  A(235) = RCT(235)*V(106)
  A(236) = RCT(236)*V(133)
  A(237) = RCT(237)*V(133)
  A(238) = RCT(238)*F(3)
  A(239) = RCT(239)*V(99)
  A(240) = RCT(240)*V(57)
  A(241) = RCT(241)*V(119)
  A(242) = RCT(242)*V(58)
  A(243) = RCT(243)*V(47)
  A(244) = RCT(244)*V(75)
  A(245) = RCT(245)*V(63)
  A(246) = RCT(246)*V(86)
  A(247) = RCT(247)*V(108)
  A(248) = RCT(248)*V(94)
  A(249) = RCT(249)*V(67)
  A(250) = RCT(250)*V(60)
  A(251) = RCT(251)*V(79)
  A(252) = RCT(252)*V(110)
  A(253) = RCT(253)*V(82)
  A(254) = RCT(254)*V(81)
  A(255) = RCT(255)*V(55)
  A(256) = RCT(256)*V(18)
  A(257) = RCT(257)*V(111)
  A(258) = RCT(258)*V(54)
  A(259) = RCT(259)*V(61)
  A(260) = RCT(260)*V(91)
  A(261) = RCT(261)*V(78)
  A(262) = RCT(262)*V(19)
  A(263) = RCT(263)*V(35)
  A(264) = RCT(264)*V(130)
  A(265) = RCT(265)*V(113)
  A(266) = RCT(266)*V(34)
  A(267) = RCT(267)*V(116)
  A(268) = RCT(268)*V(116)
  A(269) = RCT(269)*V(52)
  A(270) = RCT(270)*V(23)
  A(271) = RCT(271)*V(44)
  A(272) = RCT(272)*V(27)
  A(273) = RCT(273)*V(24)
  A(274) = RCT(274)*V(101)
  A(275) = RCT(275)*V(131)
  A(276) = RCT(276)*V(118)
  A(277) = RCT(277)*V(1)
  A(278) = RCT(278)*V(104)
  A(279) = RCT(279)*V(37)
  A(280) = RCT(280)*V(28)
  A(281) = RCT(281)*V(29)
  A(282) = RCT(282)*V(3)
  A(283) = RCT(283)*V(89)
  A(284) = RCT(284)*V(2)
  A(285) = RCT(285)*V(36)
  A(286) = RCT(286)*V(38)
  A(287) = RCT(287)*V(39)
  A(288) = RCT(288)*V(4)
  A(289) = RCT(289)*V(83)*V(129)
  A(290) = RCT(290)*V(83)
  A(291) = RCT(291)*V(113)*V(130)
  A(292) = RCT(292)*V(116)*V(130)
  A(293) = RCT(293)*V(116)*V(129)
  A(294) = RCT(294)*V(83)*V(130)
  A(295) = RCT(295)*V(118)*V(123)
  A(296) = RCT(296)*V(104)*V(129)
  A(297) = RCT(297)*V(116)*V(123)
  A(298) = RCT(298)*V(104)*V(130)
  A(299) = RCT(299)*V(113)*V(123)
  A(300) = RCT(300)*V(118)*V(130)
  A(301) = RCT(301)*V(5)
  A(302) = RCT(302)*V(59)*F(1)
  A(303) = RCT(303)*V(59)*V(125)
  A(304) = 2.3e-12*V(20)*F(1)
  A(305) = 4e-19*V(41)*F(1)
  A(306) = RCT(306)*V(51)*V(129)
  A(307) = RCT(307)*V(46)*V(127)
  A(308) = RCT(308)*V(46)*V(126)
  A(309) = RCT(309)*V(46)
  A(310) = RCT(310)*V(105)
  A(311) = RCT(311)*V(51)
  A(312) = RCT(312)*V(40)
  A(313) = 1e-10*V(77)*V(120)
  A(314) = RCT(314)*V(77)*V(127)
  A(315) = RCT(315)*V(77)*V(138)
  A(316) = RCT(316)*V(77)
  A(317) = 4.9e-11*V(69)*V(120)
  A(318) = RCT(318)*V(69)*V(127)
  A(319) = RCT(319)*V(69)*V(138)
  A(320) = 2e-10*V(33)*V(120)
  A(321) = RCT(321)*V(33)
  A(322) = RCT(322)*V(43)*V(127)
  A(323) = RCT(323)*V(43)*V(138)
  A(324) = RCT(324)*V(43)
  A(325) = 9.1e-12*V(42)*V(120)
  A(326) = RCT(326)*V(42)*V(127)
  A(327) = 2.6e-10*V(71)*V(120)
  A(328) = RCT(328)*V(71)*V(127)
  A(329) = RCT(329)*V(71)*V(138)
  A(330) = RCT(330)*V(71)
  A(331) = 1.3e-10*V(25)*V(120)
  A(332) = RCT(332)*V(25)
  A(333) = 1.2e-10*V(72)*V(120)
  A(334) = RCT(334)*V(72)*V(127)
  A(335) = RCT(335)*V(72)*V(138)
  A(336) = 4.4e-11*V(73)*V(120)
  A(337) = RCT(337)*V(73)*V(127)
  A(338) = RCT(338)*V(73)*V(138)
  A(339) = RCT(339)*V(45)*V(127)
  A(340) = RCT(340)*V(45)*V(138)
  A(341) = RCT(341)*V(45)
  A(342) = 5e-11*V(26)*V(120)
  A(343) = RCT(343)*V(26)
  A(344) = 5.1e-11*V(74)*V(120)
  A(345) = RCT(345)*V(74)*V(127)
  A(346) = RCT(346)*V(74)*V(138)
  A(347) = 1.75e-10*V(56)*V(120)
  A(348) = RCT(348)*V(56)*V(127)
  A(349) = RCT(349)*V(56)*V(138)

!   Aggregate function
  Vdot(1) = - A(277)
  Vdot(2) = - A(284)
  Vdot(3) = - A(282)
  Vdot(4) = - A(288)
  Vdot(5) = - A(301)
  Vdot(6) = A(174)
  Vdot(7) = A(167)+ A(169)+ 2*A(170)+ 2*A(171)+ A(174)+ A(175)+ A(176)+ A(194)+ A(197)+ A(198)+ A(199)+ A(207)+ A(208)+ A(209)+ &
                     A(270)&
              &+ 2*A(271)+ A(272)+ A(273)+ A(280)+ A(281)+ A(282)+ A(284)+ A(285)+ A(286)+ A(287)+ 0.72*A(313)+ A(314)+ A(315)+ &
                     A(316)+ 0.7&
              &*A(317)+ 2*A(318)+ 2*A(319)+ 1.6*A(320)+ 2*A(321)+ A(322)+ A(323)+ A(324)+ 0.23*A(325)+ A(326)+ 0.69*A(327)+ &
                     2*A(328)+ 2&
              &*A(329)+ 2*A(330)+ 0.75*A(331)+ 2*A(332)+ 1.52*A(333)+ 2*A(334)+ 2*A(335)+ 0.8*A(336)+ 2*A(337)+ 2*A(338)+ A(339)&
              &+ A(340)+ A(341)+ 0.6*A(342)+ 2*A(343)+ 0.3*A(344)+ A(345)+ A(346)+ A(347)+ 2*A(348)+ 2*A(349)
  Vdot(8) = 2*A(175)+ A(176)+ A(272)+ 2*A(273)+ 3*A(282)+ 2*A(284)+ 2*A(316)
  Vdot(9) = 0.4*A(214)+ A(217)
  Vdot(10) = 2*A(290)
  Vdot(11) = 2*A(290)
  Vdot(12) = A(301)
  Vdot(13) = A(57)+ A(58)+ A(163)+ A(239)
  Vdot(14) = A(68)
  Vdot(15) = A(22)+ A(23)+ A(226)
  Vdot(16) = 2*A(3)+ 2*A(4)+ A(6)+ A(7)+ A(8)+ A(9)+ A(11)+ A(12)+ A(18)+ A(22)+ A(23)+ 2*A(26)+ A(36)+ A(42)+ A(47)+ A(48)+ &
                     A(49)+ A(53)&
               &+ A(57)+ A(62)+ A(67)+ A(71)+ A(75)+ A(79)+ A(85)+ A(96)+ A(98)+ A(119)+ A(134)+ A(136)+ 2*A(144)+ 2*A(145)+ &
                     2*A(146)&
               &+ A(147)+ A(154)+ A(166)+ A(168)+ A(170)+ 2*A(178)+ 2*A(179)+ 2*A(180)+ A(184)+ A(193)+ A(203)+ 2*A(204)+ &
                     2*A(205)+ 2&
               &*A(230)+ 2*A(262)+ A(265)+ A(276)+ A(289)+ 3*A(290)+ A(291)+ A(292)+ 2*A(294)+ A(295)+ A(297)+ A(298)+ A(299)+ &
                     A(300)&
               &+ A(308)+ 0.17*A(313)+ 0.35*A(317)+ 0.23*A(325)+ 0.69*A(327)+ 0.75*A(331)+ 0.76*A(333)+ 0.82*A(336)+ 0.3*A(342)+ &
                     0.3&
               &*A(344)+ 0.66*A(347)
  Vdot(17) = A(15)+ A(20)+ A(25)+ A(33)+ A(37)+ A(38)+ A(61)+ A(74)+ A(82)+ A(83)+ A(100)+ A(104)+ A(108)+ A(117)+ A(122)+ &
                     A(129)&
               &+ A(138)+ A(152)+ A(185)+ A(210)+ A(211)+ A(212)+ 0.4*A(214)+ A(218)+ A(219)+ 2*A(221)+ A(226)+ A(228)+ &
                     0.333*A(234)&
               &+ A(238)+ A(263)+ A(266)+ A(277)+ 2*A(302)+ A(304)
  Vdot(18) = 0.8*A(130)- A(256)
  Vdot(19) = A(148)- A(149)- A(262)
  Vdot(20) = - A(304)+ A(309)
  Vdot(21) = - A(70)
  Vdot(22) = - A(114)
  Vdot(23) = - A(167)- A(270)
  Vdot(24) = - A(175)- A(273)
  Vdot(25) = - 0.75*A(331)- A(332)
  Vdot(26) = - 0.3*A(342)- A(343)
  Vdot(27) = - A(176)- A(272)
  Vdot(28) = - A(199)- A(280)
  Vdot(29) = - A(198)- A(281)
  Vdot(30) = A(216)- A(217)
  Vdot(31) = - A(41)
  Vdot(32) = - A(95)
  Vdot(33) = - 0.8*A(320)- A(321)
  Vdot(34) = - A(266)+ A(294)
  Vdot(35) = A(147)+ A(203)- A(263)
  Vdot(36) = - A(209)- A(285)
  Vdot(37) = - A(194)- A(279)
  Vdot(38) = - A(207)- A(286)
  Vdot(39) = - A(208)- A(287)
  Vdot(40) = A(306)- A(312)
  Vdot(41) = - A(305)+ A(307)
  Vdot(42) = - 0.23*A(325)- A(326)
  Vdot(43) = - A(322)- A(323)- A(324)
  Vdot(44) = - A(170)- A(171)- A(271)
  Vdot(45) = - A(339)- A(340)- A(341)
  Vdot(46) = - A(307)- A(308)- A(309)
  Vdot(47) = - A(91)+ A(142)- A(243)
  Vdot(48) = - A(20)- A(25)- A(28)+ A(228)
  Vdot(49) = - A(22)- A(23)+ A(28)+ A(47)- A(226)
  Vdot(50) = A(52)- A(55)
  Vdot(51) = A(210)- A(306)- A(311)+ A(312)
  Vdot(52) = - A(168)- A(169)- A(269)
  Vdot(53) = A(50)- A(52)- A(54)+ A(55)
  Vdot(54) = A(123)- A(132)- A(133)- A(258)
  Vdot(55) = A(128)- A(130)- A(255)
  Vdot(56) = - 0.66*A(347)- A(348)- A(349)
  Vdot(57) = A(73)- A(77)- A(240)
  Vdot(58) = A(81)- A(90)- A(242)
  Vdot(59) = - A(302)- A(303)+ A(304)+ A(305)+ A(308)+ A(310)
  Vdot(60) = 0.04*A(100)- A(113)- A(250)
  Vdot(61) = A(137)- A(141)- A(259)
  Vdot(62) = A(103)- A(105)
  Vdot(63) = A(99)- A(102)- A(245)
  Vdot(64) = A(35)- A(39)- A(40)- A(234)
  Vdot(65) = - A(80)+ A(82)+ A(87)+ 0.18*A(88)
  Vdot(66) = A(212)- A(214)+ A(220)
  Vdot(67) = A(107)- A(110)- A(249)
  Vdot(68) = A(32)- A(37)+ A(53)- A(232)
  Vdot(69) = - 0.35*A(317)- A(318)- A(319)
  Vdot(70) = - A(94)- A(174)- A(197)
  Vdot(71) = - 0.69*A(327)- A(328)- A(329)- A(330)
  Vdot(72) = - 0.76*A(333)- A(334)- A(335)
  Vdot(73) = - 0.82*A(336)- A(337)- A(338)
  Vdot(74) = - 0.3*A(344)- A(345)- A(346)
  Vdot(75) = A(84)- A(92)- A(93)- A(244)
  Vdot(76) = - A(69)+ 0.23125*A(71)+ 0.22*A(96)+ 0.45*A(119)+ 0.28*A(134)
  Vdot(77) = - 0.72*A(313)- A(314)- A(315)- A(316)
  Vdot(78) = A(145)+ A(162)- A(201)+ A(206)- A(261)+ A(291)+ A(292)
  Vdot(79) = A(116)- A(118)- A(251)
  Vdot(80) = A(211)+ A(213)- A(215)- A(216)+ A(218)+ A(219)
  Vdot(81) = 0.88*A(115)+ 0.56*A(117)+ 0.85*A(118)- A(127)+ A(131)+ 0.67*A(251)- A(254)+ 0.67*A(257)
  Vdot(82) = A(121)- A(126)- A(253)
  Vdot(83) = A(30)- A(31)- A(231)- A(289)- A(290)- A(294)
  Vdot(84) = A(42)+ A(43)+ A(48)- A(49)- A(50)
  Vdot(85) = A(44)- A(51)- A(52)- A(53)+ A(54)- A(56)
  Vdot(86) = 0.96*A(100)+ A(101)+ 0.7*A(102)- A(106)+ A(113)+ A(245)- A(246)+ A(250)
  Vdot(87) = A(17)- A(19)+ 0.13875*A(71)+ 0.09*A(134)- A(153)- A(225)
  Vdot(88) = - A(59)+ A(64)+ 0.25*A(76)+ 0.03*A(96)+ 0.2*A(101)+ 0.5*A(109)+ 0.18*A(115)+ 0.25*A(124)+ 0.25*A(139)
  Vdot(89) = - A(200)+ A(201)+ A(202)+ A(205)- A(206)- A(283)+ A(297)+ A(298)+ A(299)+ A(300)
  Vdot(90) = A(41)- A(42)- A(43)- A(44)- A(45)- A(46)- A(47)- A(48)+ A(49)
  Vdot(91) = A(136)+ 0.044*A(138)- A(142)- A(260)
  Vdot(92) = 0.82*A(95)- A(99)- A(100)- A(101)+ 0.3*A(102)
  Vdot(93) = A(106)- A(107)- A(108)- A(109)+ 0.3*A(110)
  Vdot(94) = 0.04*A(96)+ 0.5*A(109)+ 0.7*A(110)+ A(111)- A(112)+ 0.9*A(119)+ 0.5*A(122)+ 0.5*A(124)+ A(125)+ 0.25*A(139)- A(248)&
               &+ 0.5*A(253)
  Vdot(95) = A(66)+ A(67)- A(68)+ 0.63*A(71)+ A(91)+ A(92)+ 0.31*A(96)+ A(112)+ 0.22*A(119)+ 0.25*A(122)+ 0.125*A(124)+ &
                     0.5*A(125)&
               &+ 0.14*A(134)+ A(164)+ A(190)+ A(236)+ A(237)+ A(238)+ A(239)+ A(241)+ A(243)+ A(248)+ A(252)+ 0.25*A(253)+ &
                     A(308)+ A(309)
  Vdot(96) = - A(96)- A(97)- A(98)
  Vdot(97) = A(127)- A(128)- A(129)+ 0.2*A(130)
  Vdot(98) = - A(7)- A(10)+ A(14)+ 0.05*A(57)- A(150)+ A(236)+ 0.69*A(239)
  Vdot(99) = - A(57)- A(58)+ 0.06*A(96)- A(163)- A(239)
  Vdot(100) = - A(71)- A(72)- A(172)- A(195)
  Vdot(101) = A(180)- A(185)+ A(186)+ A(200)- A(202)- A(274)+ A(295)
  Vdot(102) = A(34)- A(38)+ A(67)+ A(79)+ A(213)- A(233)+ 2*A(289)+ A(292)+ A(293)+ A(294)+ A(296)+ A(297)+ A(298)
  Vdot(103) = A(114)- A(115)- A(116)- A(117)+ 0.15*A(118)
  Vdot(104) = - A(186)+ A(188)- A(189)- A(278)- A(296)- A(298)
  Vdot(105) = - A(210)+ 0.6*A(214)+ A(215)+ A(302)+ A(303)- A(310)+ A(311)
  Vdot(106) = A(60)- A(65)- A(165)- A(191)- A(235)
  Vdot(107) = - A(134)- A(135)- A(136)
  Vdot(108) = 0.5*A(105)+ 0.2*A(109)- A(111)+ 0.25*A(122)+ 0.375*A(124)+ A(125)+ A(132)+ 0.25*A(139)+ A(142)- A(247)+ &
                     0.25*A(253)&
                &+ A(258)
  Vdot(109) = A(135)- A(137)- A(138)- A(139)- 2*A(140)
  Vdot(110) = - A(119)- A(120)+ 0.65*A(134)+ 0.956*A(138)+ 0.5*A(139)+ 2*A(140)+ A(141)- A(252)+ A(259)+ A(260)
  Vdot(111) = A(98)+ 0.02*A(104)+ 0.16*A(117)+ 0.015*A(129)- A(131)- A(257)
  Vdot(112) = A(120)- A(121)- A(122)- A(123)- A(124)- 2*A(125)+ A(126)+ A(133)+ 0.1*A(134)
  Vdot(113) = A(155)- A(157)- A(265)- A(291)+ A(293)- A(299)
  Vdot(114) = - A(211)- A(212)- A(213)- A(218)- A(219)- A(220)
  Vdot(115) = 0.666667*A(72)+ A(97)- A(103)- A(104)+ 0.5*A(105)+ 0.666667*A(172)+ 0.666667*A(195)
  Vdot(116) = A(159)- A(160)- A(161)- A(162)- A(267)- A(268)- A(292)- A(293)- A(297)
  Vdot(117) = A(70)- A(73)- A(74)- A(75)- A(76)+ 0.3*A(77)- A(88)+ 0.18*A(95)+ 0.06*A(96)+ 0.12*A(115)+ 0.28*A(117)+ 0.33*A(251)&
                &+ A(254)+ 0.33*A(257)
  Vdot(118) = A(182)- A(184)+ A(185)+ A(192)- A(276)- A(295)+ A(296)- A(300)
  Vdot(119) = A(74)+ A(75)+ 0.75*A(76)+ 0.7*A(77)- A(78)- A(79)+ A(88)+ 0.47*A(96)+ 0.98*A(104)+ 0.12*A(115)+ 0.28*A(117)+ 0.985&
                &*A(129)- A(173)- A(196)+ A(240)- A(241)+ 0.33*A(251)+ A(255)+ 0.33*A(257)
  Vdot(120) = - A(1)- A(3)- A(7)- A(18)- A(21)- A(22)- A(23)- A(57)- A(167)- A(168)- A(170)- A(175)- A(176)+ A(222)+ A(226)- &
                     A(313)&
                &- A(317)- A(320)- A(325)- A(327)- A(331)- A(333)- A(336)- A(342)- A(344)- 0.66*A(347)
  Vdot(121) = A(78)+ A(79)- A(81)- A(82)- A(83)- A(84)- A(85)- A(86)- A(87)- A(88)- 2*A(89)+ A(90)+ A(93)+ 0.23*A(96)+ A(108)+ &
                     0.3&
                &*A(109)+ A(112)+ 0.1*A(119)+ 0.25*A(122)+ 0.125*A(124)+ 0.985*A(129)+ 0.1*A(134)+ A(173)+ A(196)+ A(244)+ &
                     A(246)&
                &+ A(247)+ A(248)+ A(249)+ A(252)+ 0.25*A(253)+ A(254)+ A(255)+ 2*A(256)
  Vdot(122) = - A(5)- A(6)+ A(7)+ A(8)+ A(10)- A(13)- A(14)- A(15)+ 0.4*A(57)+ A(68)+ A(150)+ A(224)+ A(237)+ 0.31*A(239)+ A(264)
  Vdot(123) = A(181)- A(183)+ A(190)+ A(191)+ A(195)+ A(196)+ A(197)+ A(219)- A(295)- A(297)- A(299)
  Vdot(124) = A(143)- A(144)- 2*A(145)- 2*A(146)- 2*A(147)- 2*A(148)+ 2*A(149)+ A(152)- A(154)- A(155)+ A(157)- A(158)- A(159)&
                &+ A(160)+ A(161)- A(166)+ A(167)+ A(175)+ A(176)- A(203)- A(204)- A(205)+ A(263)+ A(268)+ 0.55*A(313)+ &
                     0.8*A(320)
  Vdot(125) = A(2)- A(3)- A(4)- A(6)- A(9)- A(12)- A(24)- A(27)- A(42)- A(49)- A(71)+ A(82)- A(96)- A(119)- A(134)- A(143)- &
                     A(177)&
                &- A(216)- A(222)- A(223)- A(303)
  Vdot(126) = A(1)- A(2)- A(4)- A(8)- A(11)+ A(15)+ A(20)+ A(21)+ A(25)- A(26)+ A(28)- A(144)- A(161)- A(178)- A(184)+ 2*A(221)+ &
                     A(223)&
                &+ A(227)+ A(228)+ A(229)+ A(238)+ A(263)+ A(275)+ A(302)+ A(304)- A(308)+ A(310)+ A(311)+ 0.28*A(313)+ &
                     0.65*A(317)+ 0.2&
                &*A(320)+ 0.77*A(325)+ 0.31*A(327)+ 0.25*A(331)+ 0.24*A(333)+ 0.18*A(336)+ 0.7*A(342)+ 0.7*A(344)
  Vdot(127) = A(6)+ A(7)- A(8)- A(9)- A(10)+ A(11)+ A(12)+ 2*A(13)- A(16)+ 2*A(18)- A(19)- A(32)+ A(33)- A(34)+ A(36)- A(37)- &
                     A(38)&
                &- A(40)- A(41)+ A(43)+ A(45)- A(51)- A(54)- A(55)+ 0.75*A(57)- A(58)- A(59)- 0.7*A(65)- A(66)- A(68)- A(69)- &
                     A(70)+ 0.13&
                &*A(71)- A(72)- 0.3*A(77)- A(78)- A(80)- A(90)- A(91)- A(92)- A(94)- A(95)+ 0.33*A(96)- A(97)- 0.3*A(102)- &
                     0.5*A(105)&
                &- A(106)- 0.3*A(110)- A(111)- A(112)- A(113)- A(114)- 0.15*A(118)+ 0.19*A(119)- A(120)- A(126)- A(127)- &
                     0.2*A(130)&
                &- A(131)- A(132)+ 0.25*A(134)- A(135)- A(142)+ A(152)- A(154)- A(156)- A(157)+ A(165)+ A(168)- A(169)+ A(170)- &
                     A(171)&
                &- A(183)+ A(184)- A(185)- A(194)- A(198)- A(199)- A(207)- A(208)- A(209)- A(210)- A(211)- A(212)- A(214)+ &
                     A(224)+ 2*A(225)&
                &+ A(232)+ A(233)+ 0.333*A(234)+ A(235)+ A(240)+ A(242)+ A(245)+ A(249)+ A(251)+ A(253)+ A(255)+ A(259)+ A(265)+ &
                     A(276)&
                &+ A(305)- A(307)+ 0.05*A(313)- A(314)+ 0.24*A(317)- A(318)- A(322)- A(326)- A(328)+ 0.6*A(333)- A(334)+ &
                     0.38*A(336)&
                &- A(337)- A(339)- A(345)+ 0.15*A(347)- A(348)
  Vdot(128) = A(5)+ A(9)- A(11)- A(12)- A(13)- A(14)- A(15)- A(16)- 2*A(17)+ A(19)- A(33)- A(35)- A(36)+ A(39)- A(43)- A(44)+ &
                     A(45)&
                &+ A(56)+ A(59)- A(60)+ A(61)+ A(62)+ 2*A(63)+ A(66)+ A(67)+ A(69)+ 0.13*A(71)- A(73)+ A(74)+ A(75)+ A(76)- &
                     A(81)- A(82)&
                &+ A(86)+ 0.82*A(88)+ 0.26*A(96)- A(99)+ 0.96*A(100)+ 0.8*A(101)- A(103)+ 0.98*A(104)- A(107)+ 0.3*A(109)+ &
                     A(111)+ 1.23&
                &*A(115)- A(116)+ 0.56*A(117)+ 0.32*A(119)- A(121)+ 0.75*A(122)+ 0.875*A(124)+ A(125)- A(128)+ 0.25*A(134)- &
                     A(137)&
                &+ 0.956*A(138)+ A(139)+ A(140)- A(151)- A(152)+ A(153)+ 0.94*A(154)- A(155)+ A(164)+ A(166)- A(181)- A(182)+ &
                     A(190)&
                &+ A(193)+ A(210)+ A(212)+ 0.4*A(214)- A(217)+ 0.667*A(234)+ A(235)+ A(237)+ A(240)+ A(241)+ A(245)+ A(247)+ &
                     A(248)&
                &+ A(250)+ 0.67*A(251)+ A(252)+ 0.75*A(253)+ 0.67*A(257)+ A(259)+ A(260)
  Vdot(129) = A(10)+ A(15)+ A(16)- A(18)+ A(19)+ A(37)+ A(38)+ A(40)+ A(41)+ A(44)+ A(46)+ A(47)+ A(51)+ A(54)+ A(55)+ A(58)+ &
                     A(65)&
                &+ A(66)+ A(69)+ A(70)+ A(78)+ A(80)+ A(90)+ A(92)+ A(95)+ A(105)+ A(106)+ A(114)+ 0.85*A(118)+ A(131)+ A(156)+ &
                     A(157)&
                &+ A(169)+ A(171)+ A(183)+ A(194)+ A(198)+ A(199)+ A(207)+ A(208)+ A(209)- A(224)+ 1.155*A(239)- A(289)+ A(291)- &
                     A(293)&
                &+ A(295)- A(296)+ A(299)+ A(300)- A(306)+ A(312)+ A(314)+ A(318)+ A(322)+ A(326)+ A(328)+ A(334)+ A(337)+ &
                     A(339)+ A(345)
  Vdot(130) = A(150)+ A(151)+ A(153)+ 0.06*A(154)- A(156)+ A(163)+ A(164)+ A(165)+ A(172)+ A(173)+ A(174)+ A(218)- A(264)- &
                     A(291)&
                &- A(292)- A(294)- A(298)- A(300)+ A(315)+ A(319)+ A(323)+ A(329)+ A(335)+ A(338)+ A(340)+ A(346)+ A(349)
  Vdot(131) = A(177)- A(178)- 2*A(179)- 2*A(180)- A(182)+ A(184)- A(187)- A(188)+ A(189)- A(192)- A(193)- A(203)- A(204)- A(205)&
                &- A(220)- A(275)+ 0.15*A(278)
  Vdot(132) = 0.75*A(57)+ A(58)- A(60)- A(61)- A(62)- 2*A(63)- 2*A(64)+ 0.7*A(65)- A(76)+ A(80)+ A(83)+ A(85)- A(87)+ 0.82*A(88)+ &
                     2&
                &*A(89)+ A(94)+ 0.07*A(96)- A(101)- A(109)- A(115)- A(124)+ 0.08*A(134)- A(139)+ A(163)- A(166)+ A(191)- A(192)- &
                     A(193)&
                &+ A(197)+ 0.6*A(214)+ A(215)+ A(241)+ A(242)+ A(246)+ A(269)+ A(279)+ A(288)
  Vdot(133) = 0.25*A(57)+ A(59)+ A(61)+ A(62)+ 2*A(63)+ A(64)+ 0.3*A(65)- A(66)- A(67)+ 1.13875*A(71)+ 0.75*A(76)+ A(86)+ A(87)&
                &+ A(91)+ A(92)+ 0.57*A(96)+ 0.8*A(101)+ 0.98*A(104)+ A(108)+ 0.8*A(109)+ 0.68*A(115)+ 0.75*A(122)+ 1.125*A(124)+ &
                     0.5&
                &*A(125)+ 0.58*A(134)+ 0.956*A(138)+ 1.25*A(139)+ A(140)- A(164)+ A(165)+ A(166)- A(190)+ A(192)+ A(193)+ A(211)+ &
                     A(213)&
                &+ A(214)+ A(218)+ A(219)+ A(235)- A(236)- A(237)+ A(243)+ A(247)+ A(249)+ A(252)+ 0.75*A(253)+ A(259)+ A(260)
  Vdot(134) = A(20)+ 2*A(22)- A(24)- A(25)+ A(26)- A(29)- A(32)- A(33)- A(45)- A(46)+ A(48)+ A(51)+ A(52)+ A(53)+ A(56)- A(61)- &
                     A(74)&
                &- A(83)- A(100)- A(104)- A(108)- A(117)- A(122)- A(129)- A(138)- A(158)- A(187)+ A(227)- A(228)+ A(230)+ A(232)
  Vdot(135) = A(24)- A(26)- A(27)- A(28)+ 2*A(29)- A(30)+ A(31)+ A(33)- A(34)- A(35)+ A(36)+ A(37)+ A(39)+ A(40)- A(47)- A(48)- &
                     A(53)&
                &+ A(61)+ A(62)+ A(74)+ A(75)+ A(83)- A(84)+ A(85)+ A(91)+ A(92)+ A(93)+ 0.96*A(100)+ 0.98*A(104)+ A(108)+ &
                     A(113)+ 0.84&
                &*A(117)+ A(122)- A(123)+ 0.985*A(129)+ A(131)+ A(132)+ A(133)+ 0.956*A(138)+ A(158)- A(159)+ A(160)+ A(187)- &
                     A(188)&
                &+ A(189)- A(227)+ A(229)+ A(231)+ A(233)+ 0.667*A(234)+ A(243)+ A(244)+ A(250)+ A(257)+ A(258)+ A(260)+ A(266)+ &
                     A(268)&
                &+ A(277)+ 0.15*A(278)
  Vdot(136) = A(27)- A(29)- A(30)+ A(31)- A(36)+ A(38)- A(62)- A(67)- A(75)- A(79)- A(85)- A(98)- A(136)+ A(161)+ A(162)+ A(186)- &
                     A(213)&
                &- A(229)- A(230)+ A(231)+ 0.333*A(234)+ A(267)+ 0.85*A(278)
  Vdot(137) = - A(177)+ A(178)+ 2*A(179)- A(181)+ A(183)+ A(185)- A(186)+ A(187)- A(190)- A(191)+ A(193)+ A(194)- A(195)- A(196)&
                &- A(197)+ 3*A(198)+ 2*A(199)- A(200)- A(201)+ A(202)+ A(203)+ A(204)+ A(206)+ A(207)+ 2*A(208)+ A(209)- A(219)+ &
                     A(220)+ 2&
                &*A(274)+ A(275)+ A(276)+ A(277)+ 0.85*A(278)+ A(279)+ 2*A(280)+ 3*A(281)+ A(282)+ A(283)+ A(284)+ A(285)+ &
                     A(286)+ 2&
                &*A(287)
  Vdot(138) = - A(143)+ A(144)+ 2*A(146)+ A(147)- A(150)- A(151)- A(152)- A(153)+ 0.94*A(154)+ A(156)+ A(158)- A(162)- A(163)- &
                     A(164)&
                &- A(165)+ A(166)+ 3*A(167)+ A(168)+ A(169)+ 3*A(170)+ 3*A(171)- A(172)- A(173)- A(174)+ A(175)+ 2*A(176)+ &
                     A(200)+ A(201)&
                &- A(202)+ A(204)- A(206)+ 2*A(207)+ A(208)+ A(209)- A(218)+ 2*A(261)+ 2*A(262)+ A(264)+ A(265)+ A(266)+ A(267)+ &
                     A(269)+ 4&
                &*A(270)+ 3*A(271)+ 3*A(272)+ 2*A(273)+ A(283)+ A(284)+ A(285)+ 2*A(286)+ A(287)+ 0.17*A(313)- A(315)+ A(316)- &
                     A(319)&
                &+ 1.6*A(320)+ 3*A(321)- A(323)+ 2*A(324)+ 0.69*A(327)- A(329)+ 2*A(330)+ 2*A(332)- A(335)- A(338)+ 3*A(339)+ &
                     2*A(340)+ 3&
                &*A(341)+ A(343)- A(346)- A(349)
      
END SUBROUTINE Fun
 
SUBROUTINE Fun_SPLIT(V, F, RCT, P_VAR, D_VAR)

!   V -  Concentrations of variable species (local)
  REAL(kind=dp) :: V(NVAR)
!   F -  Concentrations of fixed species (local)
  REAL(kind=dp) :: F(NFIX)
!   RCT -  Rate constants (local)
  REAL(kind=dp) :: RCT(NREACT)
!   P_VAR -  Production term
  REAL(kind=dp) :: P_VAR(NVAR)
!   D_VAR -  Destruction term
  REAL(kind=dp) :: D_VAR(NVAR)


!   Computation of equation rates
  A(1) = RCT(1)*V(120)*F(1)
  A(2) = RCT(2)*V(126)*F(1)
  A(3) = 1.2e-10*V(120)*V(125)
  A(4) = RCT(4)*V(125)*V(126)
  A(5) = RCT(5)*V(122)*F(1)
  A(6) = RCT(6)*V(122)*V(125)
  A(7) = 1.2e-10*V(98)*V(120)
  A(8) = RCT(8)*V(126)*V(127)
  A(9) = RCT(9)*V(125)*V(127)
  A(10) = RCT(10)*V(98)*V(127)
  A(11) = RCT(11)*V(126)*V(128)
  A(12) = RCT(12)*V(125)*V(128)
  A(13) = 7.2e-11*V(122)*V(128)
  A(14) = 6.9e-12*V(122)*V(128)
  A(15) = 1.6e-12*V(122)*V(128)
  A(16) = RCT(16)*V(127)*V(128)
  A(17) = RCT(17)*V(128)*V(128)
  A(18) = RCT(18)*V(120)*V(129)
  A(19) = 1.8e-12*V(87)*V(127)
  A(20) = RCT(20)*V(48)*F(1)
  A(21) = RCT(21)*V(120)*F(2)
  A(22) = RCT(22)*V(49)*V(120)
  A(23) = RCT(23)*V(49)*V(120)
  A(24) = RCT(24)*V(125)*V(134)
  A(25) = RCT(25)*V(48)*V(134)
  A(26) = RCT(26)*V(126)*V(135)
  A(27) = RCT(27)*V(125)*V(135)
  A(28) = RCT(28)*V(48)*V(135)
  A(29) = RCT(29)*V(134)*V(136)
  A(30) = RCT(30)*V(135)*V(136)
  A(31) = RCT(31)*V(83)
  A(32) = RCT(32)*V(127)*V(134)
  A(33) = RCT(33)*V(128)*V(134)
  A(34) = RCT(34)*V(127)*V(135)
  A(35) = RCT(35)*V(128)*V(135)
  A(36) = 3.5e-12*V(128)*V(136)
  A(37) = RCT(37)*V(68)*V(127)
  A(38) = RCT(38)*V(102)*V(127)
  A(39) = RCT(39)*V(64)
  A(40) = RCT(40)*V(64)*V(127)
  A(41) = RCT(41)*V(31)*V(127)
  A(42) = RCT(42)*V(90)*V(125)
  A(43) = RCT(43)*V(90)*V(128)
  A(44) = RCT(44)*V(90)*V(128)
  A(45) = RCT(45)*V(90)*V(134)
  A(46) = RCT(46)*V(90)*V(134)
  A(47) = RCT(47)*V(90)*V(135)
  A(48) = RCT(48)*V(90)*V(135)
  A(49) = 1.2e-14*V(84)*V(125)
  A(50) = 1300*V(84)
  A(51) = RCT(51)*V(85)*V(127)
  A(52) = RCT(52)*V(53)*V(85)
  A(53) = RCT(53)*V(85)*V(135)
  A(54) = 1.66e-12*V(53)*V(127)
  A(55) = RCT(55)*V(50)*V(127)
  A(56) = RCT(56)*V(85)*F(1)
  A(57) = 1.75e-10*V(99)*V(120)
  A(58) = RCT(58)*V(99)*V(127)
  A(59) = RCT(59)*V(88)*V(127)
  A(60) = RCT(60)*V(128)*V(132)
  A(61) = RCT(61)*V(132)*V(134)
  A(62) = 1.3e-12*V(132)*V(136)
  A(63) = RCT(63)*V(132)*V(132)
  A(64) = RCT(64)*V(132)*V(132)
  A(65) = RCT(65)*V(106)*V(127)
  A(66) = RCT(66)*V(127)*V(133)
  A(67) = RCT(67)*V(133)*V(136)
  A(68) = RCT(68)*V(95)*V(127)
  A(69) = 4e-13*V(76)*V(127)
  A(70) = RCT(70)*V(21)*V(127)
  A(71) = RCT(71)*V(100)*V(125)
  A(72) = RCT(72)*V(100)*V(127)
  A(73) = RCT(73)*V(117)*V(128)
  A(74) = RCT(74)*V(117)*V(134)
  A(75) = 2.3e-12*V(117)*V(136)
  A(76) = RCT(76)*V(117)*V(132)
  A(77) = RCT(77)*V(57)*V(127)
  A(78) = RCT(78)*V(119)*V(127)
  A(79) = RCT(79)*V(119)*V(136)
  A(80) = RCT(80)*V(65)*V(127)
  A(81) = RCT(81)*V(121)*V(128)
  A(82) = RCT(82)*V(121)*V(128)
  A(83) = RCT(83)*V(121)*V(134)
  A(84) = RCT(84)*V(121)*V(135)
  A(85) = 4e-12*V(121)*V(136)
  A(86) = RCT(86)*V(121)*V(132)
  A(87) = RCT(87)*V(121)*V(132)
  A(88) = RCT(88)*V(117)*V(121)
  A(89) = RCT(89)*V(121)*V(121)
  A(90) = RCT(90)*V(58)*V(127)
  A(91) = RCT(91)*V(47)*V(127)
  A(92) = RCT(92)*V(75)*V(127)
  A(93) = RCT(93)*V(75)
  A(94) = RCT(94)*V(70)*V(127)
  A(95) = RCT(95)*V(32)*V(127)
  A(96) = RCT(96)*V(96)*V(125)
  A(97) = RCT(97)*V(96)*V(127)
  A(98) = RCT(98)*V(96)*V(136)
  A(99) = RCT(99)*V(92)*V(128)
  A(100) = RCT(100)*V(92)*V(134)
  A(101) = RCT(101)*V(92)*V(132)
  A(102) = RCT(102)*V(63)*V(127)
  A(103) = RCT(103)*V(115)*V(128)
  A(104) = RCT(104)*V(115)*V(134)
  A(105) = RCT(105)*V(62)*V(127)
  A(106) = RCT(106)*V(86)*V(127)
  A(107) = RCT(107)*V(93)*V(128)
  A(108) = RCT(108)*V(93)*V(134)
  A(109) = RCT(109)*V(93)*V(132)
  A(110) = RCT(110)*V(67)*V(127)
  A(111) = RCT(111)*V(108)*V(127)
  A(112) = RCT(112)*V(94)*V(127)
  A(113) = RCT(113)*V(60)*V(127)
  A(114) = RCT(114)*V(22)*V(127)
  A(115) = RCT(115)*V(103)*V(132)
  A(116) = RCT(116)*V(103)*V(128)
  A(117) = RCT(117)*V(103)*V(134)
  A(118) = RCT(118)*V(79)*V(127)
  A(119) = RCT(119)*V(110)*V(125)
  A(120) = RCT(120)*V(110)*V(127)
  A(121) = RCT(121)*V(112)*V(128)
  A(122) = RCT(122)*V(112)*V(134)
  A(123) = RCT(123)*V(112)*V(135)
  A(124) = 2e-12*V(112)*V(132)
  A(125) = 2e-12*V(112)*V(112)
  A(126) = 3e-11*V(82)*V(127)
  A(127) = RCT(127)*V(81)*V(127)
  A(128) = RCT(128)*V(97)*V(128)
  A(129) = RCT(129)*V(97)*V(134)
  A(130) = RCT(130)*V(55)*V(127)
  A(131) = 1.7e-12*V(111)*V(127)
  A(132) = 3.2e-11*V(54)*V(127)
  A(133) = RCT(133)*V(54)
  A(134) = RCT(134)*V(107)*V(125)
  A(135) = RCT(135)*V(107)*V(127)
  A(136) = RCT(136)*V(107)*V(136)
  A(137) = RCT(137)*V(109)*V(128)
  A(138) = RCT(138)*V(109)*V(134)
  A(139) = 2e-12*V(109)*V(132)
  A(140) = 2e-12*V(109)*V(109)
  A(141) = 1e-10*V(61)*V(127)
  A(142) = 1.3e-11*V(91)*V(127)
  A(143) = RCT(143)*V(125)*V(138)
  A(144) = RCT(144)*V(124)*V(126)
  A(145) = RCT(145)*V(124)*V(124)
  A(146) = RCT(146)*V(124)*V(124)
  A(147) = RCT(147)*V(124)*V(124)
  A(148) = RCT(148)*V(124)*V(124)
  A(149) = RCT(149)*V(19)
  A(150) = RCT(150)*V(98)*V(138)
  A(151) = RCT(151)*V(128)*V(138)
  A(152) = RCT(152)*V(128)*V(138)
  A(153) = RCT(153)*V(87)*V(138)
  A(154) = RCT(154)*V(124)*V(127)
  A(155) = RCT(155)*V(124)*V(128)
  A(156) = RCT(156)*V(127)*V(130)
  A(157) = RCT(157)*V(113)*V(127)
  A(158) = RCT(158)*V(124)*V(134)
  A(159) = RCT(159)*V(124)*V(135)
  A(160) = RCT(160)*V(116)
  A(161) = RCT(161)*V(116)*V(126)
  A(162) = RCT(162)*V(116)*V(138)
  A(163) = RCT(163)*V(99)*V(138)
  A(164) = RCT(164)*V(133)*V(138)
  A(165) = 5.9e-11*V(106)*V(138)
  A(166) = RCT(166)*V(124)*V(132)
  A(167) = 3.3e-10*V(23)*V(120)
  A(168) = 1.65e-10*V(52)*V(120)
  A(169) = RCT(169)*V(52)*V(127)
  A(170) = 3.25e-10*V(44)*V(120)
  A(171) = RCT(171)*V(44)*V(127)
  A(172) = RCT(172)*V(100)*V(138)
  A(173) = 8e-11*V(119)*V(138)
  A(174) = RCT(174)*V(70)*V(138)
  A(175) = 1.4e-10*V(24)*V(120)
  A(176) = 2.3e-10*V(27)*V(120)
  A(177) = RCT(177)*V(125)*V(137)
  A(178) = RCT(178)*V(126)*V(131)
  A(179) = 2.7e-12*V(131)*V(131)
  A(180) = RCT(180)*V(131)*V(131)
  A(181) = RCT(181)*V(128)*V(137)
  A(182) = RCT(182)*V(128)*V(131)
  A(183) = RCT(183)*V(123)*V(127)
  A(184) = RCT(184)*V(118)*V(126)
  A(185) = RCT(185)*V(101)*V(127)
  A(186) = 4.9e-11*V(104)*V(137)
  A(187) = RCT(187)*V(131)*V(134)
  A(188) = RCT(188)*V(131)*V(135)
  A(189) = RCT(189)*V(104)
  A(190) = RCT(190)*V(133)*V(137)
  A(191) = RCT(191)*V(106)*V(137)
  A(192) = RCT(192)*V(131)*V(132)
  A(193) = RCT(193)*V(131)*V(132)
  A(194) = RCT(194)*V(37)*V(127)
  A(195) = RCT(195)*V(100)*V(137)
  A(196) = RCT(196)*V(119)*V(137)
  A(197) = RCT(197)*V(70)*V(137)
  A(198) = RCT(198)*V(29)*V(127)
  A(199) = RCT(199)*V(28)*V(127)
  A(200) = 3.32e-15*V(89)*V(137)
  A(201) = 1.1e-15*V(78)*V(137)
  A(202) = RCT(202)*V(101)*V(138)
  A(203) = RCT(203)*V(124)*V(131)
  A(204) = RCT(204)*V(124)*V(131)
  A(205) = RCT(205)*V(124)*V(131)
  A(206) = 1.45e-11*V(89)*V(138)
  A(207) = RCT(207)*V(38)*V(127)
  A(208) = RCT(208)*V(39)*V(127)
  A(209) = RCT(209)*V(36)*V(127)
  A(210) = RCT(210)*V(105)*V(127)
  A(211) = RCT(211)*V(114)*V(127)
  A(212) = RCT(212)*V(114)*V(127)
  A(213) = RCT(213)*V(114)*V(136)
  A(214) = 1e-10*V(66)*V(127)
  A(215) = RCT(215)*V(80)
  A(216) = 3e-13*V(80)*V(125)
  A(217) = 5e-11*V(30)*V(128)
  A(218) = 3.3e-10*V(114)*V(138)
  A(219) = RCT(219)*V(114)*V(137)
  A(220) = 4.4e-13*V(114)*V(131)
  A(221) = RCT(221)*F(1)
  A(222) = RCT(222)*V(125)
  A(223) = RCT(223)*V(125)
  A(224) = RCT(224)*V(129)
  A(225) = RCT(225)*V(87)
  A(226) = RCT(226)*V(49)
  A(227) = RCT(227)*V(135)
  A(228) = RCT(228)*V(134)
  A(229) = RCT(229)*V(136)
  A(230) = RCT(230)*V(136)
  A(231) = RCT(231)*V(83)
  A(232) = RCT(232)*V(68)
  A(233) = RCT(233)*V(102)
  A(234) = RCT(234)*V(64)
  A(235) = RCT(235)*V(106)
  A(236) = RCT(236)*V(133)
  A(237) = RCT(237)*V(133)
  A(238) = RCT(238)*F(3)
  A(239) = RCT(239)*V(99)
  A(240) = RCT(240)*V(57)
  A(241) = RCT(241)*V(119)
  A(242) = RCT(242)*V(58)
  A(243) = RCT(243)*V(47)
  A(244) = RCT(244)*V(75)
  A(245) = RCT(245)*V(63)
  A(246) = RCT(246)*V(86)
  A(247) = RCT(247)*V(108)
  A(248) = RCT(248)*V(94)
  A(249) = RCT(249)*V(67)
  A(250) = RCT(250)*V(60)
  A(251) = RCT(251)*V(79)
  A(252) = RCT(252)*V(110)
  A(253) = RCT(253)*V(82)
  A(254) = RCT(254)*V(81)
  A(255) = RCT(255)*V(55)
  A(256) = RCT(256)*V(18)
  A(257) = RCT(257)*V(111)
  A(258) = RCT(258)*V(54)
  A(259) = RCT(259)*V(61)
  A(260) = RCT(260)*V(91)
  A(261) = RCT(261)*V(78)
  A(262) = RCT(262)*V(19)
  A(263) = RCT(263)*V(35)
  A(264) = RCT(264)*V(130)
  A(265) = RCT(265)*V(113)
  A(266) = RCT(266)*V(34)
  A(267) = RCT(267)*V(116)
  A(268) = RCT(268)*V(116)
  A(269) = RCT(269)*V(52)
  A(270) = RCT(270)*V(23)
  A(271) = RCT(271)*V(44)
  A(272) = RCT(272)*V(27)
  A(273) = RCT(273)*V(24)
  A(274) = RCT(274)*V(101)
  A(275) = RCT(275)*V(131)
  A(276) = RCT(276)*V(118)
  A(277) = RCT(277)*V(1)
  A(278) = RCT(278)*V(104)
  A(279) = RCT(279)*V(37)
  A(280) = RCT(280)*V(28)
  A(281) = RCT(281)*V(29)
  A(282) = RCT(282)*V(3)
  A(283) = RCT(283)*V(89)
  A(284) = RCT(284)*V(2)
  A(285) = RCT(285)*V(36)
  A(286) = RCT(286)*V(38)
  A(287) = RCT(287)*V(39)
  A(288) = RCT(288)*V(4)
  A(289) = RCT(289)*V(83)*V(129)
  A(290) = RCT(290)*V(83)
  A(291) = RCT(291)*V(113)*V(130)
  A(292) = RCT(292)*V(116)*V(130)
  A(293) = RCT(293)*V(116)*V(129)
  A(294) = RCT(294)*V(83)*V(130)
  A(295) = RCT(295)*V(118)*V(123)
  A(296) = RCT(296)*V(104)*V(129)
  A(297) = RCT(297)*V(116)*V(123)
  A(298) = RCT(298)*V(104)*V(130)
  A(299) = RCT(299)*V(113)*V(123)
  A(300) = RCT(300)*V(118)*V(130)
  A(301) = RCT(301)*V(5)
  A(302) = RCT(302)*V(59)*F(1)
  A(303) = RCT(303)*V(59)*V(125)
  A(304) = 2.3e-12*V(20)*F(1)
  A(305) = 4e-19*V(41)*F(1)
  A(306) = RCT(306)*V(51)*V(129)
  A(307) = RCT(307)*V(46)*V(127)
  A(308) = RCT(308)*V(46)*V(126)
  A(309) = RCT(309)*V(46)
  A(310) = RCT(310)*V(105)
  A(311) = RCT(311)*V(51)
  A(312) = RCT(312)*V(40)
  A(313) = 1e-10*V(77)*V(120)
  A(314) = RCT(314)*V(77)*V(127)
  A(315) = RCT(315)*V(77)*V(138)
  A(316) = RCT(316)*V(77)
  A(317) = 4.9e-11*V(69)*V(120)
  A(318) = RCT(318)*V(69)*V(127)
  A(319) = RCT(319)*V(69)*V(138)
  A(320) = 2e-10*V(33)*V(120)
  A(321) = RCT(321)*V(33)
  A(322) = RCT(322)*V(43)*V(127)
  A(323) = RCT(323)*V(43)*V(138)
  A(324) = RCT(324)*V(43)
  A(325) = 9.1e-12*V(42)*V(120)
  A(326) = RCT(326)*V(42)*V(127)
  A(327) = 2.6e-10*V(71)*V(120)
  A(328) = RCT(328)*V(71)*V(127)
  A(329) = RCT(329)*V(71)*V(138)
  A(330) = RCT(330)*V(71)
  A(331) = 1.3e-10*V(25)*V(120)
  A(332) = RCT(332)*V(25)
  A(333) = 1.2e-10*V(72)*V(120)
  A(334) = RCT(334)*V(72)*V(127)
  A(335) = RCT(335)*V(72)*V(138)
  A(336) = 4.4e-11*V(73)*V(120)
  A(337) = RCT(337)*V(73)*V(127)
  A(338) = RCT(338)*V(73)*V(138)
  A(339) = RCT(339)*V(45)*V(127)
  A(340) = RCT(340)*V(45)*V(138)
  A(341) = RCT(341)*V(45)
  A(342) = 5e-11*V(26)*V(120)
  A(343) = RCT(343)*V(26)
  A(344) = 5.1e-11*V(74)*V(120)
  A(345) = RCT(345)*V(74)*V(127)
  A(346) = RCT(346)*V(74)*V(138)
  A(347) = 1.75e-10*V(56)*V(120)
  A(348) = RCT(348)*V(56)*V(127)
  A(349) = RCT(349)*V(56)*V(138)

!   Production function
  P_VAR(1) = 0
  P_VAR(2) = 0
  P_VAR(3) = 0
  P_VAR(4) = 0
  P_VAR(5) = 0
  P_VAR(6) = A(174)
  P_VAR(7) = A(167)+ A(169)+ 2*A(170)+ 2*A(171)+ A(174)+ A(175)+ A(176)+ A(194)+ A(197)+ A(198)+ A(199)+ A(207)+ A(208)+ A(209)&
               &+ A(270)+ 2*A(271)+ A(272)+ A(273)+ A(280)+ A(281)+ A(282)+ A(284)+ A(285)+ A(286)+ A(287)+ 0.72*A(313)+ A(314)+ &
                     A(315)&
               &+ A(316)+ 0.7*A(317)+ 2*A(318)+ 2*A(319)+ 1.6*A(320)+ 2*A(321)+ A(322)+ A(323)+ A(324)+ 0.23*A(325)+ A(326)+ &
                     0.69*A(327)&
               &+ 2*A(328)+ 2*A(329)+ 2*A(330)+ 0.75*A(331)+ 2*A(332)+ 1.52*A(333)+ 2*A(334)+ 2*A(335)+ 0.8*A(336)+ 2*A(337)+ &
                     2*A(338)&
               &+ A(339)+ A(340)+ A(341)+ 0.6*A(342)+ 2*A(343)+ 0.3*A(344)+ A(345)+ A(346)+ A(347)+ 2*A(348)+ 2*A(349)
  P_VAR(8) = 2*A(175)+ A(176)+ A(272)+ 2*A(273)+ 3*A(282)+ 2*A(284)+ 2*A(316)
  P_VAR(9) = 0.4*A(214)+ A(217)
  P_VAR(10) = 2*A(290)
  P_VAR(11) = 2*A(290)
  P_VAR(12) = A(301)
  P_VAR(13) = A(57)+ A(58)+ A(163)+ A(239)
  P_VAR(14) = A(68)
  P_VAR(15) = A(22)+ A(23)+ A(226)
  P_VAR(16) = 2*A(3)+ 2*A(4)+ A(6)+ A(7)+ A(8)+ A(9)+ A(11)+ A(12)+ A(18)+ A(22)+ A(23)+ 2*A(26)+ A(36)+ A(42)+ A(47)+ A(48)+ &
                     A(49)&
                &+ A(53)+ A(57)+ A(62)+ A(67)+ A(71)+ A(75)+ A(79)+ A(85)+ A(96)+ A(98)+ A(119)+ A(134)+ A(136)+ 2*A(144)+ &
                     2*A(145)+ 2&
                &*A(146)+ A(147)+ A(154)+ A(166)+ A(168)+ A(170)+ 2*A(178)+ 2*A(179)+ 2*A(180)+ A(184)+ A(193)+ A(203)+ 2*A(204)+ &
                     2&
                &*A(205)+ 2*A(230)+ 2*A(262)+ A(265)+ A(276)+ A(289)+ 3*A(290)+ A(291)+ A(292)+ 2*A(294)+ A(295)+ A(297)+ A(298)+ &
                     A(299)&
                &+ A(300)+ A(308)+ 0.17*A(313)+ 0.35*A(317)+ 0.23*A(325)+ 0.69*A(327)+ 0.75*A(331)+ 0.76*A(333)+ 0.82*A(336)+ &
                     0.3&
                &*A(342)+ 0.3*A(344)+ 0.66*A(347)
  P_VAR(17) = A(15)+ A(20)+ A(25)+ A(33)+ A(37)+ A(38)+ A(61)+ A(74)+ A(82)+ A(83)+ A(100)+ A(104)+ A(108)+ A(117)+ A(122)+ &
                     A(129)&
                &+ A(138)+ A(152)+ A(185)+ A(210)+ A(211)+ A(212)+ 0.4*A(214)+ A(218)+ A(219)+ 2*A(221)+ A(226)+ A(228)+ &
                     0.333*A(234)&
                &+ A(238)+ A(263)+ A(266)+ A(277)+ 2*A(302)+ A(304)
  P_VAR(18) = 0.8*A(130)
  P_VAR(19) = A(148)
  P_VAR(20) = A(309)
  P_VAR(21) = 0
  P_VAR(22) = 0
  P_VAR(23) = 0
  P_VAR(24) = 0
  P_VAR(25) = 0.25*A(331)
  P_VAR(26) = 0.7*A(342)
  P_VAR(27) = 0
  P_VAR(28) = 0
  P_VAR(29) = 0
  P_VAR(30) = A(216)
  P_VAR(31) = 0
  P_VAR(32) = 0
  P_VAR(33) = 0.2*A(320)
  P_VAR(34) = A(294)
  P_VAR(35) = A(147)+ A(203)
  P_VAR(36) = 0
  P_VAR(37) = 0
  P_VAR(38) = 0
  P_VAR(39) = 0
  P_VAR(40) = A(306)
  P_VAR(41) = A(307)
  P_VAR(42) = 0.77*A(325)
  P_VAR(43) = 0
  P_VAR(44) = 0
  P_VAR(45) = 0
  P_VAR(46) = 0
  P_VAR(47) = A(142)
  P_VAR(48) = A(228)
  P_VAR(49) = A(28)+ A(47)
  P_VAR(50) = A(52)
  P_VAR(51) = A(210)+ A(312)
  P_VAR(52) = 0
  P_VAR(53) = A(50)+ A(55)
  P_VAR(54) = A(123)
  P_VAR(55) = A(128)
  P_VAR(56) = 0.34*A(347)
  P_VAR(57) = A(73)
  P_VAR(58) = A(81)
  P_VAR(59) = A(304)+ A(305)+ A(308)+ A(310)
  P_VAR(60) = 0.04*A(100)
  P_VAR(61) = A(137)
  P_VAR(62) = A(103)
  P_VAR(63) = A(99)
  P_VAR(64) = A(35)
  P_VAR(65) = A(82)+ A(87)+ 0.18*A(88)
  P_VAR(66) = A(212)+ A(220)
  P_VAR(67) = A(107)
  P_VAR(68) = A(32)+ A(53)
  P_VAR(69) = 0.65*A(317)
  P_VAR(70) = 0
  P_VAR(71) = 0.31*A(327)
  P_VAR(72) = 0.24*A(333)
  P_VAR(73) = 0.18*A(336)
  P_VAR(74) = 0.7*A(344)
  P_VAR(75) = A(84)
  P_VAR(76) = 0.23125*A(71)+ 0.22*A(96)+ 0.45*A(119)+ 0.28*A(134)
  P_VAR(77) = 0.28*A(313)
  P_VAR(78) = A(145)+ A(162)+ A(206)+ A(291)+ A(292)
  P_VAR(79) = A(116)
  P_VAR(80) = A(211)+ A(213)+ A(218)+ A(219)
  P_VAR(81) = 0.88*A(115)+ 0.56*A(117)+ 0.85*A(118)+ A(131)+ 0.67*A(251)+ 0.67*A(257)
  P_VAR(82) = A(121)
  P_VAR(83) = A(30)
  P_VAR(84) = A(42)+ A(43)+ A(48)
  P_VAR(85) = A(44)+ A(54)
  P_VAR(86) = 0.96*A(100)+ A(101)+ 0.7*A(102)+ A(113)+ A(245)+ A(250)
  P_VAR(87) = A(17)+ 0.13875*A(71)+ 0.09*A(134)
  P_VAR(88) = A(64)+ 0.25*A(76)+ 0.03*A(96)+ 0.2*A(101)+ 0.5*A(109)+ 0.18*A(115)+ 0.25*A(124)+ 0.25*A(139)
  P_VAR(89) = A(201)+ A(202)+ A(205)+ A(297)+ A(298)+ A(299)+ A(300)
  P_VAR(90) = A(41)+ A(49)
  P_VAR(91) = A(136)+ 0.044*A(138)
  P_VAR(92) = 0.82*A(95)+ 0.3*A(102)
  P_VAR(93) = A(106)+ 0.3*A(110)
  P_VAR(94) = 0.04*A(96)+ 0.5*A(109)+ 0.7*A(110)+ A(111)+ 0.9*A(119)+ 0.5*A(122)+ 0.5*A(124)+ A(125)+ 0.25*A(139)+ 0.5*A(253)
  P_VAR(95) = A(66)+ A(67)+ 0.63*A(71)+ A(91)+ A(92)+ 0.31*A(96)+ A(112)+ 0.22*A(119)+ 0.25*A(122)+ 0.125*A(124)+ 0.5*A(125)+ &
                     0.14&
                &*A(134)+ A(164)+ A(190)+ A(236)+ A(237)+ A(238)+ A(239)+ A(241)+ A(243)+ A(248)+ A(252)+ 0.25*A(253)+ A(308)+ &
                     A(309)
  P_VAR(96) = 0
  P_VAR(97) = A(127)+ 0.2*A(130)
  P_VAR(98) = A(14)+ 0.05*A(57)+ A(236)+ 0.69*A(239)
  P_VAR(99) = 0.06*A(96)
  P_VAR(100) = 0
  P_VAR(101) = A(180)+ A(186)+ A(200)+ A(295)
  P_VAR(102) = A(34)+ A(67)+ A(79)+ A(213)+ 2*A(289)+ A(292)+ A(293)+ A(294)+ A(296)+ A(297)+ A(298)
  P_VAR(103) = A(114)+ 0.15*A(118)
  P_VAR(104) = A(188)
  P_VAR(105) = 0.6*A(214)+ A(215)+ A(302)+ A(303)+ A(311)
  P_VAR(106) = A(60)
  P_VAR(107) = 0
  P_VAR(108) = 0.5*A(105)+ 0.2*A(109)+ 0.25*A(122)+ 0.375*A(124)+ A(125)+ A(132)+ 0.25*A(139)+ A(142)+ 0.25*A(253)+ A(258)
  P_VAR(109) = A(135)
  P_VAR(110) = 0.65*A(134)+ 0.956*A(138)+ 0.5*A(139)+ 2*A(140)+ A(141)+ A(259)+ A(260)
  P_VAR(111) = A(98)+ 0.02*A(104)+ 0.16*A(117)+ 0.015*A(129)
  P_VAR(112) = A(120)+ A(126)+ A(133)+ 0.1*A(134)
  P_VAR(113) = A(155)+ A(293)
  P_VAR(114) = 0
  P_VAR(115) = 0.666667*A(72)+ A(97)+ 0.5*A(105)+ 0.666667*A(172)+ 0.666667*A(195)
  P_VAR(116) = A(159)
  P_VAR(117) = A(70)+ 0.3*A(77)+ 0.18*A(95)+ 0.06*A(96)+ 0.12*A(115)+ 0.28*A(117)+ 0.33*A(251)+ A(254)+ 0.33*A(257)
  P_VAR(118) = A(182)+ A(185)+ A(192)+ A(296)
  P_VAR(119) = A(74)+ A(75)+ 0.75*A(76)+ 0.7*A(77)+ A(88)+ 0.47*A(96)+ 0.98*A(104)+ 0.12*A(115)+ 0.28*A(117)+ 0.985*A(129)+ &
                     A(240)&
                 &+ 0.33*A(251)+ A(255)+ 0.33*A(257)
  P_VAR(120) = A(222)+ A(226)+ 0.34*A(347)
  P_VAR(121) = A(78)+ A(79)+ A(90)+ A(93)+ 0.23*A(96)+ A(108)+ 0.3*A(109)+ A(112)+ 0.1*A(119)+ 0.25*A(122)+ 0.125*A(124)+ 0.985&
                 &*A(129)+ 0.1*A(134)+ A(173)+ A(196)+ A(244)+ A(246)+ A(247)+ A(248)+ A(249)+ A(252)+ 0.25*A(253)+ A(254)+ &
                     A(255)+ 2&
                 &*A(256)
  P_VAR(122) = A(7)+ A(8)+ A(10)+ 0.4*A(57)+ A(68)+ A(150)+ A(224)+ A(237)+ 0.31*A(239)+ A(264)
  P_VAR(123) = A(181)+ A(190)+ A(191)+ A(195)+ A(196)+ A(197)+ A(219)
  P_VAR(124) = A(143)+ 2*A(149)+ A(152)+ A(157)+ A(160)+ A(161)+ A(167)+ A(175)+ A(176)+ A(263)+ A(268)+ 0.55*A(313)+ 0.8*A(320)
  P_VAR(125) = A(2)+ A(82)
  P_VAR(126) = A(1)+ A(15)+ A(20)+ A(21)+ A(25)+ A(28)+ 2*A(221)+ A(223)+ A(227)+ A(228)+ A(229)+ A(238)+ A(263)+ A(275)+ A(302)&
                 &+ A(304)+ A(310)+ A(311)+ 0.28*A(313)+ 0.65*A(317)+ 0.2*A(320)+ 0.77*A(325)+ 0.31*A(327)+ 0.25*A(331)+ &
                     0.24*A(333)&
                 &+ 0.18*A(336)+ 0.7*A(342)+ 0.7*A(344)
  P_VAR(127) = A(6)+ A(7)+ A(11)+ A(12)+ 2*A(13)+ 2*A(18)+ A(33)+ A(36)+ A(43)+ A(45)+ 0.75*A(57)+ 0.3*A(65)+ 0.13*A(71)+ &
                     0.7*A(77)&
                 &+ 0.33*A(96)+ 0.7*A(102)+ 0.5*A(105)+ 0.7*A(110)+ 0.85*A(118)+ 0.19*A(119)+ 0.8*A(130)+ 0.25*A(134)+ A(141)+ &
                     A(152)&
                 &+ A(165)+ A(168)+ A(170)+ A(184)+ A(224)+ 2*A(225)+ A(232)+ A(233)+ 0.333*A(234)+ A(235)+ A(240)+ A(242)+ &
                     A(245)+ A(249)&
                 &+ A(251)+ A(253)+ A(255)+ A(259)+ A(265)+ A(276)+ A(305)+ 0.05*A(313)+ 0.24*A(317)+ 0.6*A(333)+ 0.38*A(336)+ &
                     0.15&
                 &*A(347)
  P_VAR(128) = A(5)+ A(9)+ A(19)+ A(39)+ A(45)+ A(56)+ A(59)+ A(61)+ A(62)+ 2*A(63)+ A(66)+ A(67)+ A(69)+ 0.13*A(71)+ A(74)+ &
                     A(75)&
                 &+ A(76)+ A(86)+ 0.82*A(88)+ 0.26*A(96)+ 0.96*A(100)+ 0.8*A(101)+ 0.98*A(104)+ 0.3*A(109)+ A(111)+ 1.23*A(115)+ &
                     0.56&
                 &*A(117)+ 0.32*A(119)+ 0.75*A(122)+ 0.875*A(124)+ A(125)+ 0.25*A(134)+ 0.956*A(138)+ A(139)+ A(140)+ A(153)+ &
                     0.94&
                 &*A(154)+ A(164)+ A(166)+ A(190)+ A(193)+ A(210)+ A(212)+ 0.4*A(214)+ 0.667*A(234)+ A(235)+ A(237)+ A(240)+ &
                     A(241)&
                 &+ A(245)+ A(247)+ A(248)+ A(250)+ 0.67*A(251)+ A(252)+ 0.75*A(253)+ 0.67*A(257)+ A(259)+ A(260)
  P_VAR(129) = A(10)+ A(15)+ A(16)+ A(19)+ A(37)+ A(38)+ A(40)+ A(41)+ A(44)+ A(46)+ A(47)+ A(51)+ A(54)+ A(55)+ A(58)+ A(65)+ &
                     A(66)&
                 &+ A(69)+ A(70)+ A(78)+ A(80)+ A(90)+ A(92)+ A(95)+ A(105)+ A(106)+ A(114)+ 0.85*A(118)+ A(131)+ A(156)+ A(157)+ &
                     A(169)&
                 &+ A(171)+ A(183)+ A(194)+ A(198)+ A(199)+ A(207)+ A(208)+ A(209)+ 1.155*A(239)+ A(291)+ A(295)+ A(299)+ A(300)+ &
                     A(312)&
                 &+ A(314)+ A(318)+ A(322)+ A(326)+ A(328)+ A(334)+ A(337)+ A(339)+ A(345)
  P_VAR(130) = A(150)+ A(151)+ A(153)+ 0.06*A(154)+ A(163)+ A(164)+ A(165)+ A(172)+ A(173)+ A(174)+ A(218)+ A(315)+ A(319)+ &
                     A(323)&
                 &+ A(329)+ A(335)+ A(338)+ A(340)+ A(346)+ A(349)
  P_VAR(131) = A(177)+ A(184)+ A(189)+ 0.15*A(278)
  P_VAR(132) = 0.75*A(57)+ A(58)+ 0.7*A(65)+ A(80)+ A(83)+ A(85)+ A(86)+ 0.82*A(88)+ 2*A(89)+ A(94)+ 0.07*A(96)+ 0.08*A(134)+ &
                     A(163)&
                 &+ A(191)+ A(197)+ 0.6*A(214)+ A(215)+ A(241)+ A(242)+ A(246)+ A(269)+ A(279)+ A(288)
  P_VAR(133) = 0.25*A(57)+ A(59)+ A(61)+ A(62)+ 2*A(63)+ A(64)+ 0.3*A(65)+ 1.13875*A(71)+ 0.75*A(76)+ A(86)+ A(87)+ A(91)+ A(92)&
                 &+ 0.57*A(96)+ 0.8*A(101)+ 0.98*A(104)+ A(108)+ 0.8*A(109)+ 0.68*A(115)+ 0.75*A(122)+ 1.125*A(124)+ 0.5*A(125)+ &
                     0.58&
                 &*A(134)+ 0.956*A(138)+ 1.25*A(139)+ A(140)+ A(165)+ A(166)+ A(192)+ A(193)+ A(211)+ A(213)+ A(214)+ A(218)+ &
                     A(219)&
                 &+ A(235)+ A(243)+ A(247)+ A(249)+ A(252)+ 0.75*A(253)+ A(259)+ A(260)
  P_VAR(134) = A(20)+ 2*A(22)+ A(26)+ A(48)+ A(51)+ A(52)+ A(53)+ A(56)+ A(227)+ A(230)+ A(232)
  P_VAR(135) = A(24)+ 2*A(29)+ A(31)+ A(33)+ A(36)+ A(37)+ A(39)+ A(40)+ A(61)+ A(62)+ A(74)+ A(75)+ A(83)+ A(85)+ A(91)+ A(92)+ &
                     A(93)&
                 &+ 0.96*A(100)+ 0.98*A(104)+ A(108)+ A(113)+ 0.84*A(117)+ A(122)+ 0.985*A(129)+ A(131)+ A(132)+ A(133)+ &
                     0.956*A(138)&
                 &+ A(158)+ A(160)+ A(187)+ A(189)+ A(229)+ A(231)+ A(233)+ 0.667*A(234)+ A(243)+ A(244)+ A(250)+ A(257)+ A(258)+ &
                     A(260)&
                 &+ A(266)+ A(268)+ A(277)+ 0.15*A(278)
  P_VAR(136) = A(27)+ A(31)+ A(38)+ A(161)+ A(162)+ A(186)+ A(231)+ 0.333*A(234)+ A(267)+ 0.85*A(278)
  P_VAR(137) = A(178)+ 2*A(179)+ A(183)+ A(185)+ A(187)+ A(193)+ A(194)+ 3*A(198)+ 2*A(199)+ A(202)+ A(203)+ A(204)+ A(206)+ &
                     A(207)+ 2&
                 &*A(208)+ A(209)+ A(220)+ 2*A(274)+ A(275)+ A(276)+ A(277)+ 0.85*A(278)+ A(279)+ 2*A(280)+ 3*A(281)+ A(282)+ &
                     A(283)&
                 &+ A(284)+ A(285)+ A(286)+ 2*A(287)
  P_VAR(138) = A(144)+ 2*A(146)+ A(147)+ 0.94*A(154)+ A(156)+ A(158)+ A(166)+ 3*A(167)+ A(168)+ A(169)+ 3*A(170)+ 3*A(171)+ &
                     A(175)+ 2&
                 &*A(176)+ A(200)+ A(201)+ A(204)+ 2*A(207)+ A(208)+ A(209)+ 2*A(261)+ 2*A(262)+ A(264)+ A(265)+ A(266)+ A(267)+ &
                     A(269)+ 4&
                 &*A(270)+ 3*A(271)+ 3*A(272)+ 2*A(273)+ A(283)+ A(284)+ A(285)+ 2*A(286)+ A(287)+ 0.17*A(313)+ A(316)+ &
                     1.6*A(320)+ 3&
                 &*A(321)+ 2*A(324)+ 0.69*A(327)+ 2*A(330)+ 2*A(332)+ 3*A(339)+ 3*A(340)+ 3*A(341)+ A(343)

!   Destruction function
  D_VAR(1) = RCT(277)
  D_VAR(2) = RCT(284)
  D_VAR(3) = RCT(282)
  D_VAR(4) = RCT(288)
  D_VAR(5) = RCT(301)
  D_VAR(6) = 0
  D_VAR(7) = 0
  D_VAR(8) = 0
  D_VAR(9) = 0
  D_VAR(10) = 0
  D_VAR(11) = 0
  D_VAR(12) = 0
  D_VAR(13) = 0
  D_VAR(14) = 0
  D_VAR(15) = 0
  D_VAR(16) = 0
  D_VAR(17) = 0
  D_VAR(18) = RCT(256)
  D_VAR(19) = RCT(149)+ RCT(262)
  D_VAR(20) = 2.3e-12*F(1)
  D_VAR(21) = RCT(70)*V(127)
  D_VAR(22) = RCT(114)*V(127)
  D_VAR(23) = 3.3e-10*V(120)+ RCT(270)
  D_VAR(24) = 1.4e-10*V(120)+ RCT(273)
  D_VAR(25) = 1.3e-10*V(120)+ RCT(332)
  D_VAR(26) = 5e-11*V(120)+ RCT(343)
  D_VAR(27) = 2.3e-10*V(120)+ RCT(272)
  D_VAR(28) = RCT(199)*V(127)+ RCT(280)
  D_VAR(29) = RCT(198)*V(127)+ RCT(281)
  D_VAR(30) = 5e-11*V(128)
  D_VAR(31) = RCT(41)*V(127)
  D_VAR(32) = RCT(95)*V(127)
  D_VAR(33) = 2e-10*V(120)+ RCT(321)
  D_VAR(34) = RCT(266)
  D_VAR(35) = RCT(263)
  D_VAR(36) = RCT(209)*V(127)+ RCT(285)
  D_VAR(37) = RCT(194)*V(127)+ RCT(279)
  D_VAR(38) = RCT(207)*V(127)+ RCT(286)
  D_VAR(39) = RCT(208)*V(127)+ RCT(287)
  D_VAR(40) = RCT(312)
  D_VAR(41) = 4e-19*F(1)
  D_VAR(42) = 9.1e-12*V(120)+ RCT(326)*V(127)
  D_VAR(43) = RCT(322)*V(127)+ RCT(323)*V(138)+ RCT(324)
  D_VAR(44) = 3.25e-10*V(120)+ RCT(171)*V(127)+ RCT(271)
  D_VAR(45) = RCT(339)*V(127)+ RCT(340)*V(138)+ RCT(341)
  D_VAR(46) = RCT(307)*V(127)+ RCT(308)*V(126)+ RCT(309)
  D_VAR(47) = RCT(91)*V(127)+ RCT(243)
  D_VAR(48) = RCT(20)*F(1)+ RCT(25)*V(134)+ RCT(28)*V(135)
  D_VAR(49) = RCT(22)*V(120)+ RCT(23)*V(120)+ RCT(226)
  D_VAR(50) = RCT(55)*V(127)
  D_VAR(51) = RCT(306)*V(129)+ RCT(311)
  D_VAR(52) = 1.65e-10*V(120)+ RCT(169)*V(127)+ RCT(269)
  D_VAR(53) = RCT(52)*V(85)+ 1.66e-12*V(127)
  D_VAR(54) = 3.2e-11*V(127)+ RCT(133)+ RCT(258)
  D_VAR(55) = RCT(130)*V(127)+ RCT(255)
  D_VAR(56) = 1.75e-10*V(120)+ RCT(348)*V(127)+ RCT(349)*V(138)
  D_VAR(57) = RCT(77)*V(127)+ RCT(240)
  D_VAR(58) = RCT(90)*V(127)+ RCT(242)
  D_VAR(59) = RCT(302)*F(1)+ RCT(303)*V(125)
  D_VAR(60) = RCT(113)*V(127)+ RCT(250)
  D_VAR(61) = 1e-10*V(127)+ RCT(259)
  D_VAR(62) = RCT(105)*V(127)
  D_VAR(63) = RCT(102)*V(127)+ RCT(245)
  D_VAR(64) = RCT(39)+ RCT(40)*V(127)+ RCT(234)
  D_VAR(65) = RCT(80)*V(127)
  D_VAR(66) = 1e-10*V(127)
  D_VAR(67) = RCT(110)*V(127)+ RCT(249)
  D_VAR(68) = RCT(37)*V(127)+ RCT(232)
  D_VAR(69) = 4.9e-11*V(120)+ RCT(318)*V(127)+ RCT(319)*V(138)
  D_VAR(70) = RCT(94)*V(127)+ RCT(174)*V(138)+ RCT(197)*V(137)
  D_VAR(71) = 2.6e-10*V(120)+ RCT(328)*V(127)+ RCT(329)*V(138)+ RCT(330)
  D_VAR(72) = 1.2e-10*V(120)+ RCT(334)*V(127)+ RCT(335)*V(138)
  D_VAR(73) = 4.4e-11*V(120)+ RCT(337)*V(127)+ RCT(338)*V(138)
  D_VAR(74) = 5.1e-11*V(120)+ RCT(345)*V(127)+ RCT(346)*V(138)
  D_VAR(75) = RCT(92)*V(127)+ RCT(93)+ RCT(244)
  D_VAR(76) = 4e-13*V(127)
  D_VAR(77) = 1e-10*V(120)+ RCT(314)*V(127)+ RCT(315)*V(138)+ RCT(316)
  D_VAR(78) = 1.1e-15*V(137)+ RCT(261)
  D_VAR(79) = RCT(118)*V(127)+ RCT(251)
  D_VAR(80) = RCT(215)+ 3e-13*V(125)
  D_VAR(81) = RCT(127)*V(127)+ RCT(254)
  D_VAR(82) = 3e-11*V(127)+ RCT(253)
  D_VAR(83) = RCT(31)+ RCT(231)+ RCT(289)*V(129)+ RCT(290)+ RCT(294)*V(130)
  D_VAR(84) = 1.2e-14*V(125)+ 1300
  D_VAR(85) = RCT(51)*V(127)+ RCT(52)*V(53)+ RCT(53)*V(135)+ RCT(56)*F(1)
  D_VAR(86) = RCT(106)*V(127)+ RCT(246)
  D_VAR(87) = 1.8e-12*V(127)+ RCT(153)*V(138)+ RCT(225)
  D_VAR(88) = RCT(59)*V(127)
  D_VAR(89) = 3.32e-15*V(137)+ 1.45e-11*V(138)+ RCT(283)
  D_VAR(90) = RCT(42)*V(125)+ RCT(43)*V(128)+ RCT(44)*V(128)+ RCT(45)*V(134)+ RCT(46)*V(134)+ RCT(47)*V(135)+ RCT(48)*V(135)
  D_VAR(91) = 1.3e-11*V(127)+ RCT(260)
  D_VAR(92) = RCT(99)*V(128)+ RCT(100)*V(134)+ RCT(101)*V(132)
  D_VAR(93) = RCT(107)*V(128)+ RCT(108)*V(134)+ RCT(109)*V(132)
  D_VAR(94) = RCT(112)*V(127)+ RCT(248)
  D_VAR(95) = RCT(68)*V(127)
  D_VAR(96) = RCT(96)*V(125)+ RCT(97)*V(127)+ RCT(98)*V(136)
  D_VAR(97) = RCT(128)*V(128)+ RCT(129)*V(134)
  D_VAR(98) = 1.2e-10*V(120)+ RCT(10)*V(127)+ RCT(150)*V(138)
  D_VAR(99) = 1.75e-10*V(120)+ RCT(58)*V(127)+ RCT(163)*V(138)+ RCT(239)
  D_VAR(100) = RCT(71)*V(125)+ RCT(72)*V(127)+ RCT(172)*V(138)+ RCT(195)*V(137)
  D_VAR(101) = RCT(185)*V(127)+ RCT(202)*V(138)+ RCT(274)
  D_VAR(102) = RCT(38)*V(127)+ RCT(233)
  D_VAR(103) = RCT(115)*V(132)+ RCT(116)*V(128)+ RCT(117)*V(134)
  D_VAR(104) = 4.9e-11*V(137)+ RCT(189)+ RCT(278)+ RCT(296)*V(129)+ RCT(298)*V(130)
  D_VAR(105) = RCT(210)*V(127)+ RCT(310)
  D_VAR(106) = RCT(65)*V(127)+ 5.9e-11*V(138)+ RCT(191)*V(137)+ RCT(235)
  D_VAR(107) = RCT(134)*V(125)+ RCT(135)*V(127)+ RCT(136)*V(136)
  D_VAR(108) = RCT(111)*V(127)+ RCT(247)
  D_VAR(109) = RCT(137)*V(128)+ RCT(138)*V(134)+ 2e-12*V(132)+ 2e-12*2*V(109)
  D_VAR(110) = RCT(119)*V(125)+ RCT(120)*V(127)+ RCT(252)
  D_VAR(111) = 1.7e-12*V(127)+ RCT(257)
  D_VAR(112) = RCT(121)*V(128)+ RCT(122)*V(134)+ RCT(123)*V(135)+ 2e-12*V(132)+ 2e-12*2*V(112)
  D_VAR(113) = RCT(157)*V(127)+ RCT(265)+ RCT(291)*V(130)+ RCT(299)*V(123)
  D_VAR(114) = RCT(211)*V(127)+ RCT(212)*V(127)+ RCT(213)*V(136)+ 3.3e-10*V(138)+ RCT(219)*V(137)+ 4.4e-13*V(131)
  D_VAR(115) = RCT(103)*V(128)+ RCT(104)*V(134)
  D_VAR(116) = RCT(160)+ RCT(161)*V(126)+ RCT(162)*V(138)+ RCT(267)+ RCT(268)+ RCT(292)*V(130)+ RCT(293)*V(129)+ RCT(297)&
                 &*V(123)
  D_VAR(117) = RCT(73)*V(128)+ RCT(74)*V(134)+ 2.3e-12*V(136)+ RCT(76)*V(132)+ RCT(88)*V(121)
  D_VAR(118) = RCT(184)*V(126)+ RCT(276)+ RCT(295)*V(123)+ RCT(300)*V(130)
  D_VAR(119) = RCT(78)*V(127)+ RCT(79)*V(136)+ 8e-11*V(138)+ RCT(196)*V(137)+ RCT(241)
  D_VAR(120) = RCT(1)*F(1)+ 1.2e-10*V(125)+ 1.2e-10*V(98)+ RCT(18)*V(129)+ RCT(21)*F(2)+ RCT(22)*V(49)+ RCT(23)*V(49)+ 1.75e-10&
                 &*V(99)+ 3.3e-10*V(23)+ 1.65e-10*V(52)+ 3.25e-10*V(44)+ 1.4e-10*V(24)+ 2.3e-10*V(27)+ 1e-10*V(77)+ &
                     4.9e-11*V(69)&
                 &+ 2e-10*V(33)+ 9.1e-12*V(42)+ 2.6e-10*V(71)+ 1.3e-10*V(25)+ 1.2e-10*V(72)+ 4.4e-11*V(73)+ 5e-11*V(26)+ 5.1e-11&
                 &*V(74)+ 1.75e-10*V(56)
  D_VAR(121) = RCT(81)*V(128)+ RCT(82)*V(128)+ RCT(83)*V(134)+ RCT(84)*V(135)+ 4e-12*V(136)+ RCT(86)*V(132)+ RCT(87)*V(132)&
                 &+ RCT(88)*V(117)+ RCT(89)*2*V(121)
  D_VAR(122) = RCT(5)*F(1)+ RCT(6)*V(125)+ 7.2e-11*V(128)+ 6.9e-12*V(128)+ 1.6e-12*V(128)
  D_VAR(123) = RCT(183)*V(127)+ RCT(295)*V(118)+ RCT(297)*V(116)+ RCT(299)*V(113)
  D_VAR(124) = RCT(144)*V(126)+ RCT(145)*2*V(124)+ RCT(146)*2*V(124)+ RCT(147)*2*V(124)+ RCT(148)*2*V(124)+ RCT(154)*V(127)&
                 &+ RCT(155)*V(128)+ RCT(158)*V(134)+ RCT(159)*V(135)+ RCT(166)*V(132)+ RCT(203)*V(131)+ RCT(204)*V(131)+ &
                     RCT(205)&
                 &*V(131)
  D_VAR(125) = 1.2e-10*V(120)+ RCT(4)*V(126)+ RCT(6)*V(122)+ RCT(9)*V(127)+ RCT(12)*V(128)+ RCT(24)*V(134)+ RCT(27)*V(135)&
                 &+ RCT(42)*V(90)+ 1.2e-14*V(84)+ RCT(71)*V(100)+ RCT(96)*V(96)+ RCT(119)*V(110)+ RCT(134)*V(107)+ &
                     RCT(143)*V(138)&
                 &+ RCT(177)*V(137)+ 3e-13*V(80)+ RCT(222)+ RCT(223)+ RCT(303)*V(59)
  D_VAR(126) = RCT(2)*F(1)+ RCT(4)*V(125)+ RCT(8)*V(127)+ RCT(11)*V(128)+ RCT(26)*V(135)+ RCT(144)*V(124)+ RCT(161)*V(116)&
                 &+ RCT(178)*V(131)+ RCT(184)*V(118)+ RCT(308)*V(46)
  D_VAR(127) = RCT(8)*V(126)+ RCT(9)*V(125)+ RCT(10)*V(98)+ RCT(16)*V(128)+ 1.8e-12*V(87)+ RCT(32)*V(134)+ RCT(34)*V(135)&
                 &+ RCT(37)*V(68)+ RCT(38)*V(102)+ RCT(40)*V(64)+ RCT(41)*V(31)+ RCT(51)*V(85)+ 1.66e-12*V(53)+ RCT(55)*V(50)&
                 &+ RCT(58)*V(99)+ RCT(59)*V(88)+ RCT(65)*V(106)+ RCT(66)*V(133)+ RCT(68)*V(95)+ 4e-13*V(76)+ RCT(70)*V(21)+ &
                     RCT(72)&
                 &*V(100)+ RCT(77)*V(57)+ RCT(78)*V(119)+ RCT(80)*V(65)+ RCT(90)*V(58)+ RCT(91)*V(47)+ RCT(92)*V(75)+ &
                     RCT(94)*V(70)&
                 &+ RCT(95)*V(32)+ RCT(97)*V(96)+ RCT(102)*V(63)+ RCT(105)*V(62)+ RCT(106)*V(86)+ RCT(110)*V(67)+ &
                     RCT(111)*V(108)&
                 &+ RCT(112)*V(94)+ RCT(113)*V(60)+ RCT(114)*V(22)+ RCT(118)*V(79)+ RCT(120)*V(110)+ 3e-11*V(82)+ RCT(127)*V(81)&
                 &+ RCT(130)*V(55)+ 1.7e-12*V(111)+ 3.2e-11*V(54)+ RCT(135)*V(107)+ 1e-10*V(61)+ 1.3e-11*V(91)+ RCT(154)*V(124)&
                 &+ RCT(156)*V(130)+ RCT(157)*V(113)+ RCT(169)*V(52)+ RCT(171)*V(44)+ RCT(183)*V(123)+ RCT(185)*V(101)+ RCT(194)&
                 &*V(37)+ RCT(198)*V(29)+ RCT(199)*V(28)+ RCT(207)*V(38)+ RCT(208)*V(39)+ RCT(209)*V(36)+ RCT(210)*V(105)+ &
                     RCT(211)&
                 &*V(114)+ RCT(212)*V(114)+ 1e-10*V(66)+ RCT(307)*V(46)+ RCT(314)*V(77)+ RCT(318)*V(69)+ RCT(322)*V(43)+ &
                     RCT(326)&
                 &*V(42)+ RCT(328)*V(71)+ RCT(334)*V(72)+ RCT(337)*V(73)+ RCT(339)*V(45)+ RCT(345)*V(74)+ RCT(348)*V(56)
  D_VAR(128) = RCT(11)*V(126)+ RCT(12)*V(125)+ 7.2e-11*V(122)+ 6.9e-12*V(122)+ 1.6e-12*V(122)+ RCT(16)*V(127)+ RCT(17)*2&
                 &*V(128)+ RCT(33)*V(134)+ RCT(35)*V(135)+ 3.5e-12*V(136)+ RCT(43)*V(90)+ RCT(44)*V(90)+ RCT(60)*V(132)+ RCT(73)&
                 &*V(117)+ RCT(81)*V(121)+ RCT(82)*V(121)+ RCT(99)*V(92)+ RCT(103)*V(115)+ RCT(107)*V(93)+ RCT(116)*V(103)&
                 &+ RCT(121)*V(112)+ RCT(128)*V(97)+ RCT(137)*V(109)+ RCT(151)*V(138)+ RCT(152)*V(138)+ RCT(155)*V(124)+ &
                     RCT(181)&
                 &*V(137)+ RCT(182)*V(131)+ 5e-11*V(30)
  D_VAR(129) = RCT(18)*V(120)+ RCT(224)+ RCT(289)*V(83)+ RCT(293)*V(116)+ RCT(296)*V(104)+ RCT(306)*V(51)
  D_VAR(130) = RCT(156)*V(127)+ RCT(264)+ RCT(291)*V(113)+ RCT(292)*V(116)+ RCT(294)*V(83)+ RCT(298)*V(104)+ RCT(300)*V(118)
  D_VAR(131) = RCT(178)*V(126)+ 2.7e-12*2*V(131)+ RCT(180)*2*V(131)+ RCT(182)*V(128)+ RCT(187)*V(134)+ RCT(188)*V(135)&
                 &+ RCT(192)*V(132)+ RCT(193)*V(132)+ RCT(203)*V(124)+ RCT(204)*V(124)+ RCT(205)*V(124)+ 4.4e-13*V(114)+ RCT(275)
  D_VAR(132) = RCT(60)*V(128)+ RCT(61)*V(134)+ 1.3e-12*V(136)+ RCT(63)*2*V(132)+ RCT(64)*2*V(132)+ RCT(76)*V(117)+ RCT(86)&
                 &*V(121)+ RCT(87)*V(121)+ RCT(101)*V(92)+ RCT(109)*V(93)+ RCT(115)*V(103)+ 2e-12*V(112)+ 2e-12*V(109)+ RCT(166)&
                 &*V(124)+ RCT(192)*V(131)+ RCT(193)*V(131)
  D_VAR(133) = RCT(66)*V(127)+ RCT(67)*V(136)+ RCT(164)*V(138)+ RCT(190)*V(137)+ RCT(236)+ RCT(237)
  D_VAR(134) = RCT(24)*V(125)+ RCT(25)*V(48)+ RCT(29)*V(136)+ RCT(32)*V(127)+ RCT(33)*V(128)+ RCT(45)*V(90)+ RCT(46)*V(90)&
                 &+ RCT(61)*V(132)+ RCT(74)*V(117)+ RCT(83)*V(121)+ RCT(100)*V(92)+ RCT(104)*V(115)+ RCT(108)*V(93)+ RCT(117)&
                 &*V(103)+ RCT(122)*V(112)+ RCT(129)*V(97)+ RCT(138)*V(109)+ RCT(158)*V(124)+ RCT(187)*V(131)+ RCT(228)
  D_VAR(135) = RCT(26)*V(126)+ RCT(27)*V(125)+ RCT(28)*V(48)+ RCT(30)*V(136)+ RCT(34)*V(127)+ RCT(35)*V(128)+ RCT(47)*V(90)&
                 &+ RCT(48)*V(90)+ RCT(53)*V(85)+ RCT(84)*V(121)+ RCT(123)*V(112)+ RCT(159)*V(124)+ RCT(188)*V(131)+ RCT(227)
  D_VAR(136) = RCT(29)*V(134)+ RCT(30)*V(135)+ 3.5e-12*V(128)+ 1.3e-12*V(132)+ RCT(67)*V(133)+ 2.3e-12*V(117)+ RCT(79)*V(119)&
                 &+ 4e-12*V(121)+ RCT(98)*V(96)+ RCT(136)*V(107)+ RCT(213)*V(114)+ RCT(229)+ RCT(230)
  D_VAR(137) = RCT(177)*V(125)+ RCT(181)*V(128)+ 4.9e-11*V(104)+ RCT(190)*V(133)+ RCT(191)*V(106)+ RCT(195)*V(100)+ RCT(196)&
                 &*V(119)+ RCT(197)*V(70)+ 3.32e-15*V(89)+ 1.1e-15*V(78)+ RCT(219)*V(114)
  D_VAR(138) = RCT(143)*V(125)+ RCT(150)*V(98)+ RCT(151)*V(128)+ RCT(152)*V(128)+ RCT(153)*V(87)+ RCT(162)*V(116)+ RCT(163)&
                 &*V(99)+ RCT(164)*V(133)+ 5.9e-11*V(106)+ RCT(172)*V(100)+ 8e-11*V(119)+ RCT(174)*V(70)+ RCT(202)*V(101)+ &
                     1.45e-11&
                 &*V(89)+ 3.3e-10*V(114)+ RCT(315)*V(77)+ RCT(319)*V(69)+ RCT(323)*V(43)+ RCT(329)*V(71)+ RCT(335)*V(72)+ &
                     RCT(338)&
                 &*V(73)+ RCT(340)*V(45)+ RCT(346)*V(74)+ RCT(349)*V(56)
      
END SUBROUTINE Fun_SPLIT
 
SUBROUTINE CalcStoichNum(StoichNum)

!   StoichNum -  Stoichiometric numbers
  REAL(kind=dp) :: StoichNum(NVAR,NREACT)

  StoichNum(:,:) = 0.
  StoichNum(1,277) = - 1
  StoichNum(2,284) = - 1
  StoichNum(3,282) = - 1
  StoichNum(4,288) = - 1
  StoichNum(5,301) = - 1
  StoichNum(6,174) = 1
  StoichNum(7,167) = 1
  StoichNum(7,169) = 1
  StoichNum(7,170) = 2
  StoichNum(7,171) = 2
  StoichNum(7,174) = 1
  StoichNum(7,175) = 1
  StoichNum(7,176) = 1
  StoichNum(7,194) = 1
  StoichNum(7,197) = 1
  StoichNum(7,198) = 1
  StoichNum(7,199) = 1
  StoichNum(7,207) = 1
  StoichNum(7,208) = 1
  StoichNum(7,209) = 1
  StoichNum(7,270) = 1
  StoichNum(7,271) = 2
  StoichNum(7,272) = 1
  StoichNum(7,273) = 1
  StoichNum(7,280) = 1
  StoichNum(7,281) = 1
  StoichNum(7,282) = 1
  StoichNum(7,284) = 1
  StoichNum(7,285) = 1
  StoichNum(7,286) = 1
  StoichNum(7,287) = 1
  StoichNum(7,313) = 0.72
  StoichNum(7,314) = 1
  StoichNum(7,315) = 1
  StoichNum(7,316) = 1
  StoichNum(7,317) = 0.7
  StoichNum(7,318) = 2
  StoichNum(7,319) = 2
  StoichNum(7,320) = 1.6
  StoichNum(7,321) = 2
  StoichNum(7,322) = 1
  StoichNum(7,323) = 1
  StoichNum(7,324) = 1
  StoichNum(7,325) = 0.23
  StoichNum(7,326) = 1
  StoichNum(7,327) = 0.69
  StoichNum(7,328) = 2
  StoichNum(7,329) = 2
  StoichNum(7,330) = 2
  StoichNum(7,331) = 0.75
  StoichNum(7,332) = 2
  StoichNum(7,333) = 1.52
  StoichNum(7,334) = 2
  StoichNum(7,335) = 2
  StoichNum(7,336) = 0.8
  StoichNum(7,337) = 2
  StoichNum(7,338) = 2
  StoichNum(7,339) = 1
  StoichNum(7,340) = 1
  StoichNum(7,341) = 1
  StoichNum(7,342) = 0.6
  StoichNum(7,343) = 2
  StoichNum(7,344) = 0.3
  StoichNum(7,345) = 1
  StoichNum(7,346) = 1
  StoichNum(7,347) = 1
  StoichNum(7,348) = 2
  StoichNum(7,349) = 2
  StoichNum(8,175) = 2
  StoichNum(8,176) = 1
  StoichNum(8,272) = 1
  StoichNum(8,273) = 2
  StoichNum(8,282) = 3
  StoichNum(8,284) = 2
  StoichNum(8,316) = 2
  StoichNum(9,214) = 0.4
  StoichNum(9,217) = 1
  StoichNum(10,290) = 2
  StoichNum(11,290) = 2
  StoichNum(12,301) = 1
  StoichNum(13,57) = 1
  StoichNum(13,58) = 1
  StoichNum(13,163) = 1
  StoichNum(13,239) = 1
  StoichNum(14,68) = 1
  StoichNum(15,22) = 1
  StoichNum(15,23) = 1
  StoichNum(15,226) = 1
  StoichNum(16,3) = 2
  StoichNum(16,4) = 2
  StoichNum(16,6) = 1
  StoichNum(16,7) = 1
  StoichNum(16,8) = 1
  StoichNum(16,9) = 1
  StoichNum(16,11) = 1
  StoichNum(16,12) = 1
  StoichNum(16,18) = 1
  StoichNum(16,22) = 1
  StoichNum(16,23) = 1
  StoichNum(16,26) = 2
  StoichNum(16,36) = 1
  StoichNum(16,42) = 1
  StoichNum(16,47) = 1
  StoichNum(16,48) = 1
  StoichNum(16,49) = 1
  StoichNum(16,53) = 1
  StoichNum(16,57) = 1
  StoichNum(16,62) = 1
  StoichNum(16,67) = 1
  StoichNum(16,71) = 1
  StoichNum(16,75) = 1
  StoichNum(16,79) = 1
  StoichNum(16,85) = 1
  StoichNum(16,96) = 1
  StoichNum(16,98) = 1
  StoichNum(16,119) = 1
  StoichNum(16,134) = 1
  StoichNum(16,136) = 1
  StoichNum(16,144) = 2
  StoichNum(16,145) = 2
  StoichNum(16,146) = 2
  StoichNum(16,147) = 1
  StoichNum(16,154) = 1
  StoichNum(16,166) = 1
  StoichNum(16,168) = 1
  StoichNum(16,170) = 1
  StoichNum(16,178) = 2
  StoichNum(16,179) = 2
  StoichNum(16,180) = 2
  StoichNum(16,184) = 1
  StoichNum(16,193) = 1
  StoichNum(16,203) = 1
  StoichNum(16,204) = 2
  StoichNum(16,205) = 2
  StoichNum(16,230) = 2
  StoichNum(16,262) = 2
  StoichNum(16,265) = 1
  StoichNum(16,276) = 1
  StoichNum(16,289) = 1
  StoichNum(16,290) = 3
  StoichNum(16,291) = 1
  StoichNum(16,292) = 1
  StoichNum(16,294) = 2
  StoichNum(16,295) = 1
  StoichNum(16,297) = 1
  StoichNum(16,298) = 1
  StoichNum(16,299) = 1
  StoichNum(16,300) = 1
  StoichNum(16,308) = 1
  StoichNum(16,313) = 0.17
  StoichNum(16,317) = 0.35
  StoichNum(16,325) = 0.23
  StoichNum(16,327) = 0.69
  StoichNum(16,331) = 0.75
  StoichNum(16,333) = 0.76
  StoichNum(16,336) = 0.82
  StoichNum(16,342) = 0.3
  StoichNum(16,344) = 0.3
  StoichNum(16,347) = 0.66
  StoichNum(17,15) = 1
  StoichNum(17,20) = 1
  StoichNum(17,25) = 1
  StoichNum(17,33) = 1
  StoichNum(17,37) = 1
  StoichNum(17,38) = 1
  StoichNum(17,61) = 1
  StoichNum(17,74) = 1
  StoichNum(17,82) = 1
  StoichNum(17,83) = 1
  StoichNum(17,100) = 1
  StoichNum(17,104) = 1
  StoichNum(17,108) = 1
  StoichNum(17,117) = 1
  StoichNum(17,122) = 1
  StoichNum(17,129) = 1
  StoichNum(17,138) = 1
  StoichNum(17,152) = 1
  StoichNum(17,185) = 1
  StoichNum(17,210) = 1
  StoichNum(17,211) = 1
  StoichNum(17,212) = 1
  StoichNum(17,214) = 0.4
  StoichNum(17,218) = 1
  StoichNum(17,219) = 1
  StoichNum(17,221) = 2
  StoichNum(17,226) = 1
  StoichNum(17,228) = 1
  StoichNum(17,234) = 0.333
  StoichNum(17,238) = 1
  StoichNum(17,263) = 1
  StoichNum(17,266) = 1
  StoichNum(17,277) = 1
  StoichNum(17,302) = 2
  StoichNum(17,304) = 1
  StoichNum(18,130) = 0.8
  StoichNum(18,256) = - 1
  StoichNum(19,148) = 1
  StoichNum(19,149) = - 1
  StoichNum(19,262) = - 1
  StoichNum(20,304) = - 1
  StoichNum(20,309) = 1
  StoichNum(21,70) = - 1
  StoichNum(22,114) = - 1
  StoichNum(23,167) = - 1
  StoichNum(23,270) = - 1
  StoichNum(24,175) = - 1
  StoichNum(24,273) = - 1
  StoichNum(25,331) = - 0.75
  StoichNum(25,332) = - 1
  StoichNum(26,342) = - 0.3
  StoichNum(26,343) = - 1
  StoichNum(27,176) = - 1
  StoichNum(27,272) = - 1
  StoichNum(28,199) = - 1
  StoichNum(28,280) = - 1
  StoichNum(29,198) = - 1
  StoichNum(29,281) = - 1
  StoichNum(30,216) = 1
  StoichNum(30,217) = - 1
  StoichNum(31,41) = - 1
  StoichNum(32,95) = - 1
  StoichNum(33,320) = - 0.8
  StoichNum(33,321) = - 1
  StoichNum(34,266) = - 1
  StoichNum(34,294) = 1
  StoichNum(35,147) = 1
  StoichNum(35,203) = 1
  StoichNum(35,263) = - 1
  StoichNum(36,209) = - 1
  StoichNum(36,285) = - 1
  StoichNum(37,194) = - 1
  StoichNum(37,279) = - 1
  StoichNum(38,207) = - 1
  StoichNum(38,286) = - 1
  StoichNum(39,208) = - 1
  StoichNum(39,287) = - 1
  StoichNum(40,306) = 1
  StoichNum(40,312) = - 1
  StoichNum(41,305) = - 1
  StoichNum(41,307) = 1
  StoichNum(42,325) = - 0.23
  StoichNum(42,326) = - 1
  StoichNum(43,322) = - 1
  StoichNum(43,323) = - 1
  StoichNum(43,324) = - 1
  StoichNum(44,170) = - 1
  StoichNum(44,171) = - 1
  StoichNum(44,271) = - 1
  StoichNum(45,339) = - 1
  StoichNum(45,340) = - 1
  StoichNum(45,341) = - 1
  StoichNum(46,307) = - 1
  StoichNum(46,308) = - 1
  StoichNum(46,309) = - 1
  StoichNum(47,91) = - 1
  StoichNum(47,142) = 1
  StoichNum(47,243) = - 1
  StoichNum(48,20) = - 1
  StoichNum(48,25) = - 1
  StoichNum(48,28) = - 1
  StoichNum(48,228) = 1
  StoichNum(49,22) = - 1
  StoichNum(49,23) = - 1
  StoichNum(49,28) = 1
  StoichNum(49,47) = 1
  StoichNum(49,226) = - 1
  StoichNum(50,52) = 1
  StoichNum(50,55) = - 1
  StoichNum(51,210) = 1
  StoichNum(51,306) = - 1
  StoichNum(51,311) = - 1
  StoichNum(51,312) = 1
  StoichNum(52,168) = - 1
  StoichNum(52,169) = - 1
  StoichNum(52,269) = - 1
  StoichNum(53,50) = 1
  StoichNum(53,52) = - 1
  StoichNum(53,54) = - 1
  StoichNum(53,55) = 1
  StoichNum(54,123) = 1
  StoichNum(54,132) = - 1
  StoichNum(54,133) = - 1
  StoichNum(54,258) = - 1
  StoichNum(55,128) = 1
  StoichNum(55,130) = - 1
  StoichNum(55,255) = - 1
  StoichNum(56,347) = - 0.66
  StoichNum(56,348) = - 1
  StoichNum(56,349) = - 1
  StoichNum(57,73) = 1
  StoichNum(57,77) = - 1
  StoichNum(57,240) = - 1
  StoichNum(58,81) = 1
  StoichNum(58,90) = - 1
  StoichNum(58,242) = - 1
  StoichNum(59,302) = - 1
  StoichNum(59,303) = - 1
  StoichNum(59,304) = 1
  StoichNum(59,305) = 1
  StoichNum(59,308) = 1
  StoichNum(59,310) = 1
  StoichNum(60,100) = 0.04
  StoichNum(60,113) = - 1
  StoichNum(60,250) = - 1
  StoichNum(61,137) = 1
  StoichNum(61,141) = - 1
  StoichNum(61,259) = - 1
  StoichNum(62,103) = 1
  StoichNum(62,105) = - 1
  StoichNum(63,99) = 1
  StoichNum(63,102) = - 1
  StoichNum(63,245) = - 1
  StoichNum(64,35) = 1
  StoichNum(64,39) = - 1
  StoichNum(64,40) = - 1
  StoichNum(64,234) = - 1
  StoichNum(65,80) = - 1
  StoichNum(65,82) = 1
  StoichNum(65,87) = 1
  StoichNum(65,88) = 0.18
  StoichNum(66,212) = 1
  StoichNum(66,214) = - 1
  StoichNum(66,220) = 1
  StoichNum(67,107) = 1
  StoichNum(67,110) = - 1
  StoichNum(67,249) = - 1
  StoichNum(68,32) = 1
  StoichNum(68,37) = - 1
  StoichNum(68,53) = 1
  StoichNum(68,232) = - 1
  StoichNum(69,317) = - 0.35
  StoichNum(69,318) = - 1
  StoichNum(69,319) = - 1
  StoichNum(70,94) = - 1
  StoichNum(70,174) = - 1
  StoichNum(70,197) = - 1
  StoichNum(71,327) = - 0.69
  StoichNum(71,328) = - 1
  StoichNum(71,329) = - 1
  StoichNum(71,330) = - 1
  StoichNum(72,333) = - 0.76
  StoichNum(72,334) = - 1
  StoichNum(72,335) = - 1
  StoichNum(73,336) = - 0.82
  StoichNum(73,337) = - 1
  StoichNum(73,338) = - 1
  StoichNum(74,344) = - 0.3
  StoichNum(74,345) = - 1
  StoichNum(74,346) = - 1
  StoichNum(75,84) = 1
  StoichNum(75,92) = - 1
  StoichNum(75,93) = - 1
  StoichNum(75,244) = - 1
  StoichNum(76,69) = - 1
  StoichNum(76,71) = 0.23125
  StoichNum(76,96) = 0.22
  StoichNum(76,119) = 0.45
  StoichNum(76,134) = 0.28
  StoichNum(77,313) = - 0.72
  StoichNum(77,314) = - 1
  StoichNum(77,315) = - 1
  StoichNum(77,316) = - 1
  StoichNum(78,145) = 1
  StoichNum(78,162) = 1
  StoichNum(78,201) = - 1
  StoichNum(78,206) = 1
  StoichNum(78,261) = - 1
  StoichNum(78,291) = 1
  StoichNum(78,292) = 1
  StoichNum(79,116) = 1
  StoichNum(79,118) = - 1
  StoichNum(79,251) = - 1
  StoichNum(80,211) = 1
  StoichNum(80,213) = 1
  StoichNum(80,215) = - 1
  StoichNum(80,216) = - 1
  StoichNum(80,218) = 1
  StoichNum(80,219) = 1
  StoichNum(81,115) = 0.88
  StoichNum(81,117) = 0.56
  StoichNum(81,118) = 0.85
  StoichNum(81,127) = - 1
  StoichNum(81,131) = 1
  StoichNum(81,251) = 0.67
  StoichNum(81,254) = - 1
  StoichNum(81,257) = 0.67
  StoichNum(82,121) = 1
  StoichNum(82,126) = - 1
  StoichNum(82,253) = - 1
  StoichNum(83,30) = 1
  StoichNum(83,31) = - 1
  StoichNum(83,231) = - 1
  StoichNum(83,289) = - 1
  StoichNum(83,290) = - 1
  StoichNum(83,294) = - 1
  StoichNum(84,42) = 1
  StoichNum(84,43) = 1
  StoichNum(84,48) = 1
  StoichNum(84,49) = - 1
  StoichNum(84,50) = - 1
  StoichNum(85,44) = 1
  StoichNum(85,51) = - 1
  StoichNum(85,52) = - 1
  StoichNum(85,53) = - 1
  StoichNum(85,54) = 1
  StoichNum(85,56) = - 1
  StoichNum(86,100) = 0.96
  StoichNum(86,101) = 1
  StoichNum(86,102) = 0.7
  StoichNum(86,106) = - 1
  StoichNum(86,113) = 1
  StoichNum(86,245) = 1
  StoichNum(86,246) = - 1
  StoichNum(86,250) = 1
  StoichNum(87,17) = 1
  StoichNum(87,19) = - 1
  StoichNum(87,71) = 0.13875
  StoichNum(87,134) = 0.09
  StoichNum(87,153) = - 1
  StoichNum(87,225) = - 1
  StoichNum(88,59) = - 1
  StoichNum(88,64) = 1
  StoichNum(88,76) = 0.25
  StoichNum(88,96) = 0.03
  StoichNum(88,101) = 0.2
  StoichNum(88,109) = 0.5
  StoichNum(88,115) = 0.18
  StoichNum(88,124) = 0.25
  StoichNum(88,139) = 0.25
  StoichNum(89,200) = - 1
  StoichNum(89,201) = 1
  StoichNum(89,202) = 1
  StoichNum(89,205) = 1
  StoichNum(89,206) = - 1
  StoichNum(89,283) = - 1
  StoichNum(89,297) = 1
  StoichNum(89,298) = 1
  StoichNum(89,299) = 1
  StoichNum(89,300) = 1
  StoichNum(90,41) = 1
  StoichNum(90,42) = - 1
  StoichNum(90,43) = - 1
  StoichNum(90,44) = - 1
  StoichNum(90,45) = - 1
  StoichNum(90,46) = - 1
  StoichNum(90,47) = - 1
  StoichNum(90,48) = - 1
  StoichNum(90,49) = 1
  StoichNum(91,136) = 1
  StoichNum(91,138) = 0.044
  StoichNum(91,142) = - 1
  StoichNum(91,260) = - 1
  StoichNum(92,95) = 0.82
  StoichNum(92,99) = - 1
  StoichNum(92,100) = - 1
  StoichNum(92,101) = - 1
  StoichNum(92,102) = 0.3
  StoichNum(93,106) = 1
  StoichNum(93,107) = - 1
  StoichNum(93,108) = - 1
  StoichNum(93,109) = - 1
  StoichNum(93,110) = 0.3
  StoichNum(94,96) = 0.04
  StoichNum(94,109) = 0.5
  StoichNum(94,110) = 0.7
  StoichNum(94,111) = 1
  StoichNum(94,112) = - 1
  StoichNum(94,119) = 0.9
  StoichNum(94,122) = 0.5
  StoichNum(94,124) = 0.5
  StoichNum(94,125) = 1
  StoichNum(94,139) = 0.25
  StoichNum(94,248) = - 1
  StoichNum(94,253) = 0.5
  StoichNum(95,66) = 1
  StoichNum(95,67) = 1
  StoichNum(95,68) = - 1
  StoichNum(95,71) = 0.63
  StoichNum(95,91) = 1
  StoichNum(95,92) = 1
  StoichNum(95,96) = 0.31
  StoichNum(95,112) = 1
  StoichNum(95,119) = 0.22
  StoichNum(95,122) = 0.25
  StoichNum(95,124) = 0.125
  StoichNum(95,125) = 0.5
  StoichNum(95,134) = 0.14
  StoichNum(95,164) = 1
  StoichNum(95,190) = 1
  StoichNum(95,236) = 1
  StoichNum(95,237) = 1
  StoichNum(95,238) = 1
  StoichNum(95,239) = 1
  StoichNum(95,241) = 1
  StoichNum(95,243) = 1
  StoichNum(95,248) = 1
  StoichNum(95,252) = 1
  StoichNum(95,253) = 0.25
  StoichNum(95,308) = 1
  StoichNum(95,309) = 1
  StoichNum(96,96) = - 1
  StoichNum(96,97) = - 1
  StoichNum(96,98) = - 1
  StoichNum(97,127) = 1
  StoichNum(97,128) = - 1
  StoichNum(97,129) = - 1
  StoichNum(97,130) = 0.2
  StoichNum(98,7) = - 1
  StoichNum(98,10) = - 1
  StoichNum(98,14) = 1
  StoichNum(98,57) = 0.05
  StoichNum(98,150) = - 1
  StoichNum(98,236) = 1
  StoichNum(98,239) = 0.69
  StoichNum(99,57) = - 1
  StoichNum(99,58) = - 1
  StoichNum(99,96) = 0.06
  StoichNum(99,163) = - 1
  StoichNum(99,239) = - 1
  StoichNum(100,71) = - 1
  StoichNum(100,72) = - 1
  StoichNum(100,172) = - 1
  StoichNum(100,195) = - 1
  StoichNum(101,180) = 1
  StoichNum(101,185) = - 1
  StoichNum(101,186) = 1
  StoichNum(101,200) = 1
  StoichNum(101,202) = - 1
  StoichNum(101,274) = - 1
  StoichNum(101,295) = 1
  StoichNum(102,34) = 1
  StoichNum(102,38) = - 1
  StoichNum(102,67) = 1
  StoichNum(102,79) = 1
  StoichNum(102,213) = 1
  StoichNum(102,233) = - 1
  StoichNum(102,289) = 2
  StoichNum(102,292) = 1
  StoichNum(102,293) = 1
  StoichNum(102,294) = 1
  StoichNum(102,296) = 1
  StoichNum(102,297) = 1
  StoichNum(102,298) = 1
  StoichNum(103,114) = 1
  StoichNum(103,115) = - 1
  StoichNum(103,116) = - 1
  StoichNum(103,117) = - 1
  StoichNum(103,118) = 0.15
  StoichNum(104,186) = - 1
  StoichNum(104,188) = 1
  StoichNum(104,189) = - 1
  StoichNum(104,278) = - 1
  StoichNum(104,296) = - 1
  StoichNum(104,298) = - 1
  StoichNum(105,210) = - 1
  StoichNum(105,214) = 0.6
  StoichNum(105,215) = 1
  StoichNum(105,302) = 1
  StoichNum(105,303) = 1
  StoichNum(105,310) = - 1
  StoichNum(105,311) = 1
  StoichNum(106,60) = 1
  StoichNum(106,65) = - 1
  StoichNum(106,165) = - 1
  StoichNum(106,191) = - 1
  StoichNum(106,235) = - 1
  StoichNum(107,134) = - 1
  StoichNum(107,135) = - 1
  StoichNum(107,136) = - 1
  StoichNum(108,105) = 0.5
  StoichNum(108,109) = 0.2
  StoichNum(108,111) = - 1
  StoichNum(108,122) = 0.25
  StoichNum(108,124) = 0.375
  StoichNum(108,125) = 1
  StoichNum(108,132) = 1
  StoichNum(108,139) = 0.25
  StoichNum(108,142) = 1
  StoichNum(108,247) = - 1
  StoichNum(108,253) = 0.25
  StoichNum(108,258) = 1
  StoichNum(109,135) = 1
  StoichNum(109,137) = - 1
  StoichNum(109,138) = - 1
  StoichNum(109,139) = - 1
  StoichNum(109,140) = - 2
  StoichNum(110,119) = - 1
  StoichNum(110,120) = - 1
  StoichNum(110,134) = 0.65
  StoichNum(110,138) = 0.956
  StoichNum(110,139) = 0.5
  StoichNum(110,140) = 2
  StoichNum(110,141) = 1
  StoichNum(110,252) = - 1
  StoichNum(110,259) = 1
  StoichNum(110,260) = 1
  StoichNum(111,98) = 1
  StoichNum(111,104) = 0.02
  StoichNum(111,117) = 0.16
  StoichNum(111,129) = 0.015
  StoichNum(111,131) = - 1
  StoichNum(111,257) = - 1
  StoichNum(112,120) = 1
  StoichNum(112,121) = - 1
  StoichNum(112,122) = - 1
  StoichNum(112,123) = - 1
  StoichNum(112,124) = - 1
  StoichNum(112,125) = - 2
  StoichNum(112,126) = 1
  StoichNum(112,133) = 1
  StoichNum(112,134) = 0.1
  StoichNum(113,155) = 1
  StoichNum(113,157) = - 1
  StoichNum(113,265) = - 1
  StoichNum(113,291) = - 1
  StoichNum(113,293) = 1
  StoichNum(113,299) = - 1
  StoichNum(114,211) = - 1
  StoichNum(114,212) = - 1
  StoichNum(114,213) = - 1
  StoichNum(114,218) = - 1
  StoichNum(114,219) = - 1
  StoichNum(114,220) = - 1
  StoichNum(115,72) = 0.666667
  StoichNum(115,97) = 1
  StoichNum(115,103) = - 1
  StoichNum(115,104) = - 1
  StoichNum(115,105) = 0.5
  StoichNum(115,172) = 0.666667
  StoichNum(115,195) = 0.666667
  StoichNum(116,159) = 1
  StoichNum(116,160) = - 1
  StoichNum(116,161) = - 1
  StoichNum(116,162) = - 1
  StoichNum(116,267) = - 1
  StoichNum(116,268) = - 1
  StoichNum(116,292) = - 1
  StoichNum(116,293) = - 1
  StoichNum(116,297) = - 1
  StoichNum(117,70) = 1
  StoichNum(117,73) = - 1
  StoichNum(117,74) = - 1
  StoichNum(117,75) = - 1
  StoichNum(117,76) = - 1
  StoichNum(117,77) = 0.3
  StoichNum(117,88) = - 1
  StoichNum(117,95) = 0.18
  StoichNum(117,96) = 0.06
  StoichNum(117,115) = 0.12
  StoichNum(117,117) = 0.28
  StoichNum(117,251) = 0.33
  StoichNum(117,254) = 1
  StoichNum(117,257) = 0.33
  StoichNum(118,182) = 1
  StoichNum(118,184) = - 1
  StoichNum(118,185) = 1
  StoichNum(118,192) = 1
  StoichNum(118,276) = - 1
  StoichNum(118,295) = - 1
  StoichNum(118,296) = 1
  StoichNum(118,300) = - 1
  StoichNum(119,74) = 1
  StoichNum(119,75) = 1
  StoichNum(119,76) = 0.75
  StoichNum(119,77) = 0.7
  StoichNum(119,78) = - 1
  StoichNum(119,79) = - 1
  StoichNum(119,88) = 1
  StoichNum(119,96) = 0.47
  StoichNum(119,104) = 0.98
  StoichNum(119,115) = 0.12
  StoichNum(119,117) = 0.28
  StoichNum(119,129) = 0.985
  StoichNum(119,173) = - 1
  StoichNum(119,196) = - 1
  StoichNum(119,240) = 1
  StoichNum(119,241) = - 1
  StoichNum(119,251) = 0.33
  StoichNum(119,255) = 1
  StoichNum(119,257) = 0.33
  StoichNum(120,1) = - 1
  StoichNum(120,3) = - 1
  StoichNum(120,7) = - 1
  StoichNum(120,18) = - 1
  StoichNum(120,21) = - 1
  StoichNum(120,22) = - 1
  StoichNum(120,23) = - 1
  StoichNum(120,57) = - 1
  StoichNum(120,167) = - 1
  StoichNum(120,168) = - 1
  StoichNum(120,170) = - 1
  StoichNum(120,175) = - 1
  StoichNum(120,176) = - 1
  StoichNum(120,222) = 1
  StoichNum(120,226) = 1
  StoichNum(120,313) = - 1
  StoichNum(120,317) = - 1
  StoichNum(120,320) = - 1
  StoichNum(120,325) = - 1
  StoichNum(120,327) = - 1
  StoichNum(120,331) = - 1
  StoichNum(120,333) = - 1
  StoichNum(120,336) = - 1
  StoichNum(120,342) = - 1
  StoichNum(120,344) = - 1
  StoichNum(120,347) = - 0.66
  StoichNum(121,78) = 1
  StoichNum(121,79) = 1
  StoichNum(121,81) = - 1
  StoichNum(121,82) = - 1
  StoichNum(121,83) = - 1
  StoichNum(121,84) = - 1
  StoichNum(121,85) = - 1
  StoichNum(121,86) = - 1
  StoichNum(121,87) = - 1
  StoichNum(121,88) = - 1
  StoichNum(121,89) = - 2
  StoichNum(121,90) = 1
  StoichNum(121,93) = 1
  StoichNum(121,96) = 0.23
  StoichNum(121,108) = 1
  StoichNum(121,109) = 0.3
  StoichNum(121,112) = 1
  StoichNum(121,119) = 0.1
  StoichNum(121,122) = 0.25
  StoichNum(121,124) = 0.125
  StoichNum(121,129) = 0.985
  StoichNum(121,134) = 0.1
  StoichNum(121,173) = 1
  StoichNum(121,196) = 1
  StoichNum(121,244) = 1
  StoichNum(121,246) = 1
  StoichNum(121,247) = 1
  StoichNum(121,248) = 1
  StoichNum(121,249) = 1
  StoichNum(121,252) = 1
  StoichNum(121,253) = 0.25
  StoichNum(121,254) = 1
  StoichNum(121,255) = 1
  StoichNum(121,256) = 2
  StoichNum(122,5) = - 1
  StoichNum(122,6) = - 1
  StoichNum(122,7) = 1
  StoichNum(122,8) = 1
  StoichNum(122,10) = 1
  StoichNum(122,13) = - 1
  StoichNum(122,14) = - 1
  StoichNum(122,15) = - 1
  StoichNum(122,57) = 0.4
  StoichNum(122,68) = 1
  StoichNum(122,150) = 1
  StoichNum(122,224) = 1
  StoichNum(122,237) = 1
  StoichNum(122,239) = 0.31
  StoichNum(122,264) = 1
  StoichNum(123,181) = 1
  StoichNum(123,183) = - 1
  StoichNum(123,190) = 1
  StoichNum(123,191) = 1
  StoichNum(123,195) = 1
  StoichNum(123,196) = 1
  StoichNum(123,197) = 1
  StoichNum(123,219) = 1
  StoichNum(123,295) = - 1
  StoichNum(123,297) = - 1
  StoichNum(123,299) = - 1
  StoichNum(124,143) = 1
  StoichNum(124,144) = - 1
  StoichNum(124,145) = - 2
  StoichNum(124,146) = - 2
  StoichNum(124,147) = - 2
  StoichNum(124,148) = - 2
  StoichNum(124,149) = 2
  StoichNum(124,152) = 1
  StoichNum(124,154) = - 1
  StoichNum(124,155) = - 1
  StoichNum(124,157) = 1
  StoichNum(124,158) = - 1
  StoichNum(124,159) = - 1
  StoichNum(124,160) = 1
  StoichNum(124,161) = 1
  StoichNum(124,166) = - 1
  StoichNum(124,167) = 1
  StoichNum(124,175) = 1
  StoichNum(124,176) = 1
  StoichNum(124,203) = - 1
  StoichNum(124,204) = - 1
  StoichNum(124,205) = - 1
  StoichNum(124,263) = 1
  StoichNum(124,268) = 1
  StoichNum(124,313) = 0.55
  StoichNum(124,320) = 0.8
  StoichNum(125,2) = 1
  StoichNum(125,3) = - 1
  StoichNum(125,4) = - 1
  StoichNum(125,6) = - 1
  StoichNum(125,9) = - 1
  StoichNum(125,12) = - 1
  StoichNum(125,24) = - 1
  StoichNum(125,27) = - 1
  StoichNum(125,42) = - 1
  StoichNum(125,49) = - 1
  StoichNum(125,71) = - 1
  StoichNum(125,82) = 1
  StoichNum(125,96) = - 1
  StoichNum(125,119) = - 1
  StoichNum(125,134) = - 1
  StoichNum(125,143) = - 1
  StoichNum(125,177) = - 1
  StoichNum(125,216) = - 1
  StoichNum(125,222) = - 1
  StoichNum(125,223) = - 1
  StoichNum(125,303) = - 1
  StoichNum(126,1) = 1
  StoichNum(126,2) = - 1
  StoichNum(126,4) = - 1
  StoichNum(126,8) = - 1
  StoichNum(126,11) = - 1
  StoichNum(126,15) = 1
  StoichNum(126,20) = 1
  StoichNum(126,21) = 1
  StoichNum(126,25) = 1
  StoichNum(126,26) = - 1
  StoichNum(126,28) = 1
  StoichNum(126,144) = - 1
  StoichNum(126,161) = - 1
  StoichNum(126,178) = - 1
  StoichNum(126,184) = - 1
  StoichNum(126,221) = 2
  StoichNum(126,223) = 1
  StoichNum(126,227) = 1
  StoichNum(126,228) = 1
  StoichNum(126,229) = 1
  StoichNum(126,238) = 1
  StoichNum(126,263) = 1
  StoichNum(126,275) = 1
  StoichNum(126,302) = 1
  StoichNum(126,304) = 1
  StoichNum(126,308) = - 1
  StoichNum(126,310) = 1
  StoichNum(126,311) = 1
  StoichNum(126,313) = 0.28
  StoichNum(126,317) = 0.65
  StoichNum(126,320) = 0.2
  StoichNum(126,325) = 0.77
  StoichNum(126,327) = 0.31
  StoichNum(126,331) = 0.25
  StoichNum(126,333) = 0.24
  StoichNum(126,336) = 0.18
  StoichNum(126,342) = 0.7
  StoichNum(126,344) = 0.7
  StoichNum(127,6) = 1
  StoichNum(127,7) = 1
  StoichNum(127,8) = - 1
  StoichNum(127,9) = - 1
  StoichNum(127,10) = - 1
  StoichNum(127,11) = 1
  StoichNum(127,12) = 1
  StoichNum(127,13) = 2
  StoichNum(127,16) = - 1
  StoichNum(127,18) = 2
  StoichNum(127,19) = - 1
  StoichNum(127,32) = - 1
  StoichNum(127,33) = 1
  StoichNum(127,34) = - 1
  StoichNum(127,36) = 1
  StoichNum(127,37) = - 1
  StoichNum(127,38) = - 1
  StoichNum(127,40) = - 1
  StoichNum(127,41) = - 1
  StoichNum(127,43) = 1
  StoichNum(127,45) = 1
  StoichNum(127,51) = - 1
  StoichNum(127,54) = - 1
  StoichNum(127,55) = - 1
  StoichNum(127,57) = 0.75
  StoichNum(127,58) = - 1
  StoichNum(127,59) = - 1
  StoichNum(127,65) = - 0.7
  StoichNum(127,66) = - 1
  StoichNum(127,68) = - 1
  StoichNum(127,69) = - 1
  StoichNum(127,70) = - 1
  StoichNum(127,71) = 0.13
  StoichNum(127,72) = - 1
  StoichNum(127,77) = - 0.3
  StoichNum(127,78) = - 1
  StoichNum(127,80) = - 1
  StoichNum(127,90) = - 1
  StoichNum(127,91) = - 1
  StoichNum(127,92) = - 1
  StoichNum(127,94) = - 1
  StoichNum(127,95) = - 1
  StoichNum(127,96) = 0.33
  StoichNum(127,97) = - 1
  StoichNum(127,102) = - 0.3
  StoichNum(127,105) = - 0.5
  StoichNum(127,106) = - 1
  StoichNum(127,110) = - 0.3
  StoichNum(127,111) = - 1
  StoichNum(127,112) = - 1
  StoichNum(127,113) = - 1
  StoichNum(127,114) = - 1
  StoichNum(127,118) = - 0.15
  StoichNum(127,119) = 0.19
  StoichNum(127,120) = - 1
  StoichNum(127,126) = - 1
  StoichNum(127,127) = - 1
  StoichNum(127,130) = - 0.2
  StoichNum(127,131) = - 1
  StoichNum(127,132) = - 1
  StoichNum(127,134) = 0.25
  StoichNum(127,135) = - 1
  StoichNum(127,142) = - 1
  StoichNum(127,152) = 1
  StoichNum(127,154) = - 1
  StoichNum(127,156) = - 1
  StoichNum(127,157) = - 1
  StoichNum(127,165) = 1
  StoichNum(127,168) = 1
  StoichNum(127,169) = - 1
  StoichNum(127,170) = 1
  StoichNum(127,171) = - 1
  StoichNum(127,183) = - 1
  StoichNum(127,184) = 1
  StoichNum(127,185) = - 1
  StoichNum(127,194) = - 1
  StoichNum(127,198) = - 1
  StoichNum(127,199) = - 1
  StoichNum(127,207) = - 1
  StoichNum(127,208) = - 1
  StoichNum(127,209) = - 1
  StoichNum(127,210) = - 1
  StoichNum(127,211) = - 1
  StoichNum(127,212) = - 1
  StoichNum(127,214) = - 1
  StoichNum(127,224) = 1
  StoichNum(127,225) = 2
  StoichNum(127,232) = 1
  StoichNum(127,233) = 1
  StoichNum(127,234) = 0.333
  StoichNum(127,235) = 1
  StoichNum(127,240) = 1
  StoichNum(127,242) = 1
  StoichNum(127,245) = 1
  StoichNum(127,249) = 1
  StoichNum(127,251) = 1
  StoichNum(127,253) = 1
  StoichNum(127,255) = 1
  StoichNum(127,259) = 1
  StoichNum(127,265) = 1
  StoichNum(127,276) = 1
  StoichNum(127,305) = 1
  StoichNum(127,307) = - 1
  StoichNum(127,313) = 0.05
  StoichNum(127,314) = - 1
  StoichNum(127,317) = 0.24
  StoichNum(127,318) = - 1
  StoichNum(127,322) = - 1
  StoichNum(127,326) = - 1
  StoichNum(127,328) = - 1
  StoichNum(127,333) = 0.6
  StoichNum(127,334) = - 1
  StoichNum(127,336) = 0.38
  StoichNum(127,337) = - 1
  StoichNum(127,339) = - 1
  StoichNum(127,345) = - 1
  StoichNum(127,347) = 0.15
  StoichNum(127,348) = - 1
  StoichNum(128,5) = 1
  StoichNum(128,9) = 1
  StoichNum(128,11) = - 1
  StoichNum(128,12) = - 1
  StoichNum(128,13) = - 1
  StoichNum(128,14) = - 1
  StoichNum(128,15) = - 1
  StoichNum(128,16) = - 1
  StoichNum(128,17) = - 2
  StoichNum(128,19) = 1
  StoichNum(128,33) = - 1
  StoichNum(128,35) = - 1
  StoichNum(128,36) = - 1
  StoichNum(128,39) = 1
  StoichNum(128,43) = - 1
  StoichNum(128,44) = - 1
  StoichNum(128,45) = 1
  StoichNum(128,56) = 1
  StoichNum(128,59) = 1
  StoichNum(128,60) = - 1
  StoichNum(128,61) = 1
  StoichNum(128,62) = 1
  StoichNum(128,63) = 2
  StoichNum(128,66) = 1
  StoichNum(128,67) = 1
  StoichNum(128,69) = 1
  StoichNum(128,71) = 0.13
  StoichNum(128,73) = - 1
  StoichNum(128,74) = 1
  StoichNum(128,75) = 1
  StoichNum(128,76) = 1
  StoichNum(128,81) = - 1
  StoichNum(128,82) = - 1
  StoichNum(128,86) = 1
  StoichNum(128,88) = 0.82
  StoichNum(128,96) = 0.26
  StoichNum(128,99) = - 1
  StoichNum(128,100) = 0.96
  StoichNum(128,101) = 0.8
  StoichNum(128,103) = - 1
  StoichNum(128,104) = 0.98
  StoichNum(128,107) = - 1
  StoichNum(128,109) = 0.3
  StoichNum(128,111) = 1
  StoichNum(128,115) = 1.23
  StoichNum(128,116) = - 1
  StoichNum(128,117) = 0.56
  StoichNum(128,119) = 0.32
  StoichNum(128,121) = - 1
  StoichNum(128,122) = 0.75
  StoichNum(128,124) = 0.875
  StoichNum(128,125) = 1
  StoichNum(128,128) = - 1
  StoichNum(128,134) = 0.25
  StoichNum(128,137) = - 1
  StoichNum(128,138) = 0.956
  StoichNum(128,139) = 1
  StoichNum(128,140) = 1
  StoichNum(128,151) = - 1
  StoichNum(128,152) = - 1
  StoichNum(128,153) = 1
  StoichNum(128,154) = 0.94
  StoichNum(128,155) = - 1
  StoichNum(128,164) = 1
  StoichNum(128,166) = 1
  StoichNum(128,181) = - 1
  StoichNum(128,182) = - 1
  StoichNum(128,190) = 1
  StoichNum(128,193) = 1
  StoichNum(128,210) = 1
  StoichNum(128,212) = 1
  StoichNum(128,214) = 0.4
  StoichNum(128,217) = - 1
  StoichNum(128,234) = 0.667
  StoichNum(128,235) = 1
  StoichNum(128,237) = 1
  StoichNum(128,240) = 1
  StoichNum(128,241) = 1
  StoichNum(128,245) = 1
  StoichNum(128,247) = 1
  StoichNum(128,248) = 1
  StoichNum(128,250) = 1
  StoichNum(128,251) = 0.67
  StoichNum(128,252) = 1
  StoichNum(128,253) = 0.75
  StoichNum(128,257) = 0.67
  StoichNum(128,259) = 1
  StoichNum(128,260) = 1
  StoichNum(129,10) = 1
  StoichNum(129,15) = 1
  StoichNum(129,16) = 1
  StoichNum(129,18) = - 1
  StoichNum(129,19) = 1
  StoichNum(129,37) = 1
  StoichNum(129,38) = 1
  StoichNum(129,40) = 1
  StoichNum(129,41) = 1
  StoichNum(129,44) = 1
  StoichNum(129,46) = 1
  StoichNum(129,47) = 1
  StoichNum(129,51) = 1
  StoichNum(129,54) = 1
  StoichNum(129,55) = 1
  StoichNum(129,58) = 1
  StoichNum(129,65) = 1
  StoichNum(129,66) = 1
  StoichNum(129,69) = 1
  StoichNum(129,70) = 1
  StoichNum(129,78) = 1
  StoichNum(129,80) = 1
  StoichNum(129,90) = 1
  StoichNum(129,92) = 1
  StoichNum(129,95) = 1
  StoichNum(129,105) = 1
  StoichNum(129,106) = 1
  StoichNum(129,114) = 1
  StoichNum(129,118) = 0.85
  StoichNum(129,131) = 1
  StoichNum(129,156) = 1
  StoichNum(129,157) = 1
  StoichNum(129,169) = 1
  StoichNum(129,171) = 1
  StoichNum(129,183) = 1
  StoichNum(129,194) = 1
  StoichNum(129,198) = 1
  StoichNum(129,199) = 1
  StoichNum(129,207) = 1
  StoichNum(129,208) = 1
  StoichNum(129,209) = 1
  StoichNum(129,224) = - 1
  StoichNum(129,239) = 1.155
  StoichNum(129,289) = - 1
  StoichNum(129,291) = 1
  StoichNum(129,293) = - 1
  StoichNum(129,295) = 1
  StoichNum(129,296) = - 1
  StoichNum(129,299) = 1
  StoichNum(129,300) = 1
  StoichNum(129,306) = - 1
  StoichNum(129,312) = 1
  StoichNum(129,314) = 1
  StoichNum(129,318) = 1
  StoichNum(129,322) = 1
  StoichNum(129,326) = 1
  StoichNum(129,328) = 1
  StoichNum(129,334) = 1
  StoichNum(129,337) = 1
  StoichNum(129,339) = 1
  StoichNum(129,345) = 1
  StoichNum(130,150) = 1
  StoichNum(130,151) = 1
  StoichNum(130,153) = 1
  StoichNum(130,154) = 0.06
  StoichNum(130,156) = - 1
  StoichNum(130,163) = 1
  StoichNum(130,164) = 1
  StoichNum(130,165) = 1
  StoichNum(130,172) = 1
  StoichNum(130,173) = 1
  StoichNum(130,174) = 1
  StoichNum(130,218) = 1
  StoichNum(130,264) = - 1
  StoichNum(130,291) = - 1
  StoichNum(130,292) = - 1
  StoichNum(130,294) = - 1
  StoichNum(130,298) = - 1
  StoichNum(130,300) = - 1
  StoichNum(130,315) = 1
  StoichNum(130,319) = 1
  StoichNum(130,323) = 1
  StoichNum(130,329) = 1
  StoichNum(130,335) = 1
  StoichNum(130,338) = 1
  StoichNum(130,340) = 1
  StoichNum(130,346) = 1
  StoichNum(130,349) = 1
  StoichNum(131,177) = 1
  StoichNum(131,178) = - 1
  StoichNum(131,179) = - 2
  StoichNum(131,180) = - 2
  StoichNum(131,182) = - 1
  StoichNum(131,184) = 1
  StoichNum(131,187) = - 1
  StoichNum(131,188) = - 1
  StoichNum(131,189) = 1
  StoichNum(131,192) = - 1
  StoichNum(131,193) = - 1
  StoichNum(131,203) = - 1
  StoichNum(131,204) = - 1
  StoichNum(131,205) = - 1
  StoichNum(131,220) = - 1
  StoichNum(131,275) = - 1
  StoichNum(131,278) = 0.15
  StoichNum(132,57) = 0.75
  StoichNum(132,58) = 1
  StoichNum(132,60) = - 1
  StoichNum(132,61) = - 1
  StoichNum(132,62) = - 1
  StoichNum(132,63) = - 2
  StoichNum(132,64) = - 2
  StoichNum(132,65) = 0.7
  StoichNum(132,76) = - 1
  StoichNum(132,80) = 1
  StoichNum(132,83) = 1
  StoichNum(132,85) = 1
  StoichNum(132,87) = - 1
  StoichNum(132,88) = 0.82
  StoichNum(132,89) = 2
  StoichNum(132,94) = 1
  StoichNum(132,96) = 0.07
  StoichNum(132,101) = - 1
  StoichNum(132,109) = - 1
  StoichNum(132,115) = - 1
  StoichNum(132,124) = - 1
  StoichNum(132,134) = 0.08
  StoichNum(132,139) = - 1
  StoichNum(132,163) = 1
  StoichNum(132,166) = - 1
  StoichNum(132,191) = 1
  StoichNum(132,192) = - 1
  StoichNum(132,193) = - 1
  StoichNum(132,197) = 1
  StoichNum(132,214) = 0.6
  StoichNum(132,215) = 1
  StoichNum(132,241) = 1
  StoichNum(132,242) = 1
  StoichNum(132,246) = 1
  StoichNum(132,269) = 1
  StoichNum(132,279) = 1
  StoichNum(132,288) = 1
  StoichNum(133,57) = 0.25
  StoichNum(133,59) = 1
  StoichNum(133,61) = 1
  StoichNum(133,62) = 1
  StoichNum(133,63) = 2
  StoichNum(133,64) = 1
  StoichNum(133,65) = 0.3
  StoichNum(133,66) = - 1
  StoichNum(133,67) = - 1
  StoichNum(133,71) = 1.13875
  StoichNum(133,76) = 0.75
  StoichNum(133,86) = 1
  StoichNum(133,87) = 1
  StoichNum(133,91) = 1
  StoichNum(133,92) = 1
  StoichNum(133,96) = 0.57
  StoichNum(133,101) = 0.8
  StoichNum(133,104) = 0.98
  StoichNum(133,108) = 1
  StoichNum(133,109) = 0.8
  StoichNum(133,115) = 0.68
  StoichNum(133,122) = 0.75
  StoichNum(133,124) = 1.125
  StoichNum(133,125) = 0.5
  StoichNum(133,134) = 0.58
  StoichNum(133,138) = 0.956
  StoichNum(133,139) = 1.25
  StoichNum(133,140) = 1
  StoichNum(133,164) = - 1
  StoichNum(133,165) = 1
  StoichNum(133,166) = 1
  StoichNum(133,190) = - 1
  StoichNum(133,192) = 1
  StoichNum(133,193) = 1
  StoichNum(133,211) = 1
  StoichNum(133,213) = 1
  StoichNum(133,214) = 1
  StoichNum(133,218) = 1
  StoichNum(133,219) = 1
  StoichNum(133,235) = 1
  StoichNum(133,236) = - 1
  StoichNum(133,237) = - 1
  StoichNum(133,243) = 1
  StoichNum(133,247) = 1
  StoichNum(133,249) = 1
  StoichNum(133,252) = 1
  StoichNum(133,253) = 0.75
  StoichNum(133,259) = 1
  StoichNum(133,260) = 1
  StoichNum(134,20) = 1
  StoichNum(134,22) = 2
  StoichNum(134,24) = - 1
  StoichNum(134,25) = - 1
  StoichNum(134,26) = 1
  StoichNum(134,29) = - 1
  StoichNum(134,32) = - 1
  StoichNum(134,33) = - 1
  StoichNum(134,45) = - 1
  StoichNum(134,46) = - 1
  StoichNum(134,48) = 1
  StoichNum(134,51) = 1
  StoichNum(134,52) = 1
  StoichNum(134,53) = 1
  StoichNum(134,56) = 1
  StoichNum(134,61) = - 1
  StoichNum(134,74) = - 1
  StoichNum(134,83) = - 1
  StoichNum(134,100) = - 1
  StoichNum(134,104) = - 1
  StoichNum(134,108) = - 1
  StoichNum(134,117) = - 1
  StoichNum(134,122) = - 1
  StoichNum(134,129) = - 1
  StoichNum(134,138) = - 1
  StoichNum(134,158) = - 1
  StoichNum(134,187) = - 1
  StoichNum(134,227) = 1
  StoichNum(134,228) = - 1
  StoichNum(134,230) = 1
  StoichNum(134,232) = 1
  StoichNum(135,24) = 1
  StoichNum(135,26) = - 1
  StoichNum(135,27) = - 1
  StoichNum(135,28) = - 1
  StoichNum(135,29) = 2
  StoichNum(135,30) = - 1
  StoichNum(135,31) = 1
  StoichNum(135,33) = 1
  StoichNum(135,34) = - 1
  StoichNum(135,35) = - 1
  StoichNum(135,36) = 1
  StoichNum(135,37) = 1
  StoichNum(135,39) = 1
  StoichNum(135,40) = 1
  StoichNum(135,47) = - 1
  StoichNum(135,48) = - 1
  StoichNum(135,53) = - 1
  StoichNum(135,61) = 1
  StoichNum(135,62) = 1
  StoichNum(135,74) = 1
  StoichNum(135,75) = 1
  StoichNum(135,83) = 1
  StoichNum(135,84) = - 1
  StoichNum(135,85) = 1
  StoichNum(135,91) = 1
  StoichNum(135,92) = 1
  StoichNum(135,93) = 1
  StoichNum(135,100) = 0.96
  StoichNum(135,104) = 0.98
  StoichNum(135,108) = 1
  StoichNum(135,113) = 1
  StoichNum(135,117) = 0.84
  StoichNum(135,122) = 1
  StoichNum(135,123) = - 1
  StoichNum(135,129) = 0.985
  StoichNum(135,131) = 1
  StoichNum(135,132) = 1
  StoichNum(135,133) = 1
  StoichNum(135,138) = 0.956
  StoichNum(135,158) = 1
  StoichNum(135,159) = - 1
  StoichNum(135,160) = 1
  StoichNum(135,187) = 1
  StoichNum(135,188) = - 1
  StoichNum(135,189) = 1
  StoichNum(135,227) = - 1
  StoichNum(135,229) = 1
  StoichNum(135,231) = 1
  StoichNum(135,233) = 1
  StoichNum(135,234) = 0.667
  StoichNum(135,243) = 1
  StoichNum(135,244) = 1
  StoichNum(135,250) = 1
  StoichNum(135,257) = 1
  StoichNum(135,258) = 1
  StoichNum(135,260) = 1
  StoichNum(135,266) = 1
  StoichNum(135,268) = 1
  StoichNum(135,277) = 1
  StoichNum(135,278) = 0.15
  StoichNum(136,27) = 1
  StoichNum(136,29) = - 1
  StoichNum(136,30) = - 1
  StoichNum(136,31) = 1
  StoichNum(136,36) = - 1
  StoichNum(136,38) = 1
  StoichNum(136,62) = - 1
  StoichNum(136,67) = - 1
  StoichNum(136,75) = - 1
  StoichNum(136,79) = - 1
  StoichNum(136,85) = - 1
  StoichNum(136,98) = - 1
  StoichNum(136,136) = - 1
  StoichNum(136,161) = 1
  StoichNum(136,162) = 1
  StoichNum(136,186) = 1
  StoichNum(136,213) = - 1
  StoichNum(136,229) = - 1
  StoichNum(136,230) = - 1
  StoichNum(136,231) = 1
  StoichNum(136,234) = 0.333
  StoichNum(136,267) = 1
  StoichNum(136,278) = 0.85
  StoichNum(137,177) = - 1
  StoichNum(137,178) = 1
  StoichNum(137,179) = 2
  StoichNum(137,181) = - 1
  StoichNum(137,183) = 1
  StoichNum(137,185) = 1
  StoichNum(137,186) = - 1
  StoichNum(137,187) = 1
  StoichNum(137,190) = - 1
  StoichNum(137,191) = - 1
  StoichNum(137,193) = 1
  StoichNum(137,194) = 1
  StoichNum(137,195) = - 1
  StoichNum(137,196) = - 1
  StoichNum(137,197) = - 1
  StoichNum(137,198) = 3
  StoichNum(137,199) = 2
  StoichNum(137,200) = - 1
  StoichNum(137,201) = - 1
  StoichNum(137,202) = 1
  StoichNum(137,203) = 1
  StoichNum(137,204) = 1
  StoichNum(137,206) = 1
  StoichNum(137,207) = 1
  StoichNum(137,208) = 2
  StoichNum(137,209) = 1
  StoichNum(137,219) = - 1
  StoichNum(137,220) = 1
  StoichNum(137,274) = 2
  StoichNum(137,275) = 1
  StoichNum(137,276) = 1
  StoichNum(137,277) = 1
  StoichNum(137,278) = 0.85
  StoichNum(137,279) = 1
  StoichNum(137,280) = 2
  StoichNum(137,281) = 3
  StoichNum(137,282) = 1
  StoichNum(137,283) = 1
  StoichNum(137,284) = 1
  StoichNum(137,285) = 1
  StoichNum(137,286) = 1
  StoichNum(137,287) = 2
  StoichNum(138,143) = - 1
  StoichNum(138,144) = 1
  StoichNum(138,146) = 2
  StoichNum(138,147) = 1
  StoichNum(138,150) = - 1
  StoichNum(138,151) = - 1
  StoichNum(138,152) = - 1
  StoichNum(138,153) = - 1
  StoichNum(138,154) = 0.94
  StoichNum(138,156) = 1
  StoichNum(138,158) = 1
  StoichNum(138,162) = - 1
  StoichNum(138,163) = - 1
  StoichNum(138,164) = - 1
  StoichNum(138,165) = - 1
  StoichNum(138,166) = 1
  StoichNum(138,167) = 3
  StoichNum(138,168) = 1
  StoichNum(138,169) = 1
  StoichNum(138,170) = 3
  StoichNum(138,171) = 3
  StoichNum(138,172) = - 1
  StoichNum(138,173) = - 1
  StoichNum(138,174) = - 1
  StoichNum(138,175) = 1
  StoichNum(138,176) = 2
  StoichNum(138,200) = 1
  StoichNum(138,201) = 1
  StoichNum(138,202) = - 1
  StoichNum(138,204) = 1
  StoichNum(138,206) = - 1
  StoichNum(138,207) = 2
  StoichNum(138,208) = 1
  StoichNum(138,209) = 1
  StoichNum(138,218) = - 1
  StoichNum(138,261) = 2
  StoichNum(138,262) = 2
  StoichNum(138,264) = 1
  StoichNum(138,265) = 1
  StoichNum(138,266) = 1
  StoichNum(138,267) = 1
  StoichNum(138,269) = 1
  StoichNum(138,270) = 4
  StoichNum(138,271) = 3
  StoichNum(138,272) = 3
  StoichNum(138,273) = 2
  StoichNum(138,283) = 1
  StoichNum(138,284) = 1
  StoichNum(138,285) = 1
  StoichNum(138,286) = 2
  StoichNum(138,287) = 1
  StoichNum(138,313) = 0.17
  StoichNum(138,315) = - 1
  StoichNum(138,316) = 1
  StoichNum(138,319) = - 1
  StoichNum(138,320) = 1.6
  StoichNum(138,321) = 3
  StoichNum(138,323) = - 1
  StoichNum(138,324) = 2
  StoichNum(138,327) = 0.69
  StoichNum(138,329) = - 1
  StoichNum(138,330) = 2
  StoichNum(138,332) = 2
  StoichNum(138,335) = - 1
  StoichNum(138,338) = - 1
  StoichNum(138,339) = 3
  StoichNum(138,340) = 2
  StoichNum(138,341) = 3
  StoichNum(138,343) = 1
  StoichNum(138,346) = - 1
  StoichNum(138,349) = - 1
      
END SUBROUTINE CalcStoichNum
 
SUBROUTINE KppSolve(JVS, X)

!   JVS -  sparse Jacobian of variables
  REAL(kind=dp) :: JVS(LU_NONZERO)
!   X -  Vector for variables
  REAL(kind=dp) :: X(NVAR)

  X(7) = X(7)- JVS(9)*X(2)- JVS(10)*X(3)
  X(8) = X(8)- JVS(41)*X(2)- JVS(42)*X(3)
  X(12) = X(12)- JVS(57)*X(5)
  X(17) = X(17)- JVS(118)*X(1)
  X(49) = X(49)- JVS(225)*X(48)
  X(51) = X(51)- JVS(235)*X(40)
  X(53) = X(53)- JVS(243)*X(50)
  X(59) = X(59)- JVS(268)*X(20)- JVS(269)*X(41)- JVS(270)*X(46)
  X(81) = X(81)- JVS(373)*X(79)
  X(85) = X(85)- JVS(395)*X(53)- JVS(396)*X(84)
  X(86) = X(86)- JVS(403)*X(60)- JVS(404)*X(63)
  X(89) = X(89)- JVS(429)*X(78)
  X(90) = X(90)- JVS(442)*X(31)- JVS(443)*X(84)
  X(92) = X(92)- JVS(456)*X(32)- JVS(457)*X(63)
  X(93) = X(93)- JVS(463)*X(67)- JVS(464)*X(86)- JVS(465)*X(92)
  X(94) = X(94)- JVS(471)*X(67)- JVS(472)*X(82)- JVS(473)*X(93)
  X(95) = X(95)- JVS(485)*X(46)- JVS(486)*X(47)- JVS(487)*X(75)- JVS(488)*X(82)- JVS(489)*X(91)- JVS(490)*X(94)
  X(97) = X(97)- JVS(517)*X(55)- JVS(518)*X(81)
  X(99) = X(99)- JVS(534)*X(96)
  X(101) = X(101)- JVS(546)*X(89)
  X(102) = X(102)- JVS(559)*X(83)
  X(103) = X(103)- JVS(572)*X(22)- JVS(573)*X(79)
  X(105) = X(105)- JVS(585)*X(51)- JVS(586)*X(59)- JVS(587)*X(66)- JVS(588)*X(80)
  X(108) = X(108)- JVS(609)*X(54)- JVS(610)*X(62)- JVS(611)*X(82)- JVS(612)*X(91)- JVS(613)*X(93)- JVS(614)*X(107)
  X(109) = X(109)- JVS(626)*X(107)
  X(110) = X(110)- JVS(634)*X(61)- JVS(635)*X(91)- JVS(636)*X(107)- JVS(637)*X(109)
  X(111) = X(111)- JVS(645)*X(96)- JVS(646)*X(97)- JVS(647)*X(103)
  X(112) = X(112)- JVS(656)*X(54)- JVS(657)*X(82)- JVS(658)*X(107)- JVS(659)*X(110)
  X(115) = X(115)- JVS(682)*X(62)- JVS(683)*X(96)- JVS(684)*X(100)
  X(117) = X(117)- JVS(701)*X(21)- JVS(702)*X(32)- JVS(703)*X(57)- JVS(704)*X(79)- JVS(705)*X(81)- JVS(706)*X(96)- JVS(707)&
             &*X(103)- JVS(708)*X(111)- JVS(709)*X(115)
  X(118) = X(118)- JVS(720)*X(101)- JVS(721)*X(104)- JVS(722)*X(113)- JVS(723)*X(116)
  X(119) = X(119)- JVS(737)*X(55)- JVS(738)*X(57)- JVS(739)*X(79)- JVS(740)*X(96)- JVS(741)*X(97)- JVS(742)*X(103)- JVS(743)&
             &*X(111)- JVS(744)*X(115)- JVS(745)*X(117)
  X(120) = X(120)- JVS(756)*X(23)- JVS(757)*X(24)- JVS(758)*X(25)- JVS(759)*X(26)- JVS(760)*X(27)- JVS(761)*X(33)- JVS(762)&
             &*X(42)- JVS(763)*X(44)- JVS(764)*X(49)- JVS(765)*X(52)- JVS(766)*X(56)- JVS(767)*X(69)- JVS(768)*X(71)- JVS(769)&
             &*X(72)- JVS(770)*X(73)- JVS(771)*X(74)- JVS(772)*X(77)- JVS(773)*X(90)- JVS(774)*X(98)- JVS(775)*X(99)
  X(121) = X(121)- JVS(787)*X(18)- JVS(788)*X(55)- JVS(789)*X(58)- JVS(790)*X(67)- JVS(791)*X(75)- JVS(792)*X(81)- JVS(793)&
             &*X(82)- JVS(794)*X(86)- JVS(795)*X(92)- JVS(796)*X(93)- JVS(797)*X(94)- JVS(798)*X(96)- JVS(799)*X(97)- JVS(800)&
             &*X(103)- JVS(801)*X(107)- JVS(802)*X(108)- JVS(803)*X(109)- JVS(804)*X(110)- JVS(805)*X(111)- JVS(806)*X(112)&
             &- JVS(807)*X(115)- JVS(808)*X(117)- JVS(809)*X(119)
  X(122) = X(122)- JVS(820)*X(95)- JVS(821)*X(96)- JVS(822)*X(98)- JVS(823)*X(99)- JVS(824)*X(100)- JVS(825)*X(107)- JVS(826)&
             &*X(108)- JVS(827)*X(109)- JVS(828)*X(110)- JVS(829)*X(112)- JVS(830)*X(115)- JVS(831)*X(119)- JVS(832)*X(120)&
             &- JVS(833)*X(121)
  X(123) = X(123)- JVS(848)*X(70)- JVS(849)*X(100)- JVS(850)*X(106)- JVS(851)*X(113)- JVS(852)*X(114)- JVS(853)*X(116)&
             &- JVS(854)*X(118)- JVS(855)*X(119)- JVS(856)*X(121)
  X(124) = X(124)- JVS(873)*X(19)- JVS(874)*X(23)- JVS(875)*X(24)- JVS(876)*X(27)- JVS(877)*X(33)- JVS(878)*X(35)- JVS(879)&
             &*X(77)- JVS(880)*X(113)- JVS(881)*X(116)- JVS(882)*X(120)- JVS(883)*X(122)- JVS(884)*X(123)
  X(125) = X(125)- JVS(900)*X(59)- JVS(901)*X(80)- JVS(902)*X(84)- JVS(903)*X(90)- JVS(904)*X(96)- JVS(905)*X(100)- JVS(906)&
             &*X(105)- JVS(907)*X(107)- JVS(908)*X(110)- JVS(909)*X(114)- JVS(910)*X(120)- JVS(911)*X(121)- JVS(912)*X(122)
  X(126) = X(126)- JVS(927)*X(20)- JVS(928)*X(25)- JVS(929)*X(26)- JVS(930)*X(33)- JVS(931)*X(35)- JVS(932)*X(42)- JVS(933)&
             &*X(46)- JVS(934)*X(48)- JVS(935)*X(51)- JVS(936)*X(59)- JVS(937)*X(69)- JVS(938)*X(71)- JVS(939)*X(72)- JVS(940)&
             &*X(73)- JVS(941)*X(74)- JVS(942)*X(77)- JVS(943)*X(105)- JVS(944)*X(114)- JVS(945)*X(116)- JVS(946)*X(118)- &
                     JVS(947)&
             &*X(120)- JVS(948)*X(122)- JVS(949)*X(123)- JVS(950)*X(124)- JVS(951)*X(125)
  X(127) = X(127)- JVS(965)*X(21)- JVS(966)*X(22)- JVS(967)*X(28)- JVS(968)*X(29)- JVS(969)*X(31)- JVS(970)*X(32)- JVS(971)&
             &*X(36)- JVS(972)*X(37)- JVS(973)*X(38)- JVS(974)*X(39)- JVS(975)*X(41)- JVS(976)*X(42)- JVS(977)*X(43)- JVS(978)&
             &*X(44)- JVS(979)*X(45)- JVS(980)*X(46)- JVS(981)*X(47)- JVS(982)*X(50)- JVS(983)*X(52)- JVS(984)*X(53)- JVS(985)&
             &*X(54)- JVS(986)*X(55)- JVS(987)*X(56)- JVS(988)*X(57)- JVS(989)*X(58)- JVS(990)*X(60)- JVS(991)*X(61)- JVS(992)&
             &*X(62)- JVS(993)*X(63)- JVS(994)*X(64)- JVS(995)*X(65)- JVS(996)*X(66)- JVS(997)*X(67)- JVS(998)*X(68)- JVS(999)&
             &*X(69)- JVS(1000)*X(70)- JVS(1001)*X(71)- JVS(1002)*X(72)- JVS(1003)*X(73)- JVS(1004)*X(74)- JVS(1005)*X(75)&
             &- JVS(1006)*X(76)- JVS(1007)*X(77)- JVS(1008)*X(79)- JVS(1009)*X(81)- JVS(1010)*X(82)- JVS(1011)*X(84)- JVS(1012)&
             &*X(85)- JVS(1013)*X(86)- JVS(1014)*X(87)- JVS(1015)*X(88)- JVS(1016)*X(90)- JVS(1017)*X(91)- JVS(1018)*X(92)&
             &- JVS(1019)*X(93)- JVS(1020)*X(94)- JVS(1021)*X(95)- JVS(1022)*X(96)- JVS(1023)*X(97)- JVS(1024)*X(98)- JVS(1025)&
             &*X(99)- JVS(1026)*X(100)- JVS(1027)*X(101)- JVS(1028)*X(102)- JVS(1029)*X(103)- JVS(1030)*X(104)- JVS(1031)*X(105)&
             &- JVS(1032)*X(106)- JVS(1033)*X(107)- JVS(1034)*X(108)- JVS(1035)*X(109)- JVS(1036)*X(110)- JVS(1037)*X(111)&
             &- JVS(1038)*X(112)- JVS(1039)*X(113)- JVS(1040)*X(114)- JVS(1041)*X(115)- JVS(1042)*X(116)- JVS(1043)*X(117)&
             &- JVS(1044)*X(118)- JVS(1045)*X(119)- JVS(1046)*X(120)- JVS(1047)*X(121)- JVS(1048)*X(122)- JVS(1049)*X(123)&
             &- JVS(1050)*X(124)- JVS(1051)*X(125)- JVS(1052)*X(126)
  X(128) = X(128)- JVS(1065)*X(30)- JVS(1066)*X(57)- JVS(1067)*X(60)- JVS(1068)*X(61)- JVS(1069)*X(63)- JVS(1070)*X(64)&
             &- JVS(1071)*X(66)- JVS(1072)*X(76)- JVS(1073)*X(79)- JVS(1074)*X(80)- JVS(1075)*X(82)- JVS(1076)*X(85)- JVS(1077)&
             &*X(87)- JVS(1078)*X(88)- JVS(1079)*X(90)- JVS(1080)*X(91)- JVS(1081)*X(92)- JVS(1082)*X(93)- JVS(1083)*X(94)&
             &- JVS(1084)*X(96)- JVS(1085)*X(97)- JVS(1086)*X(100)- JVS(1087)*X(103)- JVS(1088)*X(105)- JVS(1089)*X(106)- &
                     JVS(1090)&
             &*X(107)- JVS(1091)*X(108)- JVS(1092)*X(109)- JVS(1093)*X(110)- JVS(1094)*X(111)- JVS(1095)*X(112)- &
                     JVS(1096)*X(114)&
             &- JVS(1097)*X(115)- JVS(1098)*X(117)- JVS(1099)*X(119)- JVS(1100)*X(121)- JVS(1101)*X(122)- JVS(1102)*X(124)&
             &- JVS(1103)*X(125)- JVS(1104)*X(126)- JVS(1105)*X(127)
  X(129) = X(129)- JVS(1117)*X(21)- JVS(1118)*X(22)- JVS(1119)*X(28)- JVS(1120)*X(29)- JVS(1121)*X(31)- JVS(1122)*X(32)&
             &- JVS(1123)*X(36)- JVS(1124)*X(37)- JVS(1125)*X(38)- JVS(1126)*X(39)- JVS(1127)*X(40)- JVS(1128)*X(42)- JVS(1129)&
             &*X(43)- JVS(1130)*X(44)- JVS(1131)*X(45)- JVS(1132)*X(50)- JVS(1133)*X(51)- JVS(1134)*X(52)- JVS(1135)*X(53)&
             &- JVS(1136)*X(58)- JVS(1137)*X(62)- JVS(1138)*X(64)- JVS(1139)*X(65)- JVS(1140)*X(68)- JVS(1141)*X(69)- JVS(1142)&
             &*X(71)- JVS(1143)*X(72)- JVS(1144)*X(73)- JVS(1145)*X(74)- JVS(1146)*X(75)- JVS(1147)*X(76)- JVS(1148)*X(77)&
             &- JVS(1149)*X(79)- JVS(1150)*X(83)- JVS(1151)*X(84)- JVS(1152)*X(85)- JVS(1153)*X(86)- JVS(1154)*X(87)- JVS(1155)&
             &*X(90)- JVS(1156)*X(92)- JVS(1157)*X(96)- JVS(1158)*X(98)- JVS(1159)*X(99)- JVS(1160)*X(100)- JVS(1161)*X(102)&
             &- JVS(1162)*X(103)- JVS(1163)*X(104)- JVS(1164)*X(105)- JVS(1165)*X(106)- JVS(1166)*X(107)- JVS(1167)*X(110)&
             &- JVS(1168)*X(111)- JVS(1169)*X(113)- JVS(1170)*X(114)- JVS(1171)*X(115)- JVS(1172)*X(116)- JVS(1173)*X(117)&
             &- JVS(1174)*X(118)- JVS(1175)*X(119)- JVS(1176)*X(120)- JVS(1177)*X(121)- JVS(1178)*X(122)- JVS(1179)*X(123)&
             &- JVS(1180)*X(124)- JVS(1181)*X(125)- JVS(1182)*X(126)- JVS(1183)*X(127)- JVS(1184)*X(128)
  X(130) = X(130)- JVS(1195)*X(43)- JVS(1196)*X(45)- JVS(1197)*X(56)- JVS(1198)*X(69)- JVS(1199)*X(70)- JVS(1200)*X(71)&
             &- JVS(1201)*X(72)- JVS(1202)*X(73)- JVS(1203)*X(74)- JVS(1204)*X(77)- JVS(1205)*X(83)- JVS(1206)*X(87)- JVS(1207)&
             &*X(98)- JVS(1208)*X(99)- JVS(1209)*X(100)- JVS(1210)*X(104)- JVS(1211)*X(106)- JVS(1212)*X(107)- JVS(1213)*X(113)&
             &- JVS(1214)*X(114)- JVS(1215)*X(116)- JVS(1216)*X(118)- JVS(1217)*X(119)- JVS(1218)*X(120)- JVS(1219)*X(121)&
             &- JVS(1220)*X(122)- JVS(1221)*X(123)- JVS(1222)*X(124)- JVS(1223)*X(125)- JVS(1224)*X(126)- JVS(1225)*X(127)&
             &- JVS(1226)*X(128)- JVS(1227)*X(129)
  X(131) = X(131)- JVS(1237)*X(104)- JVS(1238)*X(114)- JVS(1239)*X(118)- JVS(1240)*X(123)- JVS(1241)*X(124)- JVS(1242)*X(125)&
             &- JVS(1243)*X(126)- JVS(1244)*X(127)- JVS(1245)*X(128)- JVS(1246)*X(129)- JVS(1247)*X(130)
  X(132) = X(132)- JVS(1256)*X(4)- JVS(1257)*X(37)- JVS(1258)*X(52)- JVS(1259)*X(58)- JVS(1260)*X(65)- JVS(1261)*X(66)&
             &- JVS(1262)*X(70)- JVS(1263)*X(80)- JVS(1264)*X(86)- JVS(1265)*X(92)- JVS(1266)*X(93)- JVS(1267)*X(96)- JVS(1268)&
             &*X(99)- JVS(1269)*X(103)- JVS(1270)*X(106)- JVS(1271)*X(107)- JVS(1272)*X(109)- JVS(1273)*X(112)- JVS(1274)*X(114)&
             &- JVS(1275)*X(117)- JVS(1276)*X(119)- JVS(1277)*X(120)- JVS(1278)*X(121)- JVS(1279)*X(122)- JVS(1280)*X(124)&
             &- JVS(1281)*X(125)- JVS(1282)*X(126)- JVS(1283)*X(127)- JVS(1284)*X(128)- JVS(1285)*X(129)- JVS(1286)*X(130)&
             &- JVS(1287)*X(131)
  X(133) = X(133)- JVS(1295)*X(47)- JVS(1296)*X(61)- JVS(1297)*X(66)- JVS(1298)*X(67)- JVS(1299)*X(75)- JVS(1300)*X(82)&
             &- JVS(1301)*X(88)- JVS(1302)*X(91)- JVS(1303)*X(92)- JVS(1304)*X(93)- JVS(1305)*X(96)- JVS(1306)*X(99)- JVS(1307)&
             &*X(100)- JVS(1308)*X(103)- JVS(1309)*X(106)- JVS(1310)*X(107)- JVS(1311)*X(108)- JVS(1312)*X(109)- &
                     JVS(1313)*X(110)&
             &- JVS(1314)*X(112)- JVS(1315)*X(114)- JVS(1316)*X(115)- JVS(1317)*X(117)- JVS(1318)*X(120)- JVS(1319)*X(121)&
             &- JVS(1320)*X(122)- JVS(1321)*X(124)- JVS(1322)*X(125)- JVS(1323)*X(126)- JVS(1324)*X(127)- JVS(1325)*X(128)&
             &- JVS(1326)*X(129)- JVS(1327)*X(130)- JVS(1328)*X(131)- JVS(1329)*X(132)
  X(134) = X(134)- JVS(1336)*X(48)- JVS(1337)*X(49)- JVS(1338)*X(53)- JVS(1339)*X(68)- JVS(1340)*X(84)- JVS(1341)*X(85)&
             &- JVS(1342)*X(90)- JVS(1343)*X(92)- JVS(1344)*X(93)- JVS(1345)*X(97)- JVS(1346)*X(103)- JVS(1347)*X(109)- &
                     JVS(1348)&
             &*X(111)- JVS(1349)*X(112)- JVS(1350)*X(115)- JVS(1351)*X(117)- JVS(1352)*X(120)- JVS(1353)*X(121)- &
                     JVS(1354)*X(122)&
             &- JVS(1355)*X(124)- JVS(1356)*X(125)- JVS(1357)*X(126)- JVS(1358)*X(127)- JVS(1359)*X(128)- JVS(1360)*X(129)&
             &- JVS(1361)*X(130)- JVS(1362)*X(131)- JVS(1363)*X(132)- JVS(1364)*X(133)
  X(135) = X(135)- JVS(1370)*X(1)- JVS(1371)*X(34)- JVS(1372)*X(47)- JVS(1373)*X(48)- JVS(1374)*X(54)- JVS(1375)*X(60)&
             &- JVS(1376)*X(64)- JVS(1377)*X(68)- JVS(1378)*X(75)- JVS(1379)*X(83)- JVS(1380)*X(85)- JVS(1381)*X(90)- JVS(1382)&
             &*X(91)- JVS(1383)*X(92)- JVS(1384)*X(93)- JVS(1385)*X(97)- JVS(1386)*X(102)- JVS(1387)*X(103)- JVS(1388)*X(104)&
             &- JVS(1389)*X(107)- JVS(1390)*X(109)- JVS(1391)*X(111)- JVS(1392)*X(112)- JVS(1393)*X(114)- JVS(1394)*X(115)&
             &- JVS(1395)*X(116)- JVS(1396)*X(117)- JVS(1397)*X(119)- JVS(1398)*X(121)- JVS(1399)*X(123)- JVS(1400)*X(124)&
             &- JVS(1401)*X(125)- JVS(1402)*X(126)- JVS(1403)*X(127)- JVS(1404)*X(128)- JVS(1405)*X(129)- JVS(1406)*X(130)&
             &- JVS(1407)*X(131)- JVS(1408)*X(132)- JVS(1409)*X(133)- JVS(1410)*X(134)
  X(136) = X(136)- JVS(1415)*X(64)- JVS(1416)*X(83)- JVS(1417)*X(96)- JVS(1418)*X(102)- JVS(1419)*X(104)- JVS(1420)*X(107)&
             &- JVS(1421)*X(114)- JVS(1422)*X(116)- JVS(1423)*X(117)- JVS(1424)*X(119)- JVS(1425)*X(121)- JVS(1426)*X(123)&
             &- JVS(1427)*X(124)- JVS(1428)*X(125)- JVS(1429)*X(126)- JVS(1430)*X(127)- JVS(1431)*X(128)- JVS(1432)*X(129)&
             &- JVS(1433)*X(130)- JVS(1434)*X(131)- JVS(1435)*X(132)- JVS(1436)*X(133)- JVS(1437)*X(134)- JVS(1438)*X(135)
  X(137) = X(137)- JVS(1442)*X(1)- JVS(1443)*X(2)- JVS(1444)*X(3)- JVS(1445)*X(28)- JVS(1446)*X(29)- JVS(1447)*X(36)- JVS(1448)&
             &*X(37)- JVS(1449)*X(38)- JVS(1450)*X(39)- JVS(1451)*X(70)- JVS(1452)*X(78)- JVS(1453)*X(89)- JVS(1454)*X(100)&
             &- JVS(1455)*X(101)- JVS(1456)*X(104)- JVS(1457)*X(106)- JVS(1458)*X(113)- JVS(1459)*X(114)- JVS(1460)*X(116)&
             &- JVS(1461)*X(118)- JVS(1462)*X(119)- JVS(1463)*X(121)- JVS(1464)*X(123)- JVS(1465)*X(124)- JVS(1466)*X(125)&
             &- JVS(1467)*X(126)- JVS(1468)*X(127)- JVS(1469)*X(128)- JVS(1470)*X(129)- JVS(1471)*X(130)- JVS(1472)*X(131)&
             &- JVS(1473)*X(132)- JVS(1474)*X(133)- JVS(1475)*X(134)- JVS(1476)*X(135)- JVS(1477)*X(136)
  X(138) = X(138)- JVS(1480)*X(2)- JVS(1481)*X(19)- JVS(1482)*X(23)- JVS(1483)*X(24)- JVS(1484)*X(25)- JVS(1485)*X(26)&
             &- JVS(1486)*X(27)- JVS(1487)*X(33)- JVS(1488)*X(34)- JVS(1489)*X(36)- JVS(1490)*X(38)- JVS(1491)*X(39)- JVS(1492)&
             &*X(43)- JVS(1493)*X(44)- JVS(1494)*X(45)- JVS(1495)*X(52)- JVS(1496)*X(56)- JVS(1497)*X(69)- JVS(1498)*X(70)&
             &- JVS(1499)*X(71)- JVS(1500)*X(72)- JVS(1501)*X(73)- JVS(1502)*X(74)- JVS(1503)*X(77)- JVS(1504)*X(78)- JVS(1505)&
             &*X(83)- JVS(1506)*X(87)- JVS(1507)*X(89)- JVS(1508)*X(98)- JVS(1509)*X(99)- JVS(1510)*X(100)- JVS(1511)*X(101)&
             &- JVS(1512)*X(104)- JVS(1513)*X(106)- JVS(1514)*X(107)- JVS(1515)*X(113)- JVS(1516)*X(114)- JVS(1517)*X(116)&
             &- JVS(1518)*X(118)- JVS(1519)*X(119)- JVS(1520)*X(120)- JVS(1521)*X(121)- JVS(1522)*X(122)- JVS(1523)*X(123)&
             &- JVS(1524)*X(124)- JVS(1525)*X(125)- JVS(1526)*X(126)- JVS(1527)*X(127)- JVS(1528)*X(128)- JVS(1529)*X(129)&
             &- JVS(1530)*X(130)- JVS(1531)*X(131)- JVS(1532)*X(132)- JVS(1533)*X(133)- JVS(1534)*X(134)- JVS(1535)*X(135)&
             &- JVS(1536)*X(136)- JVS(1537)*X(137)
  X(138) = X(138)/ JVS(1538)
  X(137) = (X(137)- JVS(1479)*X(138))/(JVS(1478))
  X(136) = (X(136)- JVS(1440)*X(137)- JVS(1441)*X(138))/(JVS(1439))
  X(135) = (X(135)- JVS(1412)*X(136)- JVS(1413)*X(137)- JVS(1414)*X(138))/(JVS(1411))
  X(134) = (X(134)- JVS(1366)*X(135)- JVS(1367)*X(136)- JVS(1368)*X(137)- JVS(1369)*X(138))/(JVS(1365))
  X(133) = (X(133)- JVS(1331)*X(134)- JVS(1332)*X(135)- JVS(1333)*X(136)- JVS(1334)*X(137)- JVS(1335)*X(138))/(JVS(1330))
  X(132) = (X(132)- JVS(1289)*X(133)- JVS(1290)*X(134)- JVS(1291)*X(135)- JVS(1292)*X(136)- JVS(1293)*X(137)- JVS(1294)&
             &*X(138))/(JVS(1288))
  X(131) = (X(131)- JVS(1249)*X(132)- JVS(1250)*X(133)- JVS(1251)*X(134)- JVS(1252)*X(135)- JVS(1253)*X(136)- JVS(1254)*X(137)&
             &- JVS(1255)*X(138))/(JVS(1248))
  X(130) = (X(130)- JVS(1229)*X(131)- JVS(1230)*X(132)- JVS(1231)*X(133)- JVS(1232)*X(134)- JVS(1233)*X(135)- JVS(1234)*X(136)&
             &- JVS(1235)*X(137)- JVS(1236)*X(138))/(JVS(1228))
  X(129) = (X(129)- JVS(1186)*X(130)- JVS(1187)*X(131)- JVS(1188)*X(132)- JVS(1189)*X(133)- JVS(1190)*X(134)- JVS(1191)*X(135)&
             &- JVS(1192)*X(136)- JVS(1193)*X(137)- JVS(1194)*X(138))/(JVS(1185))
  X(128) = (X(128)- JVS(1107)*X(129)- JVS(1108)*X(130)- JVS(1109)*X(131)- JVS(1110)*X(132)- JVS(1111)*X(133)- JVS(1112)*X(134)&
             &- JVS(1113)*X(135)- JVS(1114)*X(136)- JVS(1115)*X(137)- JVS(1116)*X(138))/(JVS(1106))
  X(127) = (X(127)- JVS(1054)*X(128)- JVS(1055)*X(129)- JVS(1056)*X(130)- JVS(1057)*X(131)- JVS(1058)*X(132)- JVS(1059)*X(133)&
             &- JVS(1060)*X(134)- JVS(1061)*X(135)- JVS(1062)*X(136)- JVS(1063)*X(137)- JVS(1064)*X(138))/(JVS(1053))
  X(126) = (X(126)- JVS(953)*X(127)- JVS(954)*X(128)- JVS(955)*X(129)- JVS(956)*X(130)- JVS(957)*X(131)- JVS(958)*X(132)&
             &- JVS(959)*X(133)- JVS(960)*X(134)- JVS(961)*X(135)- JVS(962)*X(136)- JVS(963)*X(137)- JVS(964)*X(138))/(JVS(952))
  X(125) = (X(125)- JVS(914)*X(126)- JVS(915)*X(127)- JVS(916)*X(128)- JVS(917)*X(129)- JVS(918)*X(130)- JVS(919)*X(131)&
             &- JVS(920)*X(132)- JVS(921)*X(133)- JVS(922)*X(134)- JVS(923)*X(135)- JVS(924)*X(136)- JVS(925)*X(137)- JVS(926)&
             &*X(138))/(JVS(913))
  X(124) = (X(124)- JVS(886)*X(125)- JVS(887)*X(126)- JVS(888)*X(127)- JVS(889)*X(128)- JVS(890)*X(129)- JVS(891)*X(130)&
             &- JVS(892)*X(131)- JVS(893)*X(132)- JVS(894)*X(133)- JVS(895)*X(134)- JVS(896)*X(135)- JVS(897)*X(136)- JVS(898)&
             &*X(137)- JVS(899)*X(138))/(JVS(885))
  X(123) = (X(123)- JVS(858)*X(124)- JVS(859)*X(125)- JVS(860)*X(126)- JVS(861)*X(127)- JVS(862)*X(128)- JVS(863)*X(129)&
             &- JVS(864)*X(130)- JVS(865)*X(131)- JVS(866)*X(132)- JVS(867)*X(133)- JVS(868)*X(134)- JVS(869)*X(135)- JVS(870)&
             &*X(136)- JVS(871)*X(137)- JVS(872)*X(138))/(JVS(857))
  X(122) = (X(122)- JVS(835)*X(125)- JVS(836)*X(126)- JVS(837)*X(127)- JVS(838)*X(128)- JVS(839)*X(129)- JVS(840)*X(130)&
             &- JVS(841)*X(132)- JVS(842)*X(133)- JVS(843)*X(134)- JVS(844)*X(135)- JVS(845)*X(136)- JVS(846)*X(137)- JVS(847)&
             &*X(138))/(JVS(834))
  X(121) = (X(121)- JVS(811)*X(125)- JVS(812)*X(127)- JVS(813)*X(128)- JVS(814)*X(132)- JVS(815)*X(134)- JVS(816)*X(135)&
             &- JVS(817)*X(136)- JVS(818)*X(137)- JVS(819)*X(138))/(JVS(810))
  X(120) = (X(120)- JVS(777)*X(122)- JVS(778)*X(125)- JVS(779)*X(127)- JVS(780)*X(128)- JVS(781)*X(129)- JVS(782)*X(133)&
             &- JVS(783)*X(134)- JVS(784)*X(135)- JVS(785)*X(136)- JVS(786)*X(138))/(JVS(776))
  X(119) = (X(119)- JVS(747)*X(121)- JVS(748)*X(125)- JVS(749)*X(127)- JVS(750)*X(128)- JVS(751)*X(132)- JVS(752)*X(134)&
             &- JVS(753)*X(136)- JVS(754)*X(137)- JVS(755)*X(138))/(JVS(746))
  X(118) = (X(118)- JVS(725)*X(123)- JVS(726)*X(124)- JVS(727)*X(126)- JVS(728)*X(127)- JVS(729)*X(128)- JVS(730)*X(129)&
             &- JVS(731)*X(130)- JVS(732)*X(131)- JVS(733)*X(132)- JVS(734)*X(135)- JVS(735)*X(137)- JVS(736)*X(138))/(JVS(724))
  X(117) = (X(117)- JVS(711)*X(121)- JVS(712)*X(125)- JVS(713)*X(127)- JVS(714)*X(128)- JVS(715)*X(132)- JVS(716)*X(134)&
             &- JVS(717)*X(136)- JVS(718)*X(137)- JVS(719)*X(138))/(JVS(710))
  X(116) = (X(116)- JVS(694)*X(123)- JVS(695)*X(124)- JVS(696)*X(126)- JVS(697)*X(129)- JVS(698)*X(130)- JVS(699)*X(135)&
             &- JVS(700)*X(138))/(JVS(693))
  X(115) = (X(115)- JVS(686)*X(125)- JVS(687)*X(127)- JVS(688)*X(128)- JVS(689)*X(134)- JVS(690)*X(136)- JVS(691)*X(137)&
             &- JVS(692)*X(138))/(JVS(685))
  X(114) = (X(114)- JVS(677)*X(127)- JVS(678)*X(131)- JVS(679)*X(136)- JVS(680)*X(137)- JVS(681)*X(138))/(JVS(676))
  X(113) = (X(113)- JVS(669)*X(116)- JVS(670)*X(123)- JVS(671)*X(124)- JVS(672)*X(127)- JVS(673)*X(128)- JVS(674)*X(129)&
             &- JVS(675)*X(130))/(JVS(668))
  X(112) = (X(112)- JVS(661)*X(125)- JVS(662)*X(127)- JVS(663)*X(128)- JVS(664)*X(132)- JVS(665)*X(134)- JVS(666)*X(135)&
             &- JVS(667)*X(136))/(JVS(660))
  X(111) = (X(111)- JVS(649)*X(115)- JVS(650)*X(125)- JVS(651)*X(127)- JVS(652)*X(128)- JVS(653)*X(132)- JVS(654)*X(134)&
             &- JVS(655)*X(136))/(JVS(648))
  X(110) = (X(110)- JVS(639)*X(125)- JVS(640)*X(127)- JVS(641)*X(128)- JVS(642)*X(132)- JVS(643)*X(134)- JVS(644)*X(136))&
             &/(JVS(638))
  X(109) = (X(109)- JVS(628)*X(125)- JVS(629)*X(127)- JVS(630)*X(128)- JVS(631)*X(132)- JVS(632)*X(134)- JVS(633)*X(136))&
             &/(JVS(627))
  X(108) = (X(108)- JVS(616)*X(109)- JVS(617)*X(112)- JVS(618)*X(115)- JVS(619)*X(125)- JVS(620)*X(127)- JVS(621)*X(128)&
             &- JVS(622)*X(132)- JVS(623)*X(134)- JVS(624)*X(135)- JVS(625)*X(136))/(JVS(615))
  X(107) = (X(107)- JVS(606)*X(125)- JVS(607)*X(127)- JVS(608)*X(136))/(JVS(605))
  X(106) = (X(106)- JVS(600)*X(127)- JVS(601)*X(128)- JVS(602)*X(132)- JVS(603)*X(137)- JVS(604)*X(138))/(JVS(599))
  X(105) = (X(105)- JVS(590)*X(114)- JVS(591)*X(125)- JVS(592)*X(126)- JVS(593)*X(127)- JVS(594)*X(129)- JVS(595)*X(131)&
             &- JVS(596)*X(136)- JVS(597)*X(137)- JVS(598)*X(138))/(JVS(589))
  X(104) = (X(104)- JVS(580)*X(129)- JVS(581)*X(130)- JVS(582)*X(131)- JVS(583)*X(135)- JVS(584)*X(137))/(JVS(579))
  X(103) = (X(103)- JVS(575)*X(127)- JVS(576)*X(128)- JVS(577)*X(132)- JVS(578)*X(134))/(JVS(574))
  X(102) = (X(102)- JVS(561)*X(104)- JVS(562)*X(114)- JVS(563)*X(116)- JVS(564)*X(119)- JVS(565)*X(123)- JVS(566)*X(127)&
             &- JVS(567)*X(129)- JVS(568)*X(130)- JVS(569)*X(133)- JVS(570)*X(135)- JVS(571)*X(136))/(JVS(560))
  X(101) = (X(101)- JVS(548)*X(104)- JVS(549)*X(113)- JVS(550)*X(116)- JVS(551)*X(118)- JVS(552)*X(123)- JVS(553)*X(124)&
             &- JVS(554)*X(127)- JVS(555)*X(130)- JVS(556)*X(131)- JVS(557)*X(137)- JVS(558)*X(138))/(JVS(547))
  X(100) = (X(100)- JVS(542)*X(125)- JVS(543)*X(127)- JVS(544)*X(137)- JVS(545)*X(138))/(JVS(541))
  X(99) = (X(99)- JVS(536)*X(120)- JVS(537)*X(125)- JVS(538)*X(127)- JVS(539)*X(136)- JVS(540)*X(138))/(JVS(535))
  X(98) = (X(98)- JVS(527)*X(99)- JVS(528)*X(120)- JVS(529)*X(122)- JVS(530)*X(127)- JVS(531)*X(128)- JVS(532)*X(133)- JVS(533)&
            &*X(138))/(JVS(526))
  X(97) = (X(97)- JVS(520)*X(103)- JVS(521)*X(111)- JVS(522)*X(127)- JVS(523)*X(128)- JVS(524)*X(132)- JVS(525)*X(134))&
            &/(JVS(519))
  X(96) = (X(96)- JVS(514)*X(125)- JVS(515)*X(127)- JVS(516)*X(136))/(JVS(513))
  X(95) = (X(95)- JVS(492)*X(96)- JVS(493)*X(99)- JVS(494)*X(100)- JVS(495)*X(107)- JVS(496)*X(108)- JVS(497)*X(109)- JVS(498)&
            &*X(110)- JVS(499)*X(112)- JVS(500)*X(119)- JVS(501)*X(121)- JVS(502)*X(125)- JVS(503)*X(126)- JVS(504)*X(127)&
            &- JVS(505)*X(128)- JVS(506)*X(132)- JVS(507)*X(133)- JVS(508)*X(134)- JVS(509)*X(135)- JVS(510)*X(136)- JVS(511)&
            &*X(137)- JVS(512)*X(138))/(JVS(491))
  X(94) = (X(94)- JVS(475)*X(96)- JVS(476)*X(108)- JVS(477)*X(109)- JVS(478)*X(110)- JVS(479)*X(112)- JVS(480)*X(125)- JVS(481)&
            &*X(127)- JVS(482)*X(128)- JVS(483)*X(132)- JVS(484)*X(134))/(JVS(474))
  X(93) = (X(93)- JVS(467)*X(127)- JVS(468)*X(128)- JVS(469)*X(132)- JVS(470)*X(134))/(JVS(466))
  X(92) = (X(92)- JVS(459)*X(127)- JVS(460)*X(128)- JVS(461)*X(132)- JVS(462)*X(134))/(JVS(458))
  X(91) = (X(91)- JVS(451)*X(107)- JVS(452)*X(109)- JVS(453)*X(127)- JVS(454)*X(134)- JVS(455)*X(136))/(JVS(450))
  X(90) = (X(90)- JVS(445)*X(125)- JVS(446)*X(127)- JVS(447)*X(128)- JVS(448)*X(134)- JVS(449)*X(135))/(JVS(444))
  X(89) = (X(89)- JVS(431)*X(101)- JVS(432)*X(104)- JVS(433)*X(113)- JVS(434)*X(116)- JVS(435)*X(118)- JVS(436)*X(123)&
            &- JVS(437)*X(124)- JVS(438)*X(130)- JVS(439)*X(131)- JVS(440)*X(137)- JVS(441)*X(138))/(JVS(430))
  X(88) = (X(88)- JVS(419)*X(92)- JVS(420)*X(93)- JVS(421)*X(96)- JVS(422)*X(103)- JVS(423)*X(109)- JVS(424)*X(112)- JVS(425)&
            &*X(117)- JVS(426)*X(125)- JVS(427)*X(127)- JVS(428)*X(132))/(JVS(418))
  X(87) = (X(87)- JVS(412)*X(100)- JVS(413)*X(107)- JVS(414)*X(125)- JVS(415)*X(127)- JVS(416)*X(128)- JVS(417)*X(138))&
            &/(JVS(411))
  X(86) = (X(86)- JVS(406)*X(92)- JVS(407)*X(127)- JVS(408)*X(128)- JVS(409)*X(132)- JVS(410)*X(134))/(JVS(405))
  X(85) = (X(85)- JVS(398)*X(90)- JVS(399)*X(125)- JVS(400)*X(127)- JVS(401)*X(128)- JVS(402)*X(135))/(JVS(397))
  X(84) = (X(84)- JVS(391)*X(90)- JVS(392)*X(125)- JVS(393)*X(128)- JVS(394)*X(135))/(JVS(390))
  X(83) = (X(83)- JVS(386)*X(129)- JVS(387)*X(130)- JVS(388)*X(135)- JVS(389)*X(136))/(JVS(385))
  X(82) = (X(82)- JVS(382)*X(112)- JVS(383)*X(127)- JVS(384)*X(128))/(JVS(381))
  X(81) = (X(81)- JVS(375)*X(103)- JVS(376)*X(111)- JVS(377)*X(127)- JVS(378)*X(128)- JVS(379)*X(132)- JVS(380)*X(134))&
            &/(JVS(374))
  X(80) = (X(80)- JVS(367)*X(114)- JVS(368)*X(125)- JVS(369)*X(127)- JVS(370)*X(136)- JVS(371)*X(137)- JVS(372)*X(138))&
            &/(JVS(366))
  X(79) = (X(79)- JVS(363)*X(103)- JVS(364)*X(127)- JVS(365)*X(128))/(JVS(362))
  X(78) = (X(78)- JVS(355)*X(89)- JVS(356)*X(113)- JVS(357)*X(116)- JVS(358)*X(124)- JVS(359)*X(130)- JVS(360)*X(137)- JVS(361)&
            &*X(138))/(JVS(354))
  X(77) = (X(77)- JVS(351)*X(120)- JVS(352)*X(127)- JVS(353)*X(138))/(JVS(350))
  X(76) = (X(76)- JVS(344)*X(96)- JVS(345)*X(100)- JVS(346)*X(107)- JVS(347)*X(110)- JVS(348)*X(125)- JVS(349)*X(127))&
            &/(JVS(343))
  X(75) = (X(75)- JVS(340)*X(121)- JVS(341)*X(127)- JVS(342)*X(135))/(JVS(339))
  X(74) = (X(74)- JVS(336)*X(120)- JVS(337)*X(127)- JVS(338)*X(138))/(JVS(335))
  X(73) = (X(73)- JVS(332)*X(120)- JVS(333)*X(127)- JVS(334)*X(138))/(JVS(331))
  X(72) = (X(72)- JVS(328)*X(120)- JVS(329)*X(127)- JVS(330)*X(138))/(JVS(327))
  X(71) = (X(71)- JVS(324)*X(120)- JVS(325)*X(127)- JVS(326)*X(138))/(JVS(323))
  X(70) = (X(70)- JVS(320)*X(127)- JVS(321)*X(137)- JVS(322)*X(138))/(JVS(319))
  X(69) = (X(69)- JVS(316)*X(120)- JVS(317)*X(127)- JVS(318)*X(138))/(JVS(315))
  X(68) = (X(68)- JVS(311)*X(85)- JVS(312)*X(127)- JVS(313)*X(134)- JVS(314)*X(135))/(JVS(310))
  X(67) = (X(67)- JVS(307)*X(93)- JVS(308)*X(127)- JVS(309)*X(128))/(JVS(306))
  X(66) = (X(66)- JVS(303)*X(114)- JVS(304)*X(127)- JVS(305)*X(131))/(JVS(302))
  X(65) = (X(65)- JVS(297)*X(117)- JVS(298)*X(121)- JVS(299)*X(127)- JVS(300)*X(128)- JVS(301)*X(132))/(JVS(296))
  X(64) = (X(64)- JVS(293)*X(127)- JVS(294)*X(128)- JVS(295)*X(135))/(JVS(292))
  X(63) = (X(63)- JVS(289)*X(92)- JVS(290)*X(127)- JVS(291)*X(128))/(JVS(288))
  X(62) = (X(62)- JVS(285)*X(115)- JVS(286)*X(127)- JVS(287)*X(128))/(JVS(284))
  X(61) = (X(61)- JVS(281)*X(109)- JVS(282)*X(127)- JVS(283)*X(128))/(JVS(280))
  X(60) = (X(60)- JVS(277)*X(92)- JVS(278)*X(127)- JVS(279)*X(134))/(JVS(276))
  X(59) = (X(59)- JVS(272)*X(105)- JVS(273)*X(125)- JVS(274)*X(126)- JVS(275)*X(127))/(JVS(271))
  X(58) = (X(58)- JVS(265)*X(121)- JVS(266)*X(127)- JVS(267)*X(128))/(JVS(264))
  X(57) = (X(57)- JVS(261)*X(117)- JVS(262)*X(127)- JVS(263)*X(128))/(JVS(260))
  X(56) = (X(56)- JVS(257)*X(120)- JVS(258)*X(127)- JVS(259)*X(138))/(JVS(256))
  X(55) = (X(55)- JVS(253)*X(97)- JVS(254)*X(127)- JVS(255)*X(128))/(JVS(252))
  X(54) = (X(54)- JVS(249)*X(112)- JVS(250)*X(127)- JVS(251)*X(135))/(JVS(248))
  X(53) = (X(53)- JVS(245)*X(84)- JVS(246)*X(85)- JVS(247)*X(127))/(JVS(244))
  X(52) = (X(52)- JVS(241)*X(120)- JVS(242)*X(127))/(JVS(240))
  X(51) = (X(51)- JVS(237)*X(105)- JVS(238)*X(127)- JVS(239)*X(129))/(JVS(236))
  X(50) = (X(50)- JVS(232)*X(53)- JVS(233)*X(85)- JVS(234)*X(127))/(JVS(231))
  X(49) = (X(49)- JVS(227)*X(90)- JVS(228)*X(120)- JVS(229)*X(134)- JVS(230)*X(135))/(JVS(226))
  X(48) = (X(48)- JVS(223)*X(134)- JVS(224)*X(135))/(JVS(222))
  X(47) = (X(47)- JVS(220)*X(91)- JVS(221)*X(127))/(JVS(219))
  X(46) = (X(46)- JVS(217)*X(126)- JVS(218)*X(127))/(JVS(216))
  X(45) = (X(45)- JVS(214)*X(127)- JVS(215)*X(138))/(JVS(213))
  X(44) = (X(44)- JVS(211)*X(120)- JVS(212)*X(127))/(JVS(210))
  X(43) = (X(43)- JVS(208)*X(127)- JVS(209)*X(138))/(JVS(207))
  X(42) = (X(42)- JVS(205)*X(120)- JVS(206)*X(127))/(JVS(204))
  X(41) = (X(41)- JVS(202)*X(46)- JVS(203)*X(127))/(JVS(201))
  X(40) = (X(40)- JVS(199)*X(51)- JVS(200)*X(129))/(JVS(198))
  X(39) = (X(39)- JVS(197)*X(127))/(JVS(196))
  X(38) = (X(38)- JVS(195)*X(127))/(JVS(194))
  X(37) = (X(37)- JVS(193)*X(127))/(JVS(192))
  X(36) = (X(36)- JVS(191)*X(127))/(JVS(190))
  X(35) = (X(35)- JVS(188)*X(124)- JVS(189)*X(131))/(JVS(187))
  X(34) = (X(34)- JVS(185)*X(83)- JVS(186)*X(130))/(JVS(184))
  X(33) = (X(33)- JVS(183)*X(120))/(JVS(182))
  X(32) = (X(32)- JVS(181)*X(127))/(JVS(180))
  X(31) = (X(31)- JVS(179)*X(127))/(JVS(178))
  X(30) = (X(30)- JVS(175)*X(80)- JVS(176)*X(125)- JVS(177)*X(128))/(JVS(174))
  X(29) = (X(29)- JVS(173)*X(127))/(JVS(172))
  X(28) = (X(28)- JVS(171)*X(127))/(JVS(170))
  X(27) = (X(27)- JVS(169)*X(120))/(JVS(168))
  X(26) = (X(26)- JVS(167)*X(120))/(JVS(166))
  X(25) = (X(25)- JVS(165)*X(120))/(JVS(164))
  X(24) = (X(24)- JVS(163)*X(120))/(JVS(162))
  X(23) = (X(23)- JVS(161)*X(120))/(JVS(160))
  X(22) = (X(22)- JVS(159)*X(127))/(JVS(158))
  X(21) = (X(21)- JVS(157)*X(127))/(JVS(156))
  X(20) = (X(20)- JVS(155)*X(46))/(JVS(154))
  X(19) = (X(19)- JVS(153)*X(124))/(JVS(152))
  X(18) = (X(18)- JVS(150)*X(55)- JVS(151)*X(127))/(JVS(149))
  X(17) = (X(17)- JVS(120)*X(20)- JVS(121)*X(34)- JVS(122)*X(35)- JVS(123)*X(48)- JVS(124)*X(49)- JVS(125)*X(59)- JVS(126)&
            &*X(64)- JVS(127)*X(66)- JVS(128)*X(68)- JVS(129)*X(92)- JVS(130)*X(93)- JVS(131)*X(97)- JVS(132)*X(101)- JVS(133)&
            &*X(102)- JVS(134)*X(103)- JVS(135)*X(105)- JVS(136)*X(109)- JVS(137)*X(112)- JVS(138)*X(114)- JVS(139)*X(115)&
            &- JVS(140)*X(117)- JVS(141)*X(121)- JVS(142)*X(122)- JVS(143)*X(127)- JVS(144)*X(128)- JVS(145)*X(132)- JVS(146)&
            &*X(134)- JVS(147)*X(137)- JVS(148)*X(138))/(JVS(119))
  X(16) = (X(16)- JVS(71)*X(19)- JVS(72)*X(25)- JVS(73)*X(26)- JVS(74)*X(42)- JVS(75)*X(44)- JVS(76)*X(46)- JVS(77)*X(49)&
            &- JVS(78)*X(52)- JVS(79)*X(56)- JVS(80)*X(69)- JVS(81)*X(71)- JVS(82)*X(72)- JVS(83)*X(73)- JVS(84)*X(74)- JVS(85)&
            &*X(77)- JVS(86)*X(83)- JVS(87)*X(84)- JVS(88)*X(85)- JVS(89)*X(90)- JVS(90)*X(96)- JVS(91)*X(98)- JVS(92)*X(99)&
            &- JVS(93)*X(100)- JVS(94)*X(104)- JVS(95)*X(107)- JVS(96)*X(110)- JVS(97)*X(113)- JVS(98)*X(116)- JVS(99)*X(117)&
            &- JVS(100)*X(118)- JVS(101)*X(119)- JVS(102)*X(120)- JVS(103)*X(121)- JVS(104)*X(122)- JVS(105)*X(123)- JVS(106)&
            &*X(124)- JVS(107)*X(125)- JVS(108)*X(126)- JVS(109)*X(127)- JVS(110)*X(128)- JVS(111)*X(129)- JVS(112)*X(130)&
            &- JVS(113)*X(131)- JVS(114)*X(132)- JVS(115)*X(133)- JVS(116)*X(135)- JVS(117)*X(136))/(JVS(70))
  X(15) = (X(15)- JVS(68)*X(49)- JVS(69)*X(120))/(JVS(67))
  X(14) = (X(14)- JVS(65)*X(95)- JVS(66)*X(127))/(JVS(64))
  X(13) = (X(13)- JVS(60)*X(99)- JVS(61)*X(120)- JVS(62)*X(127)- JVS(63)*X(138))/(JVS(59))
  X(12) = X(12)/ JVS(58)
  X(11) = (X(11)- JVS(56)*X(83))/(JVS(55))
  X(10) = (X(10)- JVS(54)*X(83))/(JVS(53))
  X(9) = (X(9)- JVS(49)*X(30)- JVS(50)*X(66)- JVS(51)*X(127)- JVS(52)*X(128))/(JVS(48))
  X(8) = (X(8)- JVS(44)*X(24)- JVS(45)*X(27)- JVS(46)*X(77)- JVS(47)*X(120))/(JVS(43))
  X(7) = (X(7)- JVS(12)*X(23)- JVS(13)*X(24)- JVS(14)*X(25)- JVS(15)*X(26)- JVS(16)*X(27)- JVS(17)*X(28)- JVS(18)*X(29)- JVS(19)&
           &*X(33)- JVS(20)*X(36)- JVS(21)*X(37)- JVS(22)*X(38)- JVS(23)*X(39)- JVS(24)*X(42)- JVS(25)*X(43)- JVS(26)*X(44)- &
                     JVS(27)&
           &*X(45)- JVS(28)*X(52)- JVS(29)*X(56)- JVS(30)*X(69)- JVS(31)*X(70)- JVS(32)*X(71)- JVS(33)*X(72)- JVS(34)*X(73)- &
                     JVS(35)&
           &*X(74)- JVS(36)*X(77)- JVS(37)*X(120)- JVS(38)*X(127)- JVS(39)*X(137)- JVS(40)*X(138))/(JVS(11))
  X(6) = (X(6)- JVS(7)*X(70)- JVS(8)*X(138))/(JVS(6))
  X(5) = X(5)/ JVS(5)
  X(4) = X(4)/ JVS(4)
  X(3) = X(3)/ JVS(3)
  X(2) = X(2)/ JVS(2)
  X(1) = X(1)/ JVS(1)
      
END SUBROUTINE KppSolve
 
      REAL(kind=dp) FUNCTION WLAMCH( C)
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!       returns epsilon machine
!       after LAPACK
!       replace this by the function from the optimized LAPACK implementation:
!          CALL SLAMCH('E') or CALL DLAMCH('E')
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!        USE messy_mecca_kpp_Precision

      CHARACTER ::  C
      INTEGER    :: i
      REAL(kind=dp), SAVE  ::  Eps
      REAL(kind=dp)  ::  Suma
      REAL(kind=dp), PARAMETER  ::  ONE=1.0_dp, HALF=0.5_dp
      LOGICAL, SAVE   ::  First=.TRUE.
      
      IF (First) THEN
        First = .FALSE.
        Eps = HALF**(16)
        DO i = 17, 80
          Eps = Eps*HALF
          CALL WLAMCH_ADD(ONE,Eps,Suma)
          IF (Suma.LE.ONE) GOTO 10
        END DO
        PRINT*,'ERROR IN WLAMCH. EPS < ',Eps
        RETURN
10      Eps = Eps*2
        i = i- 1      
      END IF

      WLAMCH = Eps

      END FUNCTION WLAMCH
 
      SUBROUTINE WLAMCH_ADD( A, B, Suma)
!        USE messy_mecca_kpp_Precision
      
      REAL(kind=dp) A, B, Suma
      Suma = A +  B

      END SUBROUTINE WLAMCH_ADD
 
SUBROUTINE Jac_SP(V, F, RCT, JVS)

!   V -  Concentrations of variable species (local)
  REAL(kind=dp) :: V(NVAR)
!   F -  Concentrations of fixed species (local)
  REAL(kind=dp) :: F(NFIX)
!   RCT -  Rate constants (local)
  REAL(kind=dp) :: RCT(NREACT)
!   JVS -  sparse Jacobian of variables
  REAL(kind=dp) :: JVS(LU_NONZERO)


!   Local variables
!   B -  Temporary array
  REAL(kind=dp) :: B(596)

!   B(1) = dA(1)/dV(120)
  B(1) = RCT(1)*F(1)
!   B(3) = dA(2)/dV(126)
  B(3) = RCT(2)*F(1)
!   B(5) = dA(3)/dV(120)
  B(5) = 1.2e-10*V(125)
!   B(6) = dA(3)/dV(125)
  B(6) = 1.2e-10*V(120)
!   B(7) = dA(4)/dV(125)
  B(7) = RCT(4)*V(126)
!   B(8) = dA(4)/dV(126)
  B(8) = RCT(4)*V(125)
!   B(9) = dA(5)/dV(122)
  B(9) = RCT(5)*F(1)
!   B(11) = dA(6)/dV(122)
  B(11) = RCT(6)*V(125)
!   B(12) = dA(6)/dV(125)
  B(12) = RCT(6)*V(122)
!   B(13) = dA(7)/dV(98)
  B(13) = 1.2e-10*V(120)
!   B(14) = dA(7)/dV(120)
  B(14) = 1.2e-10*V(98)
!   B(15) = dA(8)/dV(126)
  B(15) = RCT(8)*V(127)
!   B(16) = dA(8)/dV(127)
  B(16) = RCT(8)*V(126)
!   B(17) = dA(9)/dV(125)
  B(17) = RCT(9)*V(127)
!   B(18) = dA(9)/dV(127)
  B(18) = RCT(9)*V(125)
!   B(19) = dA(10)/dV(98)
  B(19) = RCT(10)*V(127)
!   B(20) = dA(10)/dV(127)
  B(20) = RCT(10)*V(98)
!   B(21) = dA(11)/dV(126)
  B(21) = RCT(11)*V(128)
!   B(22) = dA(11)/dV(128)
  B(22) = RCT(11)*V(126)
!   B(23) = dA(12)/dV(125)
  B(23) = RCT(12)*V(128)
!   B(24) = dA(12)/dV(128)
  B(24) = RCT(12)*V(125)
!   B(25) = dA(13)/dV(122)
  B(25) = 7.2e-11*V(128)
!   B(26) = dA(13)/dV(128)
  B(26) = 7.2e-11*V(122)
!   B(27) = dA(14)/dV(122)
  B(27) = 6.9e-12*V(128)
!   B(28) = dA(14)/dV(128)
  B(28) = 6.9e-12*V(122)
!   B(29) = dA(15)/dV(122)
  B(29) = 1.6e-12*V(128)
!   B(30) = dA(15)/dV(128)
  B(30) = 1.6e-12*V(122)
!   B(31) = dA(16)/dV(127)
  B(31) = RCT(16)*V(128)
!   B(32) = dA(16)/dV(128)
  B(32) = RCT(16)*V(127)
!   B(33) = dA(17)/dV(128)
  B(33) = RCT(17)*2*V(128)
!   B(34) = dA(18)/dV(120)
  B(34) = RCT(18)*V(129)
!   B(35) = dA(18)/dV(129)
  B(35) = RCT(18)*V(120)
!   B(36) = dA(19)/dV(87)
  B(36) = 1.8e-12*V(127)
!   B(37) = dA(19)/dV(127)
  B(37) = 1.8e-12*V(87)
!   B(38) = dA(20)/dV(48)
  B(38) = RCT(20)*F(1)
!   B(40) = dA(21)/dV(120)
  B(40) = RCT(21)*F(2)
!   B(42) = dA(22)/dV(49)
  B(42) = RCT(22)*V(120)
!   B(43) = dA(22)/dV(120)
  B(43) = RCT(22)*V(49)
!   B(44) = dA(23)/dV(49)
  B(44) = RCT(23)*V(120)
!   B(45) = dA(23)/dV(120)
  B(45) = RCT(23)*V(49)
!   B(46) = dA(24)/dV(125)
  B(46) = RCT(24)*V(134)
!   B(47) = dA(24)/dV(134)
  B(47) = RCT(24)*V(125)
!   B(48) = dA(25)/dV(48)
  B(48) = RCT(25)*V(134)
!   B(49) = dA(25)/dV(134)
  B(49) = RCT(25)*V(48)
!   B(50) = dA(26)/dV(126)
  B(50) = RCT(26)*V(135)
!   B(51) = dA(26)/dV(135)
  B(51) = RCT(26)*V(126)
!   B(52) = dA(27)/dV(125)
  B(52) = RCT(27)*V(135)
!   B(53) = dA(27)/dV(135)
  B(53) = RCT(27)*V(125)
!   B(54) = dA(28)/dV(48)
  B(54) = RCT(28)*V(135)
!   B(55) = dA(28)/dV(135)
  B(55) = RCT(28)*V(48)
!   B(56) = dA(29)/dV(134)
  B(56) = RCT(29)*V(136)
!   B(57) = dA(29)/dV(136)
  B(57) = RCT(29)*V(134)
!   B(58) = dA(30)/dV(135)
  B(58) = RCT(30)*V(136)
!   B(59) = dA(30)/dV(136)
  B(59) = RCT(30)*V(135)
!   B(60) = dA(31)/dV(83)
  B(60) = RCT(31)
!   B(61) = dA(32)/dV(127)
  B(61) = RCT(32)*V(134)
!   B(62) = dA(32)/dV(134)
  B(62) = RCT(32)*V(127)
!   B(63) = dA(33)/dV(128)
  B(63) = RCT(33)*V(134)
!   B(64) = dA(33)/dV(134)
  B(64) = RCT(33)*V(128)
!   B(65) = dA(34)/dV(127)
  B(65) = RCT(34)*V(135)
!   B(66) = dA(34)/dV(135)
  B(66) = RCT(34)*V(127)
!   B(67) = dA(35)/dV(128)
  B(67) = RCT(35)*V(135)
!   B(68) = dA(35)/dV(135)
  B(68) = RCT(35)*V(128)
!   B(69) = dA(36)/dV(128)
  B(69) = 3.5e-12*V(136)
!   B(70) = dA(36)/dV(136)
  B(70) = 3.5e-12*V(128)
!   B(71) = dA(37)/dV(68)
  B(71) = RCT(37)*V(127)
!   B(72) = dA(37)/dV(127)
  B(72) = RCT(37)*V(68)
!   B(73) = dA(38)/dV(102)
  B(73) = RCT(38)*V(127)
!   B(74) = dA(38)/dV(127)
  B(74) = RCT(38)*V(102)
!   B(75) = dA(39)/dV(64)
  B(75) = RCT(39)
!   B(76) = dA(40)/dV(64)
  B(76) = RCT(40)*V(127)
!   B(77) = dA(40)/dV(127)
  B(77) = RCT(40)*V(64)
!   B(78) = dA(41)/dV(31)
  B(78) = RCT(41)*V(127)
!   B(79) = dA(41)/dV(127)
  B(79) = RCT(41)*V(31)
!   B(80) = dA(42)/dV(90)
  B(80) = RCT(42)*V(125)
!   B(81) = dA(42)/dV(125)
  B(81) = RCT(42)*V(90)
!   B(82) = dA(43)/dV(90)
  B(82) = RCT(43)*V(128)
!   B(83) = dA(43)/dV(128)
  B(83) = RCT(43)*V(90)
!   B(84) = dA(44)/dV(90)
  B(84) = RCT(44)*V(128)
!   B(85) = dA(44)/dV(128)
  B(85) = RCT(44)*V(90)
!   B(86) = dA(45)/dV(90)
  B(86) = RCT(45)*V(134)
!   B(87) = dA(45)/dV(134)
  B(87) = RCT(45)*V(90)
!   B(88) = dA(46)/dV(90)
  B(88) = RCT(46)*V(134)
!   B(89) = dA(46)/dV(134)
  B(89) = RCT(46)*V(90)
!   B(90) = dA(47)/dV(90)
  B(90) = RCT(47)*V(135)
!   B(91) = dA(47)/dV(135)
  B(91) = RCT(47)*V(90)
!   B(92) = dA(48)/dV(90)
  B(92) = RCT(48)*V(135)
!   B(93) = dA(48)/dV(135)
  B(93) = RCT(48)*V(90)
!   B(94) = dA(49)/dV(84)
  B(94) = 1.2e-14*V(125)
!   B(95) = dA(49)/dV(125)
  B(95) = 1.2e-14*V(84)
!   B(96) = dA(50)/dV(84)
  B(96) = 1300
!   B(97) = dA(51)/dV(85)
  B(97) = RCT(51)*V(127)
!   B(98) = dA(51)/dV(127)
  B(98) = RCT(51)*V(85)
!   B(99) = dA(52)/dV(53)
  B(99) = RCT(52)*V(85)
!   B(100) = dA(52)/dV(85)
  B(100) = RCT(52)*V(53)
!   B(101) = dA(53)/dV(85)
  B(101) = RCT(53)*V(135)
!   B(102) = dA(53)/dV(135)
  B(102) = RCT(53)*V(85)
!   B(103) = dA(54)/dV(53)
  B(103) = 1.66e-12*V(127)
!   B(104) = dA(54)/dV(127)
  B(104) = 1.66e-12*V(53)
!   B(105) = dA(55)/dV(50)
  B(105) = RCT(55)*V(127)
!   B(106) = dA(55)/dV(127)
  B(106) = RCT(55)*V(50)
!   B(107) = dA(56)/dV(85)
  B(107) = RCT(56)*F(1)
!   B(109) = dA(57)/dV(99)
  B(109) = 1.75e-10*V(120)
!   B(110) = dA(57)/dV(120)
  B(110) = 1.75e-10*V(99)
!   B(111) = dA(58)/dV(99)
  B(111) = RCT(58)*V(127)
!   B(112) = dA(58)/dV(127)
  B(112) = RCT(58)*V(99)
!   B(113) = dA(59)/dV(88)
  B(113) = RCT(59)*V(127)
!   B(114) = dA(59)/dV(127)
  B(114) = RCT(59)*V(88)
!   B(115) = dA(60)/dV(128)
  B(115) = RCT(60)*V(132)
!   B(116) = dA(60)/dV(132)
  B(116) = RCT(60)*V(128)
!   B(117) = dA(61)/dV(132)
  B(117) = RCT(61)*V(134)
!   B(118) = dA(61)/dV(134)
  B(118) = RCT(61)*V(132)
!   B(119) = dA(62)/dV(132)
  B(119) = 1.3e-12*V(136)
!   B(120) = dA(62)/dV(136)
  B(120) = 1.3e-12*V(132)
!   B(121) = dA(63)/dV(132)
  B(121) = RCT(63)*2*V(132)
!   B(122) = dA(64)/dV(132)
  B(122) = RCT(64)*2*V(132)
!   B(123) = dA(65)/dV(106)
  B(123) = RCT(65)*V(127)
!   B(124) = dA(65)/dV(127)
  B(124) = RCT(65)*V(106)
!   B(125) = dA(66)/dV(127)
  B(125) = RCT(66)*V(133)
!   B(126) = dA(66)/dV(133)
  B(126) = RCT(66)*V(127)
!   B(127) = dA(67)/dV(133)
  B(127) = RCT(67)*V(136)
!   B(128) = dA(67)/dV(136)
  B(128) = RCT(67)*V(133)
!   B(129) = dA(68)/dV(95)
  B(129) = RCT(68)*V(127)
!   B(130) = dA(68)/dV(127)
  B(130) = RCT(68)*V(95)
!   B(131) = dA(69)/dV(76)
  B(131) = 4e-13*V(127)
!   B(132) = dA(69)/dV(127)
  B(132) = 4e-13*V(76)
!   B(133) = dA(70)/dV(21)
  B(133) = RCT(70)*V(127)
!   B(134) = dA(70)/dV(127)
  B(134) = RCT(70)*V(21)
!   B(135) = dA(71)/dV(100)
  B(135) = RCT(71)*V(125)
!   B(136) = dA(71)/dV(125)
  B(136) = RCT(71)*V(100)
!   B(137) = dA(72)/dV(100)
  B(137) = RCT(72)*V(127)
!   B(138) = dA(72)/dV(127)
  B(138) = RCT(72)*V(100)
!   B(139) = dA(73)/dV(117)
  B(139) = RCT(73)*V(128)
!   B(140) = dA(73)/dV(128)
  B(140) = RCT(73)*V(117)
!   B(141) = dA(74)/dV(117)
  B(141) = RCT(74)*V(134)
!   B(142) = dA(74)/dV(134)
  B(142) = RCT(74)*V(117)
!   B(143) = dA(75)/dV(117)
  B(143) = 2.3e-12*V(136)
!   B(144) = dA(75)/dV(136)
  B(144) = 2.3e-12*V(117)
!   B(145) = dA(76)/dV(117)
  B(145) = RCT(76)*V(132)
!   B(146) = dA(76)/dV(132)
  B(146) = RCT(76)*V(117)
!   B(147) = dA(77)/dV(57)
  B(147) = RCT(77)*V(127)
!   B(148) = dA(77)/dV(127)
  B(148) = RCT(77)*V(57)
!   B(149) = dA(78)/dV(119)
  B(149) = RCT(78)*V(127)
!   B(150) = dA(78)/dV(127)
  B(150) = RCT(78)*V(119)
!   B(151) = dA(79)/dV(119)
  B(151) = RCT(79)*V(136)
!   B(152) = dA(79)/dV(136)
  B(152) = RCT(79)*V(119)
!   B(153) = dA(80)/dV(65)
  B(153) = RCT(80)*V(127)
!   B(154) = dA(80)/dV(127)
  B(154) = RCT(80)*V(65)
!   B(155) = dA(81)/dV(121)
  B(155) = RCT(81)*V(128)
!   B(156) = dA(81)/dV(128)
  B(156) = RCT(81)*V(121)
!   B(157) = dA(82)/dV(121)
  B(157) = RCT(82)*V(128)
!   B(158) = dA(82)/dV(128)
  B(158) = RCT(82)*V(121)
!   B(159) = dA(83)/dV(121)
  B(159) = RCT(83)*V(134)
!   B(160) = dA(83)/dV(134)
  B(160) = RCT(83)*V(121)
!   B(161) = dA(84)/dV(121)
  B(161) = RCT(84)*V(135)
!   B(162) = dA(84)/dV(135)
  B(162) = RCT(84)*V(121)
!   B(163) = dA(85)/dV(121)
  B(163) = 4e-12*V(136)
!   B(164) = dA(85)/dV(136)
  B(164) = 4e-12*V(121)
!   B(165) = dA(86)/dV(121)
  B(165) = RCT(86)*V(132)
!   B(166) = dA(86)/dV(132)
  B(166) = RCT(86)*V(121)
!   B(167) = dA(87)/dV(121)
  B(167) = RCT(87)*V(132)
!   B(168) = dA(87)/dV(132)
  B(168) = RCT(87)*V(121)
!   B(169) = dA(88)/dV(117)
  B(169) = RCT(88)*V(121)
!   B(170) = dA(88)/dV(121)
  B(170) = RCT(88)*V(117)
!   B(171) = dA(89)/dV(121)
  B(171) = RCT(89)*2*V(121)
!   B(172) = dA(90)/dV(58)
  B(172) = RCT(90)*V(127)
!   B(173) = dA(90)/dV(127)
  B(173) = RCT(90)*V(58)
!   B(174) = dA(91)/dV(47)
  B(174) = RCT(91)*V(127)
!   B(175) = dA(91)/dV(127)
  B(175) = RCT(91)*V(47)
!   B(176) = dA(92)/dV(75)
  B(176) = RCT(92)*V(127)
!   B(177) = dA(92)/dV(127)
  B(177) = RCT(92)*V(75)
!   B(178) = dA(93)/dV(75)
  B(178) = RCT(93)
!   B(179) = dA(94)/dV(70)
  B(179) = RCT(94)*V(127)
!   B(180) = dA(94)/dV(127)
  B(180) = RCT(94)*V(70)
!   B(181) = dA(95)/dV(32)
  B(181) = RCT(95)*V(127)
!   B(182) = dA(95)/dV(127)
  B(182) = RCT(95)*V(32)
!   B(183) = dA(96)/dV(96)
  B(183) = RCT(96)*V(125)
!   B(184) = dA(96)/dV(125)
  B(184) = RCT(96)*V(96)
!   B(185) = dA(97)/dV(96)
  B(185) = RCT(97)*V(127)
!   B(186) = dA(97)/dV(127)
  B(186) = RCT(97)*V(96)
!   B(187) = dA(98)/dV(96)
  B(187) = RCT(98)*V(136)
!   B(188) = dA(98)/dV(136)
  B(188) = RCT(98)*V(96)
!   B(189) = dA(99)/dV(92)
  B(189) = RCT(99)*V(128)
!   B(190) = dA(99)/dV(128)
  B(190) = RCT(99)*V(92)
!   B(191) = dA(100)/dV(92)
  B(191) = RCT(100)*V(134)
!   B(192) = dA(100)/dV(134)
  B(192) = RCT(100)*V(92)
!   B(193) = dA(101)/dV(92)
  B(193) = RCT(101)*V(132)
!   B(194) = dA(101)/dV(132)
  B(194) = RCT(101)*V(92)
!   B(195) = dA(102)/dV(63)
  B(195) = RCT(102)*V(127)
!   B(196) = dA(102)/dV(127)
  B(196) = RCT(102)*V(63)
!   B(197) = dA(103)/dV(115)
  B(197) = RCT(103)*V(128)
!   B(198) = dA(103)/dV(128)
  B(198) = RCT(103)*V(115)
!   B(199) = dA(104)/dV(115)
  B(199) = RCT(104)*V(134)
!   B(200) = dA(104)/dV(134)
  B(200) = RCT(104)*V(115)
!   B(201) = dA(105)/dV(62)
  B(201) = RCT(105)*V(127)
!   B(202) = dA(105)/dV(127)
  B(202) = RCT(105)*V(62)
!   B(203) = dA(106)/dV(86)
  B(203) = RCT(106)*V(127)
!   B(204) = dA(106)/dV(127)
  B(204) = RCT(106)*V(86)
!   B(205) = dA(107)/dV(93)
  B(205) = RCT(107)*V(128)
!   B(206) = dA(107)/dV(128)
  B(206) = RCT(107)*V(93)
!   B(207) = dA(108)/dV(93)
  B(207) = RCT(108)*V(134)
!   B(208) = dA(108)/dV(134)
  B(208) = RCT(108)*V(93)
!   B(209) = dA(109)/dV(93)
  B(209) = RCT(109)*V(132)
!   B(210) = dA(109)/dV(132)
  B(210) = RCT(109)*V(93)
!   B(211) = dA(110)/dV(67)
  B(211) = RCT(110)*V(127)
!   B(212) = dA(110)/dV(127)
  B(212) = RCT(110)*V(67)
!   B(213) = dA(111)/dV(108)
  B(213) = RCT(111)*V(127)
!   B(214) = dA(111)/dV(127)
  B(214) = RCT(111)*V(108)
!   B(215) = dA(112)/dV(94)
  B(215) = RCT(112)*V(127)
!   B(216) = dA(112)/dV(127)
  B(216) = RCT(112)*V(94)
!   B(217) = dA(113)/dV(60)
  B(217) = RCT(113)*V(127)
!   B(218) = dA(113)/dV(127)
  B(218) = RCT(113)*V(60)
!   B(219) = dA(114)/dV(22)
  B(219) = RCT(114)*V(127)
!   B(220) = dA(114)/dV(127)
  B(220) = RCT(114)*V(22)
!   B(221) = dA(115)/dV(103)
  B(221) = RCT(115)*V(132)
!   B(222) = dA(115)/dV(132)
  B(222) = RCT(115)*V(103)
!   B(223) = dA(116)/dV(103)
  B(223) = RCT(116)*V(128)
!   B(224) = dA(116)/dV(128)
  B(224) = RCT(116)*V(103)
!   B(225) = dA(117)/dV(103)
  B(225) = RCT(117)*V(134)
!   B(226) = dA(117)/dV(134)
  B(226) = RCT(117)*V(103)
!   B(227) = dA(118)/dV(79)
  B(227) = RCT(118)*V(127)
!   B(228) = dA(118)/dV(127)
  B(228) = RCT(118)*V(79)
!   B(229) = dA(119)/dV(110)
  B(229) = RCT(119)*V(125)
!   B(230) = dA(119)/dV(125)
  B(230) = RCT(119)*V(110)
!   B(231) = dA(120)/dV(110)
  B(231) = RCT(120)*V(127)
!   B(232) = dA(120)/dV(127)
  B(232) = RCT(120)*V(110)
!   B(233) = dA(121)/dV(112)
  B(233) = RCT(121)*V(128)
!   B(234) = dA(121)/dV(128)
  B(234) = RCT(121)*V(112)
!   B(235) = dA(122)/dV(112)
  B(235) = RCT(122)*V(134)
!   B(236) = dA(122)/dV(134)
  B(236) = RCT(122)*V(112)
!   B(237) = dA(123)/dV(112)
  B(237) = RCT(123)*V(135)
!   B(238) = dA(123)/dV(135)
  B(238) = RCT(123)*V(112)
!   B(239) = dA(124)/dV(112)
  B(239) = 2e-12*V(132)
!   B(240) = dA(124)/dV(132)
  B(240) = 2e-12*V(112)
!   B(241) = dA(125)/dV(112)
  B(241) = 2e-12*2*V(112)
!   B(242) = dA(126)/dV(82)
  B(242) = 3e-11*V(127)
!   B(243) = dA(126)/dV(127)
  B(243) = 3e-11*V(82)
!   B(244) = dA(127)/dV(81)
  B(244) = RCT(127)*V(127)
!   B(245) = dA(127)/dV(127)
  B(245) = RCT(127)*V(81)
!   B(246) = dA(128)/dV(97)
  B(246) = RCT(128)*V(128)
!   B(247) = dA(128)/dV(128)
  B(247) = RCT(128)*V(97)
!   B(248) = dA(129)/dV(97)
  B(248) = RCT(129)*V(134)
!   B(249) = dA(129)/dV(134)
  B(249) = RCT(129)*V(97)
!   B(250) = dA(130)/dV(55)
  B(250) = RCT(130)*V(127)
!   B(251) = dA(130)/dV(127)
  B(251) = RCT(130)*V(55)
!   B(252) = dA(131)/dV(111)
  B(252) = 1.7e-12*V(127)
!   B(253) = dA(131)/dV(127)
  B(253) = 1.7e-12*V(111)
!   B(254) = dA(132)/dV(54)
  B(254) = 3.2e-11*V(127)
!   B(255) = dA(132)/dV(127)
  B(255) = 3.2e-11*V(54)
!   B(256) = dA(133)/dV(54)
  B(256) = RCT(133)
!   B(257) = dA(134)/dV(107)
  B(257) = RCT(134)*V(125)
!   B(258) = dA(134)/dV(125)
  B(258) = RCT(134)*V(107)
!   B(259) = dA(135)/dV(107)
  B(259) = RCT(135)*V(127)
!   B(260) = dA(135)/dV(127)
  B(260) = RCT(135)*V(107)
!   B(261) = dA(136)/dV(107)
  B(261) = RCT(136)*V(136)
!   B(262) = dA(136)/dV(136)
  B(262) = RCT(136)*V(107)
!   B(263) = dA(137)/dV(109)
  B(263) = RCT(137)*V(128)
!   B(264) = dA(137)/dV(128)
  B(264) = RCT(137)*V(109)
!   B(265) = dA(138)/dV(109)
  B(265) = RCT(138)*V(134)
!   B(266) = dA(138)/dV(134)
  B(266) = RCT(138)*V(109)
!   B(267) = dA(139)/dV(109)
  B(267) = 2e-12*V(132)
!   B(268) = dA(139)/dV(132)
  B(268) = 2e-12*V(109)
!   B(269) = dA(140)/dV(109)
  B(269) = 2e-12*2*V(109)
!   B(270) = dA(141)/dV(61)
  B(270) = 1e-10*V(127)
!   B(271) = dA(141)/dV(127)
  B(271) = 1e-10*V(61)
!   B(272) = dA(142)/dV(91)
  B(272) = 1.3e-11*V(127)
!   B(273) = dA(142)/dV(127)
  B(273) = 1.3e-11*V(91)
!   B(274) = dA(143)/dV(125)
  B(274) = RCT(143)*V(138)
!   B(275) = dA(143)/dV(138)
  B(275) = RCT(143)*V(125)
!   B(276) = dA(144)/dV(124)
  B(276) = RCT(144)*V(126)
!   B(277) = dA(144)/dV(126)
  B(277) = RCT(144)*V(124)
!   B(278) = dA(145)/dV(124)
  B(278) = RCT(145)*2*V(124)
!   B(279) = dA(146)/dV(124)
  B(279) = RCT(146)*2*V(124)
!   B(280) = dA(147)/dV(124)
  B(280) = RCT(147)*2*V(124)
!   B(281) = dA(148)/dV(124)
  B(281) = RCT(148)*2*V(124)
!   B(282) = dA(149)/dV(19)
  B(282) = RCT(149)
!   B(283) = dA(150)/dV(98)
  B(283) = RCT(150)*V(138)
!   B(284) = dA(150)/dV(138)
  B(284) = RCT(150)*V(98)
!   B(285) = dA(151)/dV(128)
  B(285) = RCT(151)*V(138)
!   B(286) = dA(151)/dV(138)
  B(286) = RCT(151)*V(128)
!   B(287) = dA(152)/dV(128)
  B(287) = RCT(152)*V(138)
!   B(288) = dA(152)/dV(138)
  B(288) = RCT(152)*V(128)
!   B(289) = dA(153)/dV(87)
  B(289) = RCT(153)*V(138)
!   B(290) = dA(153)/dV(138)
  B(290) = RCT(153)*V(87)
!   B(291) = dA(154)/dV(124)
  B(291) = RCT(154)*V(127)
!   B(292) = dA(154)/dV(127)
  B(292) = RCT(154)*V(124)
!   B(293) = dA(155)/dV(124)
  B(293) = RCT(155)*V(128)
!   B(294) = dA(155)/dV(128)
  B(294) = RCT(155)*V(124)
!   B(295) = dA(156)/dV(127)
  B(295) = RCT(156)*V(130)
!   B(296) = dA(156)/dV(130)
  B(296) = RCT(156)*V(127)
!   B(297) = dA(157)/dV(113)
  B(297) = RCT(157)*V(127)
!   B(298) = dA(157)/dV(127)
  B(298) = RCT(157)*V(113)
!   B(299) = dA(158)/dV(124)
  B(299) = RCT(158)*V(134)
!   B(300) = dA(158)/dV(134)
  B(300) = RCT(158)*V(124)
!   B(301) = dA(159)/dV(124)
  B(301) = RCT(159)*V(135)
!   B(302) = dA(159)/dV(135)
  B(302) = RCT(159)*V(124)
!   B(303) = dA(160)/dV(116)
  B(303) = RCT(160)
!   B(304) = dA(161)/dV(116)
  B(304) = RCT(161)*V(126)
!   B(305) = dA(161)/dV(126)
  B(305) = RCT(161)*V(116)
!   B(306) = dA(162)/dV(116)
  B(306) = RCT(162)*V(138)
!   B(307) = dA(162)/dV(138)
  B(307) = RCT(162)*V(116)
!   B(308) = dA(163)/dV(99)
  B(308) = RCT(163)*V(138)
!   B(309) = dA(163)/dV(138)
  B(309) = RCT(163)*V(99)
!   B(310) = dA(164)/dV(133)
  B(310) = RCT(164)*V(138)
!   B(311) = dA(164)/dV(138)
  B(311) = RCT(164)*V(133)
!   B(312) = dA(165)/dV(106)
  B(312) = 5.9e-11*V(138)
!   B(313) = dA(165)/dV(138)
  B(313) = 5.9e-11*V(106)
!   B(314) = dA(166)/dV(124)
  B(314) = RCT(166)*V(132)
!   B(315) = dA(166)/dV(132)
  B(315) = RCT(166)*V(124)
!   B(316) = dA(167)/dV(23)
  B(316) = 3.3e-10*V(120)
!   B(317) = dA(167)/dV(120)
  B(317) = 3.3e-10*V(23)
!   B(318) = dA(168)/dV(52)
  B(318) = 1.65e-10*V(120)
!   B(319) = dA(168)/dV(120)
  B(319) = 1.65e-10*V(52)
!   B(320) = dA(169)/dV(52)
  B(320) = RCT(169)*V(127)
!   B(321) = dA(169)/dV(127)
  B(321) = RCT(169)*V(52)
!   B(322) = dA(170)/dV(44)
  B(322) = 3.25e-10*V(120)
!   B(323) = dA(170)/dV(120)
  B(323) = 3.25e-10*V(44)
!   B(324) = dA(171)/dV(44)
  B(324) = RCT(171)*V(127)
!   B(325) = dA(171)/dV(127)
  B(325) = RCT(171)*V(44)
!   B(326) = dA(172)/dV(100)
  B(326) = RCT(172)*V(138)
!   B(327) = dA(172)/dV(138)
  B(327) = RCT(172)*V(100)
!   B(328) = dA(173)/dV(119)
  B(328) = 8e-11*V(138)
!   B(329) = dA(173)/dV(138)
  B(329) = 8e-11*V(119)
!   B(330) = dA(174)/dV(70)
  B(330) = RCT(174)*V(138)
!   B(331) = dA(174)/dV(138)
  B(331) = RCT(174)*V(70)
!   B(332) = dA(175)/dV(24)
  B(332) = 1.4e-10*V(120)
!   B(333) = dA(175)/dV(120)
  B(333) = 1.4e-10*V(24)
!   B(334) = dA(176)/dV(27)
  B(334) = 2.3e-10*V(120)
!   B(335) = dA(176)/dV(120)
  B(335) = 2.3e-10*V(27)
!   B(336) = dA(177)/dV(125)
  B(336) = RCT(177)*V(137)
!   B(337) = dA(177)/dV(137)
  B(337) = RCT(177)*V(125)
!   B(338) = dA(178)/dV(126)
  B(338) = RCT(178)*V(131)
!   B(339) = dA(178)/dV(131)
  B(339) = RCT(178)*V(126)
!   B(340) = dA(179)/dV(131)
  B(340) = 2.7e-12*2*V(131)
!   B(341) = dA(180)/dV(131)
  B(341) = RCT(180)*2*V(131)
!   B(342) = dA(181)/dV(128)
  B(342) = RCT(181)*V(137)
!   B(343) = dA(181)/dV(137)
  B(343) = RCT(181)*V(128)
!   B(344) = dA(182)/dV(128)
  B(344) = RCT(182)*V(131)
!   B(345) = dA(182)/dV(131)
  B(345) = RCT(182)*V(128)
!   B(346) = dA(183)/dV(123)
  B(346) = RCT(183)*V(127)
!   B(347) = dA(183)/dV(127)
  B(347) = RCT(183)*V(123)
!   B(348) = dA(184)/dV(118)
  B(348) = RCT(184)*V(126)
!   B(349) = dA(184)/dV(126)
  B(349) = RCT(184)*V(118)
!   B(350) = dA(185)/dV(101)
  B(350) = RCT(185)*V(127)
!   B(351) = dA(185)/dV(127)
  B(351) = RCT(185)*V(101)
!   B(352) = dA(186)/dV(104)
  B(352) = 4.9e-11*V(137)
!   B(353) = dA(186)/dV(137)
  B(353) = 4.9e-11*V(104)
!   B(354) = dA(187)/dV(131)
  B(354) = RCT(187)*V(134)
!   B(355) = dA(187)/dV(134)
  B(355) = RCT(187)*V(131)
!   B(356) = dA(188)/dV(131)
  B(356) = RCT(188)*V(135)
!   B(357) = dA(188)/dV(135)
  B(357) = RCT(188)*V(131)
!   B(358) = dA(189)/dV(104)
  B(358) = RCT(189)
!   B(359) = dA(190)/dV(133)
  B(359) = RCT(190)*V(137)
!   B(360) = dA(190)/dV(137)
  B(360) = RCT(190)*V(133)
!   B(361) = dA(191)/dV(106)
  B(361) = RCT(191)*V(137)
!   B(362) = dA(191)/dV(137)
  B(362) = RCT(191)*V(106)
!   B(363) = dA(192)/dV(131)
  B(363) = RCT(192)*V(132)
!   B(364) = dA(192)/dV(132)
  B(364) = RCT(192)*V(131)
!   B(365) = dA(193)/dV(131)
  B(365) = RCT(193)*V(132)
!   B(366) = dA(193)/dV(132)
  B(366) = RCT(193)*V(131)
!   B(367) = dA(194)/dV(37)
  B(367) = RCT(194)*V(127)
!   B(368) = dA(194)/dV(127)
  B(368) = RCT(194)*V(37)
!   B(369) = dA(195)/dV(100)
  B(369) = RCT(195)*V(137)
!   B(370) = dA(195)/dV(137)
  B(370) = RCT(195)*V(100)
!   B(371) = dA(196)/dV(119)
  B(371) = RCT(196)*V(137)
!   B(372) = dA(196)/dV(137)
  B(372) = RCT(196)*V(119)
!   B(373) = dA(197)/dV(70)
  B(373) = RCT(197)*V(137)
!   B(374) = dA(197)/dV(137)
  B(374) = RCT(197)*V(70)
!   B(375) = dA(198)/dV(29)
  B(375) = RCT(198)*V(127)
!   B(376) = dA(198)/dV(127)
  B(376) = RCT(198)*V(29)
!   B(377) = dA(199)/dV(28)
  B(377) = RCT(199)*V(127)
!   B(378) = dA(199)/dV(127)
  B(378) = RCT(199)*V(28)
!   B(379) = dA(200)/dV(89)
  B(379) = 3.32e-15*V(137)
!   B(380) = dA(200)/dV(137)
  B(380) = 3.32e-15*V(89)
!   B(381) = dA(201)/dV(78)
  B(381) = 1.1e-15*V(137)
!   B(382) = dA(201)/dV(137)
  B(382) = 1.1e-15*V(78)
!   B(383) = dA(202)/dV(101)
  B(383) = RCT(202)*V(138)
!   B(384) = dA(202)/dV(138)
  B(384) = RCT(202)*V(101)
!   B(385) = dA(203)/dV(124)
  B(385) = RCT(203)*V(131)
!   B(386) = dA(203)/dV(131)
  B(386) = RCT(203)*V(124)
!   B(387) = dA(204)/dV(124)
  B(387) = RCT(204)*V(131)
!   B(388) = dA(204)/dV(131)
  B(388) = RCT(204)*V(124)
!   B(389) = dA(205)/dV(124)
  B(389) = RCT(205)*V(131)
!   B(390) = dA(205)/dV(131)
  B(390) = RCT(205)*V(124)
!   B(391) = dA(206)/dV(89)
  B(391) = 1.45e-11*V(138)
!   B(392) = dA(206)/dV(138)
  B(392) = 1.45e-11*V(89)
!   B(393) = dA(207)/dV(38)
  B(393) = RCT(207)*V(127)
!   B(394) = dA(207)/dV(127)
  B(394) = RCT(207)*V(38)
!   B(395) = dA(208)/dV(39)
  B(395) = RCT(208)*V(127)
!   B(396) = dA(208)/dV(127)
  B(396) = RCT(208)*V(39)
!   B(397) = dA(209)/dV(36)
  B(397) = RCT(209)*V(127)
!   B(398) = dA(209)/dV(127)
  B(398) = RCT(209)*V(36)
!   B(399) = dA(210)/dV(105)
  B(399) = RCT(210)*V(127)
!   B(400) = dA(210)/dV(127)
  B(400) = RCT(210)*V(105)
!   B(401) = dA(211)/dV(114)
  B(401) = RCT(211)*V(127)
!   B(402) = dA(211)/dV(127)
  B(402) = RCT(211)*V(114)
!   B(403) = dA(212)/dV(114)
  B(403) = RCT(212)*V(127)
!   B(404) = dA(212)/dV(127)
  B(404) = RCT(212)*V(114)
!   B(405) = dA(213)/dV(114)
  B(405) = RCT(213)*V(136)
!   B(406) = dA(213)/dV(136)
  B(406) = RCT(213)*V(114)
!   B(407) = dA(214)/dV(66)
  B(407) = 1e-10*V(127)
!   B(408) = dA(214)/dV(127)
  B(408) = 1e-10*V(66)
!   B(409) = dA(215)/dV(80)
  B(409) = RCT(215)
!   B(410) = dA(216)/dV(80)
  B(410) = 3e-13*V(125)
!   B(411) = dA(216)/dV(125)
  B(411) = 3e-13*V(80)
!   B(412) = dA(217)/dV(30)
  B(412) = 5e-11*V(128)
!   B(413) = dA(217)/dV(128)
  B(413) = 5e-11*V(30)
!   B(414) = dA(218)/dV(114)
  B(414) = 3.3e-10*V(138)
!   B(415) = dA(218)/dV(138)
  B(415) = 3.3e-10*V(114)
!   B(416) = dA(219)/dV(114)
  B(416) = RCT(219)*V(137)
!   B(417) = dA(219)/dV(137)
  B(417) = RCT(219)*V(114)
!   B(418) = dA(220)/dV(114)
  B(418) = 4.4e-13*V(131)
!   B(419) = dA(220)/dV(131)
  B(419) = 4.4e-13*V(114)
!   B(421) = dA(222)/dV(125)
  B(421) = RCT(222)
!   B(422) = dA(223)/dV(125)
  B(422) = RCT(223)
!   B(423) = dA(224)/dV(129)
  B(423) = RCT(224)
!   B(424) = dA(225)/dV(87)
  B(424) = RCT(225)
!   B(425) = dA(226)/dV(49)
  B(425) = RCT(226)
!   B(426) = dA(227)/dV(135)
  B(426) = RCT(227)
!   B(427) = dA(228)/dV(134)
  B(427) = RCT(228)
!   B(428) = dA(229)/dV(136)
  B(428) = RCT(229)
!   B(429) = dA(230)/dV(136)
  B(429) = RCT(230)
!   B(430) = dA(231)/dV(83)
  B(430) = RCT(231)
!   B(431) = dA(232)/dV(68)
  B(431) = RCT(232)
!   B(432) = dA(233)/dV(102)
  B(432) = RCT(233)
!   B(433) = dA(234)/dV(64)
  B(433) = RCT(234)
!   B(434) = dA(235)/dV(106)
  B(434) = RCT(235)
!   B(435) = dA(236)/dV(133)
  B(435) = RCT(236)
!   B(436) = dA(237)/dV(133)
  B(436) = RCT(237)
!   B(438) = dA(239)/dV(99)
  B(438) = RCT(239)
!   B(439) = dA(240)/dV(57)
  B(439) = RCT(240)
!   B(440) = dA(241)/dV(119)
  B(440) = RCT(241)
!   B(441) = dA(242)/dV(58)
  B(441) = RCT(242)
!   B(442) = dA(243)/dV(47)
  B(442) = RCT(243)
!   B(443) = dA(244)/dV(75)
  B(443) = RCT(244)
!   B(444) = dA(245)/dV(63)
  B(444) = RCT(245)
!   B(445) = dA(246)/dV(86)
  B(445) = RCT(246)
!   B(446) = dA(247)/dV(108)
  B(446) = RCT(247)
!   B(447) = dA(248)/dV(94)
  B(447) = RCT(248)
!   B(448) = dA(249)/dV(67)
  B(448) = RCT(249)
!   B(449) = dA(250)/dV(60)
  B(449) = RCT(250)
!   B(450) = dA(251)/dV(79)
  B(450) = RCT(251)
!   B(451) = dA(252)/dV(110)
  B(451) = RCT(252)
!   B(452) = dA(253)/dV(82)
  B(452) = RCT(253)
!   B(453) = dA(254)/dV(81)
  B(453) = RCT(254)
!   B(454) = dA(255)/dV(55)
  B(454) = RCT(255)
!   B(455) = dA(256)/dV(18)
  B(455) = RCT(256)
!   B(456) = dA(257)/dV(111)
  B(456) = RCT(257)
!   B(457) = dA(258)/dV(54)
  B(457) = RCT(258)
!   B(458) = dA(259)/dV(61)
  B(458) = RCT(259)
!   B(459) = dA(260)/dV(91)
  B(459) = RCT(260)
!   B(460) = dA(261)/dV(78)
  B(460) = RCT(261)
!   B(461) = dA(262)/dV(19)
  B(461) = RCT(262)
!   B(462) = dA(263)/dV(35)
  B(462) = RCT(263)
!   B(463) = dA(264)/dV(130)
  B(463) = RCT(264)
!   B(464) = dA(265)/dV(113)
  B(464) = RCT(265)
!   B(465) = dA(266)/dV(34)
  B(465) = RCT(266)
!   B(466) = dA(267)/dV(116)
  B(466) = RCT(267)
!   B(467) = dA(268)/dV(116)
  B(467) = RCT(268)
!   B(468) = dA(269)/dV(52)
  B(468) = RCT(269)
!   B(469) = dA(270)/dV(23)
  B(469) = RCT(270)
!   B(470) = dA(271)/dV(44)
  B(470) = RCT(271)
!   B(471) = dA(272)/dV(27)
  B(471) = RCT(272)
!   B(472) = dA(273)/dV(24)
  B(472) = RCT(273)
!   B(473) = dA(274)/dV(101)
  B(473) = RCT(274)
!   B(474) = dA(275)/dV(131)
  B(474) = RCT(275)
!   B(475) = dA(276)/dV(118)
  B(475) = RCT(276)
!   B(476) = dA(277)/dV(1)
  B(476) = RCT(277)
!   B(477) = dA(278)/dV(104)
  B(477) = RCT(278)
!   B(478) = dA(279)/dV(37)
  B(478) = RCT(279)
!   B(479) = dA(280)/dV(28)
  B(479) = RCT(280)
!   B(480) = dA(281)/dV(29)
  B(480) = RCT(281)
!   B(481) = dA(282)/dV(3)
  B(481) = RCT(282)
!   B(482) = dA(283)/dV(89)
  B(482) = RCT(283)
!   B(483) = dA(284)/dV(2)
  B(483) = RCT(284)
!   B(484) = dA(285)/dV(36)
  B(484) = RCT(285)
!   B(485) = dA(286)/dV(38)
  B(485) = RCT(286)
!   B(486) = dA(287)/dV(39)
  B(486) = RCT(287)
!   B(487) = dA(288)/dV(4)
  B(487) = RCT(288)
!   B(488) = dA(289)/dV(83)
  B(488) = RCT(289)*V(129)
!   B(489) = dA(289)/dV(129)
  B(489) = RCT(289)*V(83)
!   B(490) = dA(290)/dV(83)
  B(490) = RCT(290)
!   B(491) = dA(291)/dV(113)
  B(491) = RCT(291)*V(130)
!   B(492) = dA(291)/dV(130)
  B(492) = RCT(291)*V(113)
!   B(493) = dA(292)/dV(116)
  B(493) = RCT(292)*V(130)
!   B(494) = dA(292)/dV(130)
  B(494) = RCT(292)*V(116)
!   B(495) = dA(293)/dV(116)
  B(495) = RCT(293)*V(129)
!   B(496) = dA(293)/dV(129)
  B(496) = RCT(293)*V(116)
!   B(497) = dA(294)/dV(83)
  B(497) = RCT(294)*V(130)
!   B(498) = dA(294)/dV(130)
  B(498) = RCT(294)*V(83)
!   B(499) = dA(295)/dV(118)
  B(499) = RCT(295)*V(123)
!   B(500) = dA(295)/dV(123)
  B(500) = RCT(295)*V(118)
!   B(501) = dA(296)/dV(104)
  B(501) = RCT(296)*V(129)
!   B(502) = dA(296)/dV(129)
  B(502) = RCT(296)*V(104)
!   B(503) = dA(297)/dV(116)
  B(503) = RCT(297)*V(123)
!   B(504) = dA(297)/dV(123)
  B(504) = RCT(297)*V(116)
!   B(505) = dA(298)/dV(104)
  B(505) = RCT(298)*V(130)
!   B(506) = dA(298)/dV(130)
  B(506) = RCT(298)*V(104)
!   B(507) = dA(299)/dV(113)
  B(507) = RCT(299)*V(123)
!   B(508) = dA(299)/dV(123)
  B(508) = RCT(299)*V(113)
!   B(509) = dA(300)/dV(118)
  B(509) = RCT(300)*V(130)
!   B(510) = dA(300)/dV(130)
  B(510) = RCT(300)*V(118)
!   B(511) = dA(301)/dV(5)
  B(511) = RCT(301)
!   B(512) = dA(302)/dV(59)
  B(512) = RCT(302)*F(1)
!   B(514) = dA(303)/dV(59)
  B(514) = RCT(303)*V(125)
!   B(515) = dA(303)/dV(125)
  B(515) = RCT(303)*V(59)
!   B(516) = dA(304)/dV(20)
  B(516) = 2.3e-12*F(1)
!   B(518) = dA(305)/dV(41)
  B(518) = 4e-19*F(1)
!   B(520) = dA(306)/dV(51)
  B(520) = RCT(306)*V(129)
!   B(521) = dA(306)/dV(129)
  B(521) = RCT(306)*V(51)
!   B(522) = dA(307)/dV(46)
  B(522) = RCT(307)*V(127)
!   B(523) = dA(307)/dV(127)
  B(523) = RCT(307)*V(46)
!   B(524) = dA(308)/dV(46)
  B(524) = RCT(308)*V(126)
!   B(525) = dA(308)/dV(126)
  B(525) = RCT(308)*V(46)
!   B(526) = dA(309)/dV(46)
  B(526) = RCT(309)
!   B(527) = dA(310)/dV(105)
  B(527) = RCT(310)
!   B(528) = dA(311)/dV(51)
  B(528) = RCT(311)
!   B(529) = dA(312)/dV(40)
  B(529) = RCT(312)
!   B(530) = dA(313)/dV(77)
  B(530) = 1e-10*V(120)
!   B(531) = dA(313)/dV(120)
  B(531) = 1e-10*V(77)
!   B(532) = dA(314)/dV(77)
  B(532) = RCT(314)*V(127)
!   B(533) = dA(314)/dV(127)
  B(533) = RCT(314)*V(77)
!   B(534) = dA(315)/dV(77)
  B(534) = RCT(315)*V(138)
!   B(535) = dA(315)/dV(138)
  B(535) = RCT(315)*V(77)
!   B(536) = dA(316)/dV(77)
  B(536) = RCT(316)
!   B(537) = dA(317)/dV(69)
  B(537) = 4.9e-11*V(120)
!   B(538) = dA(317)/dV(120)
  B(538) = 4.9e-11*V(69)
!   B(539) = dA(318)/dV(69)
  B(539) = RCT(318)*V(127)
!   B(540) = dA(318)/dV(127)
  B(540) = RCT(318)*V(69)
!   B(541) = dA(319)/dV(69)
  B(541) = RCT(319)*V(138)
!   B(542) = dA(319)/dV(138)
  B(542) = RCT(319)*V(69)
!   B(543) = dA(320)/dV(33)
  B(543) = 2e-10*V(120)
!   B(544) = dA(320)/dV(120)
  B(544) = 2e-10*V(33)
!   B(545) = dA(321)/dV(33)
  B(545) = RCT(321)
!   B(546) = dA(322)/dV(43)
  B(546) = RCT(322)*V(127)
!   B(547) = dA(322)/dV(127)
  B(547) = RCT(322)*V(43)
!   B(548) = dA(323)/dV(43)
  B(548) = RCT(323)*V(138)
!   B(549) = dA(323)/dV(138)
  B(549) = RCT(323)*V(43)
!   B(550) = dA(324)/dV(43)
  B(550) = RCT(324)
!   B(551) = dA(325)/dV(42)
  B(551) = 9.1e-12*V(120)
!   B(552) = dA(325)/dV(120)
  B(552) = 9.1e-12*V(42)
!   B(553) = dA(326)/dV(42)
  B(553) = RCT(326)*V(127)
!   B(554) = dA(326)/dV(127)
  B(554) = RCT(326)*V(42)
!   B(555) = dA(327)/dV(71)
  B(555) = 2.6e-10*V(120)
!   B(556) = dA(327)/dV(120)
  B(556) = 2.6e-10*V(71)
!   B(557) = dA(328)/dV(71)
  B(557) = RCT(328)*V(127)
!   B(558) = dA(328)/dV(127)
  B(558) = RCT(328)*V(71)
!   B(559) = dA(329)/dV(71)
  B(559) = RCT(329)*V(138)
!   B(560) = dA(329)/dV(138)
  B(560) = RCT(329)*V(71)
!   B(561) = dA(330)/dV(71)
  B(561) = RCT(330)
!   B(562) = dA(331)/dV(25)
  B(562) = 1.3e-10*V(120)
!   B(563) = dA(331)/dV(120)
  B(563) = 1.3e-10*V(25)
!   B(564) = dA(332)/dV(25)
  B(564) = RCT(332)
!   B(565) = dA(333)/dV(72)
  B(565) = 1.2e-10*V(120)
!   B(566) = dA(333)/dV(120)
  B(566) = 1.2e-10*V(72)
!   B(567) = dA(334)/dV(72)
  B(567) = RCT(334)*V(127)
!   B(568) = dA(334)/dV(127)
  B(568) = RCT(334)*V(72)
!   B(569) = dA(335)/dV(72)
  B(569) = RCT(335)*V(138)
!   B(570) = dA(335)/dV(138)
  B(570) = RCT(335)*V(72)
!   B(571) = dA(336)/dV(73)
  B(571) = 4.4e-11*V(120)
!   B(572) = dA(336)/dV(120)
  B(572) = 4.4e-11*V(73)
!   B(573) = dA(337)/dV(73)
  B(573) = RCT(337)*V(127)
!   B(574) = dA(337)/dV(127)
  B(574) = RCT(337)*V(73)
!   B(575) = dA(338)/dV(73)
  B(575) = RCT(338)*V(138)
!   B(576) = dA(338)/dV(138)
  B(576) = RCT(338)*V(73)
!   B(577) = dA(339)/dV(45)
  B(577) = RCT(339)*V(127)
!   B(578) = dA(339)/dV(127)
  B(578) = RCT(339)*V(45)
!   B(579) = dA(340)/dV(45)
  B(579) = RCT(340)*V(138)
!   B(580) = dA(340)/dV(138)
  B(580) = RCT(340)*V(45)
!   B(581) = dA(341)/dV(45)
  B(581) = RCT(341)
!   B(582) = dA(342)/dV(26)
  B(582) = 5e-11*V(120)
!   B(583) = dA(342)/dV(120)
  B(583) = 5e-11*V(26)
!   B(584) = dA(343)/dV(26)
  B(584) = RCT(343)
!   B(585) = dA(344)/dV(74)
  B(585) = 5.1e-11*V(120)
!   B(586) = dA(344)/dV(120)
  B(586) = 5.1e-11*V(74)
!   B(587) = dA(345)/dV(74)
  B(587) = RCT(345)*V(127)
!   B(588) = dA(345)/dV(127)
  B(588) = RCT(345)*V(74)
!   B(589) = dA(346)/dV(74)
  B(589) = RCT(346)*V(138)
!   B(590) = dA(346)/dV(138)
  B(590) = RCT(346)*V(74)
!   B(591) = dA(347)/dV(56)
  B(591) = 1.75e-10*V(120)
!   B(592) = dA(347)/dV(120)
  B(592) = 1.75e-10*V(56)
!   B(593) = dA(348)/dV(56)
  B(593) = RCT(348)*V(127)
!   B(594) = dA(348)/dV(127)
  B(594) = RCT(348)*V(56)
!   B(595) = dA(349)/dV(56)
  B(595) = RCT(349)*V(138)
!   B(596) = dA(349)/dV(138)
  B(596) = RCT(349)*V(56)

! Construct the Jacobian terms from B's
!   JVS(1) = Jac_FULL(1,1)
  JVS(1) = - B(476)
!   JVS(2) = Jac_FULL(2,2)
  JVS(2) = - B(483)
!   JVS(3) = Jac_FULL(3,3)
  JVS(3) = - B(481)
!   JVS(4) = Jac_FULL(4,4)
  JVS(4) = - B(487)
!   JVS(5) = Jac_FULL(5,5)
  JVS(5) = - B(511)
!   JVS(6) = Jac_FULL(6,6)
  JVS(6) = 0
!   JVS(7) = Jac_FULL(6,70)
  JVS(7) = B(330)
!   JVS(8) = Jac_FULL(6,138)
  JVS(8) = B(331)
!   JVS(9) = Jac_FULL(7,2)
  JVS(9) = B(483)
!   JVS(10) = Jac_FULL(7,3)
  JVS(10) = B(481)
!   JVS(11) = Jac_FULL(7,7)
  JVS(11) = 0
!   JVS(12) = Jac_FULL(7,23)
  JVS(12) = B(316)+ B(469)
!   JVS(13) = Jac_FULL(7,24)
  JVS(13) = B(332)+ B(472)
!   JVS(14) = Jac_FULL(7,25)
  JVS(14) = 0.75*B(562)+ 2*B(564)
!   JVS(15) = Jac_FULL(7,26)
  JVS(15) = 0.6*B(582)+ 2*B(584)
!   JVS(16) = Jac_FULL(7,27)
  JVS(16) = B(334)+ B(471)
!   JVS(17) = Jac_FULL(7,28)
  JVS(17) = B(377)+ B(479)
!   JVS(18) = Jac_FULL(7,29)
  JVS(18) = B(375)+ B(480)
!   JVS(19) = Jac_FULL(7,33)
  JVS(19) = 1.6*B(543)+ 2*B(545)
!   JVS(20) = Jac_FULL(7,36)
  JVS(20) = B(397)+ B(484)
!   JVS(21) = Jac_FULL(7,37)
  JVS(21) = B(367)
!   JVS(22) = Jac_FULL(7,38)
  JVS(22) = B(393)+ B(485)
!   JVS(23) = Jac_FULL(7,39)
  JVS(23) = B(395)+ B(486)
!   JVS(24) = Jac_FULL(7,42)
  JVS(24) = 0.23*B(551)+ B(553)
!   JVS(25) = Jac_FULL(7,43)
  JVS(25) = B(546)+ B(548)+ B(550)
!   JVS(26) = Jac_FULL(7,44)
  JVS(26) = 2*B(322)+ 2*B(324)+ 2*B(470)
!   JVS(27) = Jac_FULL(7,45)
  JVS(27) = B(577)+ B(579)+ B(581)
!   JVS(28) = Jac_FULL(7,52)
  JVS(28) = B(320)
!   JVS(29) = Jac_FULL(7,56)
  JVS(29) = B(591)+ 2*B(593)+ 2*B(595)
!   JVS(30) = Jac_FULL(7,69)
  JVS(30) = 0.7*B(537)+ 2*B(539)+ 2*B(541)
!   JVS(31) = Jac_FULL(7,70)
  JVS(31) = B(330)+ B(373)
!   JVS(32) = Jac_FULL(7,71)
  JVS(32) = 0.69*B(555)+ 2*B(557)+ 2*B(559)+ 2*B(561)
!   JVS(33) = Jac_FULL(7,72)
  JVS(33) = 1.52*B(565)+ 2*B(567)+ 2*B(569)
!   JVS(34) = Jac_FULL(7,73)
  JVS(34) = 0.8*B(571)+ 2*B(573)+ 2*B(575)
!   JVS(35) = Jac_FULL(7,74)
  JVS(35) = 0.3*B(585)+ B(587)+ B(589)
!   JVS(36) = Jac_FULL(7,77)
  JVS(36) = 0.72*B(530)+ B(532)+ B(534)+ B(536)
!   JVS(37) = Jac_FULL(7,120)
  JVS(37) = B(317)+ 2*B(323)+ B(333)+ B(335)+ 0.72*B(531)+ 0.7*B(538)+ 1.6*B(544)+ 0.23*B(552)+ 0.69*B(556)+ 0.75*B(563)+ 1.52&
              &*B(566)+ 0.8*B(572)+ 0.6*B(583)+ 0.3*B(586)+ B(592)
!   JVS(38) = Jac_FULL(7,127)
  JVS(38) = B(321)+ 2*B(325)+ B(368)+ B(376)+ B(378)+ B(394)+ B(396)+ B(398)+ B(533)+ 2*B(540)+ B(547)+ B(554)+ 2*B(558)+ &
                     2*B(568)+ 2&
              &*B(574)+ B(578)+ B(588)+ 2*B(594)
!   JVS(39) = Jac_FULL(7,137)
  JVS(39) = B(374)
!   JVS(40) = Jac_FULL(7,138)
  JVS(40) = B(331)+ B(535)+ 2*B(542)+ B(549)+ 2*B(560)+ 2*B(570)+ 2*B(576)+ B(580)+ B(590)+ 2*B(596)
!   JVS(41) = Jac_FULL(8,2)
  JVS(41) = 2*B(483)
!   JVS(42) = Jac_FULL(8,3)
  JVS(42) = 3*B(481)
!   JVS(43) = Jac_FULL(8,8)
  JVS(43) = 0
!   JVS(44) = Jac_FULL(8,24)
  JVS(44) = 2*B(332)+ 2*B(472)
!   JVS(45) = Jac_FULL(8,27)
  JVS(45) = B(334)+ B(471)
!   JVS(46) = Jac_FULL(8,77)
  JVS(46) = 2*B(536)
!   JVS(47) = Jac_FULL(8,120)
  JVS(47) = 2*B(333)+ B(335)
!   JVS(48) = Jac_FULL(9,9)
  JVS(48) = 0
!   JVS(49) = Jac_FULL(9,30)
  JVS(49) = B(412)
!   JVS(50) = Jac_FULL(9,66)
  JVS(50) = 0.4*B(407)
!   JVS(51) = Jac_FULL(9,127)
  JVS(51) = 0.4*B(408)
!   JVS(52) = Jac_FULL(9,128)
  JVS(52) = B(413)
!   JVS(53) = Jac_FULL(10,10)
  JVS(53) = 0
!   JVS(54) = Jac_FULL(10,83)
  JVS(54) = 2*B(490)
!   JVS(55) = Jac_FULL(11,11)
  JVS(55) = 0
!   JVS(56) = Jac_FULL(11,83)
  JVS(56) = 2*B(490)
!   JVS(57) = Jac_FULL(12,5)
  JVS(57) = B(511)
!   JVS(58) = Jac_FULL(12,12)
  JVS(58) = 0
!   JVS(59) = Jac_FULL(13,13)
  JVS(59) = 0
!   JVS(60) = Jac_FULL(13,99)
  JVS(60) = B(109)+ B(111)+ B(308)+ B(438)
!   JVS(61) = Jac_FULL(13,120)
  JVS(61) = B(110)
!   JVS(62) = Jac_FULL(13,127)
  JVS(62) = B(112)
!   JVS(63) = Jac_FULL(13,138)
  JVS(63) = B(309)
!   JVS(64) = Jac_FULL(14,14)
  JVS(64) = 0
!   JVS(65) = Jac_FULL(14,95)
  JVS(65) = B(129)
!   JVS(66) = Jac_FULL(14,127)
  JVS(66) = B(130)
!   JVS(67) = Jac_FULL(15,15)
  JVS(67) = 0
!   JVS(68) = Jac_FULL(15,49)
  JVS(68) = B(42)+ B(44)+ B(425)
!   JVS(69) = Jac_FULL(15,120)
  JVS(69) = B(43)+ B(45)
!   JVS(70) = Jac_FULL(16,16)
  JVS(70) = 0
!   JVS(71) = Jac_FULL(16,19)
  JVS(71) = 2*B(461)
!   JVS(72) = Jac_FULL(16,25)
  JVS(72) = 0.75*B(562)
!   JVS(73) = Jac_FULL(16,26)
  JVS(73) = 0.3*B(582)
!   JVS(74) = Jac_FULL(16,42)
  JVS(74) = 0.23*B(551)
!   JVS(75) = Jac_FULL(16,44)
  JVS(75) = B(322)
!   JVS(76) = Jac_FULL(16,46)
  JVS(76) = B(524)
!   JVS(77) = Jac_FULL(16,49)
  JVS(77) = B(42)+ B(44)
!   JVS(78) = Jac_FULL(16,52)
  JVS(78) = B(318)
!   JVS(79) = Jac_FULL(16,56)
  JVS(79) = 0.66*B(591)
!   JVS(80) = Jac_FULL(16,69)
  JVS(80) = 0.35*B(537)
!   JVS(81) = Jac_FULL(16,71)
  JVS(81) = 0.69*B(555)
!   JVS(82) = Jac_FULL(16,72)
  JVS(82) = 0.76*B(565)
!   JVS(83) = Jac_FULL(16,73)
  JVS(83) = 0.82*B(571)
!   JVS(84) = Jac_FULL(16,74)
  JVS(84) = 0.3*B(585)
!   JVS(85) = Jac_FULL(16,77)
  JVS(85) = 0.17*B(530)
!   JVS(86) = Jac_FULL(16,83)
  JVS(86) = B(488)+ 3*B(490)+ 2*B(497)
!   JVS(87) = Jac_FULL(16,84)
  JVS(87) = B(94)
!   JVS(88) = Jac_FULL(16,85)
  JVS(88) = B(101)
!   JVS(89) = Jac_FULL(16,90)
  JVS(89) = B(80)+ B(90)+ B(92)
!   JVS(90) = Jac_FULL(16,96)
  JVS(90) = B(183)+ B(187)
!   JVS(91) = Jac_FULL(16,98)
  JVS(91) = B(13)
!   JVS(92) = Jac_FULL(16,99)
  JVS(92) = B(109)
!   JVS(93) = Jac_FULL(16,100)
  JVS(93) = B(135)
!   JVS(94) = Jac_FULL(16,104)
  JVS(94) = B(505)
!   JVS(95) = Jac_FULL(16,107)
  JVS(95) = B(257)+ B(261)
!   JVS(96) = Jac_FULL(16,110)
  JVS(96) = B(229)
!   JVS(97) = Jac_FULL(16,113)
  JVS(97) = B(464)+ B(491)+ B(507)
!   JVS(98) = Jac_FULL(16,116)
  JVS(98) = B(493)+ B(503)
!   JVS(99) = Jac_FULL(16,117)
  JVS(99) = B(143)
!   JVS(100) = Jac_FULL(16,118)
  JVS(100) = B(348)+ B(475)+ B(499)+ B(509)
!   JVS(101) = Jac_FULL(16,119)
  JVS(101) = B(151)
!   JVS(102) = Jac_FULL(16,120)
  JVS(102) = 2*B(5)+ B(14)+ B(34)+ B(43)+ B(45)+ B(110)+ B(319)+ B(323)+ 0.17*B(531)+ 0.35*B(538)+ 0.23*B(552)+ 0.69*B(556)+ &
                     0.75&
               &*B(563)+ 0.76*B(566)+ 0.82*B(572)+ 0.3*B(583)+ 0.3*B(586)+ 0.66*B(592)
!   JVS(103) = Jac_FULL(16,121)
  JVS(103) = B(163)
!   JVS(104) = Jac_FULL(16,122)
  JVS(104) = B(11)
!   JVS(105) = Jac_FULL(16,123)
  JVS(105) = B(500)+ B(504)+ B(508)
!   JVS(106) = Jac_FULL(16,124)
  JVS(106) = 2*B(276)+ 2*B(278)+ 2*B(279)+ B(280)+ B(291)+ B(314)+ B(385)+ 2*B(387)+ 2*B(389)
!   JVS(107) = Jac_FULL(16,125)
  JVS(107) = 2*B(6)+ 2*B(7)+ B(12)+ B(17)+ B(23)+ B(81)+ B(95)+ B(136)+ B(184)+ B(230)+ B(258)
!   JVS(108) = Jac_FULL(16,126)
  JVS(108) = 2*B(8)+ B(15)+ B(21)+ 2*B(50)+ 2*B(277)+ 2*B(338)+ B(349)+ B(525)
!   JVS(109) = Jac_FULL(16,127)
  JVS(109) = B(16)+ B(18)+ B(292)
!   JVS(110) = Jac_FULL(16,128)
  JVS(110) = B(22)+ B(24)+ B(69)
!   JVS(111) = Jac_FULL(16,129)
  JVS(111) = B(35)+ B(489)
!   JVS(112) = Jac_FULL(16,130)
  JVS(112) = B(492)+ B(494)+ 2*B(498)+ B(506)+ B(510)
!   JVS(113) = Jac_FULL(16,131)
  JVS(113) = 2*B(339)+ 2*B(340)+ 2*B(341)+ B(365)+ B(386)+ 2*B(388)+ 2*B(390)
!   JVS(114) = Jac_FULL(16,132)
  JVS(114) = B(119)+ B(315)+ B(366)
!   JVS(115) = Jac_FULL(16,133)
  JVS(115) = B(127)
!   JVS(116) = Jac_FULL(16,135)
  JVS(116) = 2*B(51)+ B(91)+ B(93)+ B(102)
!   JVS(117) = Jac_FULL(16,136)
  JVS(117) = B(70)+ B(120)+ B(128)+ B(144)+ B(152)+ B(164)+ B(188)+ B(262)+ 2*B(429)
!   JVS(118) = Jac_FULL(17,1)
  JVS(118) = B(476)
!   JVS(119) = Jac_FULL(17,17)
  JVS(119) = 0
!   JVS(120) = Jac_FULL(17,20)
  JVS(120) = B(516)
!   JVS(121) = Jac_FULL(17,34)
  JVS(121) = B(465)
!   JVS(122) = Jac_FULL(17,35)
  JVS(122) = B(462)
!   JVS(123) = Jac_FULL(17,48)
  JVS(123) = B(38)+ B(48)
!   JVS(124) = Jac_FULL(17,49)
  JVS(124) = B(425)
!   JVS(125) = Jac_FULL(17,59)
  JVS(125) = 2*B(512)
!   JVS(126) = Jac_FULL(17,64)
  JVS(126) = 0.333*B(433)
!   JVS(127) = Jac_FULL(17,66)
  JVS(127) = 0.4*B(407)
!   JVS(128) = Jac_FULL(17,68)
  JVS(128) = B(71)
!   JVS(129) = Jac_FULL(17,92)
  JVS(129) = B(191)
!   JVS(130) = Jac_FULL(17,93)
  JVS(130) = B(207)
!   JVS(131) = Jac_FULL(17,97)
  JVS(131) = B(248)
!   JVS(132) = Jac_FULL(17,101)
  JVS(132) = B(350)
!   JVS(133) = Jac_FULL(17,102)
  JVS(133) = B(73)
!   JVS(134) = Jac_FULL(17,103)
  JVS(134) = B(225)
!   JVS(135) = Jac_FULL(17,105)
  JVS(135) = B(399)
!   JVS(136) = Jac_FULL(17,109)
  JVS(136) = B(265)
!   JVS(137) = Jac_FULL(17,112)
  JVS(137) = B(235)
!   JVS(138) = Jac_FULL(17,114)
  JVS(138) = B(401)+ B(403)+ B(414)+ B(416)
!   JVS(139) = Jac_FULL(17,115)
  JVS(139) = B(199)
!   JVS(140) = Jac_FULL(17,117)
  JVS(140) = B(141)
!   JVS(141) = Jac_FULL(17,121)
  JVS(141) = B(157)+ B(159)
!   JVS(142) = Jac_FULL(17,122)
  JVS(142) = B(29)
!   JVS(143) = Jac_FULL(17,127)
  JVS(143) = B(72)+ B(74)+ B(351)+ B(400)+ B(402)+ B(404)+ 0.4*B(408)
!   JVS(144) = Jac_FULL(17,128)
  JVS(144) = B(30)+ B(63)+ B(158)+ B(287)
!   JVS(145) = Jac_FULL(17,132)
  JVS(145) = B(117)
!   JVS(146) = Jac_FULL(17,134)
  JVS(146) = B(49)+ B(64)+ B(118)+ B(142)+ B(160)+ B(192)+ B(200)+ B(208)+ B(226)+ B(236)+ B(249)+ B(266)+ B(427)
!   JVS(147) = Jac_FULL(17,137)
  JVS(147) = B(417)
!   JVS(148) = Jac_FULL(17,138)
  JVS(148) = B(288)+ B(415)
!   JVS(149) = Jac_FULL(18,18)
  JVS(149) = - B(455)
!   JVS(150) = Jac_FULL(18,55)
  JVS(150) = 0.8*B(250)
!   JVS(151) = Jac_FULL(18,127)
  JVS(151) = 0.8*B(251)
!   JVS(152) = Jac_FULL(19,19)
  JVS(152) = - B(282)- B(461)
!   JVS(153) = Jac_FULL(19,124)
  JVS(153) = B(281)
!   JVS(154) = Jac_FULL(20,20)
  JVS(154) = - B(516)
!   JVS(155) = Jac_FULL(20,46)
  JVS(155) = B(526)
!   JVS(156) = Jac_FULL(21,21)
  JVS(156) = - B(133)
!   JVS(157) = Jac_FULL(21,127)
  JVS(157) = - B(134)
!   JVS(158) = Jac_FULL(22,22)
  JVS(158) = - B(219)
!   JVS(159) = Jac_FULL(22,127)
  JVS(159) = - B(220)
!   JVS(160) = Jac_FULL(23,23)
  JVS(160) = - B(316)- B(469)
!   JVS(161) = Jac_FULL(23,120)
  JVS(161) = - B(317)
!   JVS(162) = Jac_FULL(24,24)
  JVS(162) = - B(332)- B(472)
!   JVS(163) = Jac_FULL(24,120)
  JVS(163) = - B(333)
!   JVS(164) = Jac_FULL(25,25)
  JVS(164) = - 0.75*B(562)- B(564)
!   JVS(165) = Jac_FULL(25,120)
  JVS(165) = - 0.75*B(563)
!   JVS(166) = Jac_FULL(26,26)
  JVS(166) = - 0.3*B(582)- B(584)
!   JVS(167) = Jac_FULL(26,120)
  JVS(167) = - 0.3*B(583)
!   JVS(168) = Jac_FULL(27,27)
  JVS(168) = - B(334)- B(471)
!   JVS(169) = Jac_FULL(27,120)
  JVS(169) = - B(335)
!   JVS(170) = Jac_FULL(28,28)
  JVS(170) = - B(377)- B(479)
!   JVS(171) = Jac_FULL(28,127)
  JVS(171) = - B(378)
!   JVS(172) = Jac_FULL(29,29)
  JVS(172) = - B(375)- B(480)
!   JVS(173) = Jac_FULL(29,127)
  JVS(173) = - B(376)
!   JVS(174) = Jac_FULL(30,30)
  JVS(174) = - B(412)
!   JVS(175) = Jac_FULL(30,80)
  JVS(175) = B(410)
!   JVS(176) = Jac_FULL(30,125)
  JVS(176) = B(411)
!   JVS(177) = Jac_FULL(30,128)
  JVS(177) = - B(413)
!   JVS(178) = Jac_FULL(31,31)
  JVS(178) = - B(78)
!   JVS(179) = Jac_FULL(31,127)
  JVS(179) = - B(79)
!   JVS(180) = Jac_FULL(32,32)
  JVS(180) = - B(181)
!   JVS(181) = Jac_FULL(32,127)
  JVS(181) = - B(182)
!   JVS(182) = Jac_FULL(33,33)
  JVS(182) = - 0.8*B(543)- B(545)
!   JVS(183) = Jac_FULL(33,120)
  JVS(183) = - 0.8*B(544)
!   JVS(184) = Jac_FULL(34,34)
  JVS(184) = - B(465)
!   JVS(185) = Jac_FULL(34,83)
  JVS(185) = B(497)
!   JVS(186) = Jac_FULL(34,130)
  JVS(186) = B(498)
!   JVS(187) = Jac_FULL(35,35)
  JVS(187) = - B(462)
!   JVS(188) = Jac_FULL(35,124)
  JVS(188) = B(280)+ B(385)
!   JVS(189) = Jac_FULL(35,131)
  JVS(189) = B(386)
!   JVS(190) = Jac_FULL(36,36)
  JVS(190) = - B(397)- B(484)
!   JVS(191) = Jac_FULL(36,127)
  JVS(191) = - B(398)
!   JVS(192) = Jac_FULL(37,37)
  JVS(192) = - B(367)- B(478)
!   JVS(193) = Jac_FULL(37,127)
  JVS(193) = - B(368)
!   JVS(194) = Jac_FULL(38,38)
  JVS(194) = - B(393)- B(485)
!   JVS(195) = Jac_FULL(38,127)
  JVS(195) = - B(394)
!   JVS(196) = Jac_FULL(39,39)
  JVS(196) = - B(395)- B(486)
!   JVS(197) = Jac_FULL(39,127)
  JVS(197) = - B(396)
!   JVS(198) = Jac_FULL(40,40)
  JVS(198) = - B(529)
!   JVS(199) = Jac_FULL(40,51)
  JVS(199) = B(520)
!   JVS(200) = Jac_FULL(40,129)
  JVS(200) = B(521)
!   JVS(201) = Jac_FULL(41,41)
  JVS(201) = - B(518)
!   JVS(202) = Jac_FULL(41,46)
  JVS(202) = B(522)
!   JVS(203) = Jac_FULL(41,127)
  JVS(203) = B(523)
!   JVS(204) = Jac_FULL(42,42)
  JVS(204) = - 0.23*B(551)- B(553)
!   JVS(205) = Jac_FULL(42,120)
  JVS(205) = - 0.23*B(552)
!   JVS(206) = Jac_FULL(42,127)
  JVS(206) = - B(554)
!   JVS(207) = Jac_FULL(43,43)
  JVS(207) = - B(546)- B(548)- B(550)
!   JVS(208) = Jac_FULL(43,127)
  JVS(208) = - B(547)
!   JVS(209) = Jac_FULL(43,138)
  JVS(209) = - B(549)
!   JVS(210) = Jac_FULL(44,44)
  JVS(210) = - B(322)- B(324)- B(470)
!   JVS(211) = Jac_FULL(44,120)
  JVS(211) = - B(323)
!   JVS(212) = Jac_FULL(44,127)
  JVS(212) = - B(325)
!   JVS(213) = Jac_FULL(45,45)
  JVS(213) = - B(577)- B(579)- B(581)
!   JVS(214) = Jac_FULL(45,127)
  JVS(214) = - B(578)
!   JVS(215) = Jac_FULL(45,138)
  JVS(215) = - B(580)
!   JVS(216) = Jac_FULL(46,46)
  JVS(216) = - B(522)- B(524)- B(526)
!   JVS(217) = Jac_FULL(46,126)
  JVS(217) = - B(525)
!   JVS(218) = Jac_FULL(46,127)
  JVS(218) = - B(523)
!   JVS(219) = Jac_FULL(47,47)
  JVS(219) = - B(174)- B(442)
!   JVS(220) = Jac_FULL(47,91)
  JVS(220) = B(272)
!   JVS(221) = Jac_FULL(47,127)
  JVS(221) = - B(175)+ B(273)
!   JVS(222) = Jac_FULL(48,48)
  JVS(222) = - B(38)- B(48)- B(54)
!   JVS(223) = Jac_FULL(48,134)
  JVS(223) = - B(49)+ B(427)
!   JVS(224) = Jac_FULL(48,135)
  JVS(224) = - B(55)
!   JVS(225) = Jac_FULL(49,48)
  JVS(225) = B(54)
!   JVS(226) = Jac_FULL(49,49)
  JVS(226) = - B(42)- B(44)- B(425)
!   JVS(227) = Jac_FULL(49,90)
  JVS(227) = B(90)
!   JVS(228) = Jac_FULL(49,120)
  JVS(228) = - B(43)- B(45)
!   JVS(229) = Jac_FULL(49,134)
  JVS(229) = 0
!   JVS(230) = Jac_FULL(49,135)
  JVS(230) = B(55)+ B(91)
!   JVS(231) = Jac_FULL(50,50)
  JVS(231) = - B(105)
!   JVS(232) = Jac_FULL(50,53)
  JVS(232) = B(99)
!   JVS(233) = Jac_FULL(50,85)
  JVS(233) = B(100)
!   JVS(234) = Jac_FULL(50,127)
  JVS(234) = - B(106)
!   JVS(235) = Jac_FULL(51,40)
  JVS(235) = B(529)
!   JVS(236) = Jac_FULL(51,51)
  JVS(236) = - B(520)- B(528)
!   JVS(237) = Jac_FULL(51,105)
  JVS(237) = B(399)
!   JVS(238) = Jac_FULL(51,127)
  JVS(238) = B(400)
!   JVS(239) = Jac_FULL(51,129)
  JVS(239) = - B(521)
!   JVS(240) = Jac_FULL(52,52)
  JVS(240) = - B(318)- B(320)- B(468)
!   JVS(241) = Jac_FULL(52,120)
  JVS(241) = - B(319)
!   JVS(242) = Jac_FULL(52,127)
  JVS(242) = - B(321)
!   JVS(243) = Jac_FULL(53,50)
  JVS(243) = B(105)
!   JVS(244) = Jac_FULL(53,53)
  JVS(244) = - B(99)- B(103)
!   JVS(245) = Jac_FULL(53,84)
  JVS(245) = B(96)
!   JVS(246) = Jac_FULL(53,85)
  JVS(246) = - B(100)
!   JVS(247) = Jac_FULL(53,127)
  JVS(247) = - B(104)+ B(106)
!   JVS(248) = Jac_FULL(54,54)
  JVS(248) = - B(254)- B(256)- B(457)
!   JVS(249) = Jac_FULL(54,112)
  JVS(249) = B(237)
!   JVS(250) = Jac_FULL(54,127)
  JVS(250) = - B(255)
!   JVS(251) = Jac_FULL(54,135)
  JVS(251) = B(238)
!   JVS(252) = Jac_FULL(55,55)
  JVS(252) = - B(250)- B(454)
!   JVS(253) = Jac_FULL(55,97)
  JVS(253) = B(246)
!   JVS(254) = Jac_FULL(55,127)
  JVS(254) = - B(251)
!   JVS(255) = Jac_FULL(55,128)
  JVS(255) = B(247)
!   JVS(256) = Jac_FULL(56,56)
  JVS(256) = - 0.66*B(591)- B(593)- B(595)
!   JVS(257) = Jac_FULL(56,120)
  JVS(257) = - 0.66*B(592)
!   JVS(258) = Jac_FULL(56,127)
  JVS(258) = - B(594)
!   JVS(259) = Jac_FULL(56,138)
  JVS(259) = - B(596)
!   JVS(260) = Jac_FULL(57,57)
  JVS(260) = - B(147)- B(439)
!   JVS(261) = Jac_FULL(57,117)
  JVS(261) = B(139)
!   JVS(262) = Jac_FULL(57,127)
  JVS(262) = - B(148)
!   JVS(263) = Jac_FULL(57,128)
  JVS(263) = B(140)
!   JVS(264) = Jac_FULL(58,58)
  JVS(264) = - B(172)- B(441)
!   JVS(265) = Jac_FULL(58,121)
  JVS(265) = B(155)
!   JVS(266) = Jac_FULL(58,127)
  JVS(266) = - B(173)
!   JVS(267) = Jac_FULL(58,128)
  JVS(267) = B(156)
!   JVS(268) = Jac_FULL(59,20)
  JVS(268) = B(516)
!   JVS(269) = Jac_FULL(59,41)
  JVS(269) = B(518)
!   JVS(270) = Jac_FULL(59,46)
  JVS(270) = B(524)
!   JVS(271) = Jac_FULL(59,59)
  JVS(271) = - B(512)- B(514)
!   JVS(272) = Jac_FULL(59,105)
  JVS(272) = B(527)
!   JVS(273) = Jac_FULL(59,125)
  JVS(273) = - B(515)
!   JVS(274) = Jac_FULL(59,126)
  JVS(274) = B(525)
!   JVS(275) = Jac_FULL(59,127)
  JVS(275) = 0
!   JVS(276) = Jac_FULL(60,60)
  JVS(276) = - B(217)- B(449)
!   JVS(277) = Jac_FULL(60,92)
  JVS(277) = 0.04*B(191)
!   JVS(278) = Jac_FULL(60,127)
  JVS(278) = - B(218)
!   JVS(279) = Jac_FULL(60,134)
  JVS(279) = 0.04*B(192)
!   JVS(280) = Jac_FULL(61,61)
  JVS(280) = - B(270)- B(458)
!   JVS(281) = Jac_FULL(61,109)
  JVS(281) = B(263)
!   JVS(282) = Jac_FULL(61,127)
  JVS(282) = - B(271)
!   JVS(283) = Jac_FULL(61,128)
  JVS(283) = B(264)
!   JVS(284) = Jac_FULL(62,62)
  JVS(284) = - B(201)
!   JVS(285) = Jac_FULL(62,115)
  JVS(285) = B(197)
!   JVS(286) = Jac_FULL(62,127)
  JVS(286) = - B(202)
!   JVS(287) = Jac_FULL(62,128)
  JVS(287) = B(198)
!   JVS(288) = Jac_FULL(63,63)
  JVS(288) = - B(195)- B(444)
!   JVS(289) = Jac_FULL(63,92)
  JVS(289) = B(189)
!   JVS(290) = Jac_FULL(63,127)
  JVS(290) = - B(196)
!   JVS(291) = Jac_FULL(63,128)
  JVS(291) = B(190)
!   JVS(292) = Jac_FULL(64,64)
  JVS(292) = - B(75)- B(76)- B(433)
!   JVS(293) = Jac_FULL(64,127)
  JVS(293) = - B(77)
!   JVS(294) = Jac_FULL(64,128)
  JVS(294) = B(67)
!   JVS(295) = Jac_FULL(64,135)
  JVS(295) = B(68)
!   JVS(296) = Jac_FULL(65,65)
  JVS(296) = - B(153)
!   JVS(297) = Jac_FULL(65,117)
  JVS(297) = 0.18*B(169)
!   JVS(298) = Jac_FULL(65,121)
  JVS(298) = B(157)+ B(167)+ 0.18*B(170)
!   JVS(299) = Jac_FULL(65,127)
  JVS(299) = - B(154)
!   JVS(300) = Jac_FULL(65,128)
  JVS(300) = B(158)
!   JVS(301) = Jac_FULL(65,132)
  JVS(301) = B(168)
!   JVS(302) = Jac_FULL(66,66)
  JVS(302) = - B(407)
!   JVS(303) = Jac_FULL(66,114)
  JVS(303) = B(403)+ B(418)
!   JVS(304) = Jac_FULL(66,127)
  JVS(304) = B(404)- B(408)
!   JVS(305) = Jac_FULL(66,131)
  JVS(305) = B(419)
!   JVS(306) = Jac_FULL(67,67)
  JVS(306) = - B(211)- B(448)
!   JVS(307) = Jac_FULL(67,93)
  JVS(307) = B(205)
!   JVS(308) = Jac_FULL(67,127)
  JVS(308) = - B(212)
!   JVS(309) = Jac_FULL(67,128)
  JVS(309) = B(206)
!   JVS(310) = Jac_FULL(68,68)
  JVS(310) = - B(71)- B(431)
!   JVS(311) = Jac_FULL(68,85)
  JVS(311) = B(101)
!   JVS(312) = Jac_FULL(68,127)
  JVS(312) = B(61)- B(72)
!   JVS(313) = Jac_FULL(68,134)
  JVS(313) = B(62)
!   JVS(314) = Jac_FULL(68,135)
  JVS(314) = B(102)
!   JVS(315) = Jac_FULL(69,69)
  JVS(315) = - 0.35*B(537)- B(539)- B(541)
!   JVS(316) = Jac_FULL(69,120)
  JVS(316) = - 0.35*B(538)
!   JVS(317) = Jac_FULL(69,127)
  JVS(317) = - B(540)
!   JVS(318) = Jac_FULL(69,138)
  JVS(318) = - B(542)
!   JVS(319) = Jac_FULL(70,70)
  JVS(319) = - B(179)- B(330)- B(373)
!   JVS(320) = Jac_FULL(70,127)
  JVS(320) = - B(180)
!   JVS(321) = Jac_FULL(70,137)
  JVS(321) = - B(374)
!   JVS(322) = Jac_FULL(70,138)
  JVS(322) = - B(331)
!   JVS(323) = Jac_FULL(71,71)
  JVS(323) = - 0.69*B(555)- B(557)- B(559)- B(561)
!   JVS(324) = Jac_FULL(71,120)
  JVS(324) = - 0.69*B(556)
!   JVS(325) = Jac_FULL(71,127)
  JVS(325) = - B(558)
!   JVS(326) = Jac_FULL(71,138)
  JVS(326) = - B(560)
!   JVS(327) = Jac_FULL(72,72)
  JVS(327) = - 0.76*B(565)- B(567)- B(569)
!   JVS(328) = Jac_FULL(72,120)
  JVS(328) = - 0.76*B(566)
!   JVS(329) = Jac_FULL(72,127)
  JVS(329) = - B(568)
!   JVS(330) = Jac_FULL(72,138)
  JVS(330) = - B(570)
!   JVS(331) = Jac_FULL(73,73)
  JVS(331) = - 0.82*B(571)- B(573)- B(575)
!   JVS(332) = Jac_FULL(73,120)
  JVS(332) = - 0.82*B(572)
!   JVS(333) = Jac_FULL(73,127)
  JVS(333) = - B(574)
!   JVS(334) = Jac_FULL(73,138)
  JVS(334) = - B(576)
!   JVS(335) = Jac_FULL(74,74)
  JVS(335) = - 0.3*B(585)- B(587)- B(589)
!   JVS(336) = Jac_FULL(74,120)
  JVS(336) = - 0.3*B(586)
!   JVS(337) = Jac_FULL(74,127)
  JVS(337) = - B(588)
!   JVS(338) = Jac_FULL(74,138)
  JVS(338) = - B(590)
!   JVS(339) = Jac_FULL(75,75)
  JVS(339) = - B(176)- B(178)- B(443)
!   JVS(340) = Jac_FULL(75,121)
  JVS(340) = B(161)
!   JVS(341) = Jac_FULL(75,127)
  JVS(341) = - B(177)
!   JVS(342) = Jac_FULL(75,135)
  JVS(342) = B(162)
!   JVS(343) = Jac_FULL(76,76)
  JVS(343) = - B(131)
!   JVS(344) = Jac_FULL(76,96)
  JVS(344) = 0.22*B(183)
!   JVS(345) = Jac_FULL(76,100)
  JVS(345) = 0.23125*B(135)
!   JVS(346) = Jac_FULL(76,107)
  JVS(346) = 0.28*B(257)
!   JVS(347) = Jac_FULL(76,110)
  JVS(347) = 0.45*B(229)
!   JVS(348) = Jac_FULL(76,125)
  JVS(348) = 0.23125*B(136)+ 0.22*B(184)+ 0.45*B(230)+ 0.28*B(258)
!   JVS(349) = Jac_FULL(76,127)
  JVS(349) = - B(132)
!   JVS(350) = Jac_FULL(77,77)
  JVS(350) = - 0.72*B(530)- B(532)- B(534)- B(536)
!   JVS(351) = Jac_FULL(77,120)
  JVS(351) = - 0.72*B(531)
!   JVS(352) = Jac_FULL(77,127)
  JVS(352) = - B(533)
!   JVS(353) = Jac_FULL(77,138)
  JVS(353) = - B(535)
!   JVS(354) = Jac_FULL(78,78)
  JVS(354) = - B(381)- B(460)
!   JVS(355) = Jac_FULL(78,89)
  JVS(355) = B(391)
!   JVS(356) = Jac_FULL(78,113)
  JVS(356) = B(491)
!   JVS(357) = Jac_FULL(78,116)
  JVS(357) = B(306)+ B(493)
!   JVS(358) = Jac_FULL(78,124)
  JVS(358) = B(278)
!   JVS(359) = Jac_FULL(78,130)
  JVS(359) = B(492)+ B(494)
!   JVS(360) = Jac_FULL(78,137)
  JVS(360) = - B(382)
!   JVS(361) = Jac_FULL(78,138)
  JVS(361) = B(307)+ B(392)
!   JVS(362) = Jac_FULL(79,79)
  JVS(362) = - B(227)- B(450)
!   JVS(363) = Jac_FULL(79,103)
  JVS(363) = B(223)
!   JVS(364) = Jac_FULL(79,127)
  JVS(364) = - B(228)
!   JVS(365) = Jac_FULL(79,128)
  JVS(365) = B(224)
!   JVS(366) = Jac_FULL(80,80)
  JVS(366) = - B(409)- B(410)
!   JVS(367) = Jac_FULL(80,114)
  JVS(367) = B(401)+ B(405)+ B(414)+ B(416)
!   JVS(368) = Jac_FULL(80,125)
  JVS(368) = - B(411)
!   JVS(369) = Jac_FULL(80,127)
  JVS(369) = B(402)
!   JVS(370) = Jac_FULL(80,136)
  JVS(370) = B(406)
!   JVS(371) = Jac_FULL(80,137)
  JVS(371) = B(417)
!   JVS(372) = Jac_FULL(80,138)
  JVS(372) = B(415)
!   JVS(373) = Jac_FULL(81,79)
  JVS(373) = 0.85*B(227)+ 0.67*B(450)
!   JVS(374) = Jac_FULL(81,81)
  JVS(374) = - B(244)- B(453)
!   JVS(375) = Jac_FULL(81,103)
  JVS(375) = 0.88*B(221)+ 0.56*B(225)
!   JVS(376) = Jac_FULL(81,111)
  JVS(376) = B(252)+ 0.67*B(456)
!   JVS(377) = Jac_FULL(81,127)
  JVS(377) = 0.85*B(228)- B(245)+ B(253)
!   JVS(378) = Jac_FULL(81,128)
  JVS(378) = 0
!   JVS(379) = Jac_FULL(81,132)
  JVS(379) = 0.88*B(222)
!   JVS(380) = Jac_FULL(81,134)
  JVS(380) = 0.56*B(226)
!   JVS(381) = Jac_FULL(82,82)
  JVS(381) = - B(242)- B(452)
!   JVS(382) = Jac_FULL(82,112)
  JVS(382) = B(233)
!   JVS(383) = Jac_FULL(82,127)
  JVS(383) = - B(243)
!   JVS(384) = Jac_FULL(82,128)
  JVS(384) = B(234)
!   JVS(385) = Jac_FULL(83,83)
  JVS(385) = - B(60)- B(430)- B(488)- B(490)- B(497)
!   JVS(386) = Jac_FULL(83,129)
  JVS(386) = - B(489)
!   JVS(387) = Jac_FULL(83,130)
  JVS(387) = - B(498)
!   JVS(388) = Jac_FULL(83,135)
  JVS(388) = B(58)
!   JVS(389) = Jac_FULL(83,136)
  JVS(389) = B(59)
!   JVS(390) = Jac_FULL(84,84)
  JVS(390) = - B(94)- B(96)
!   JVS(391) = Jac_FULL(84,90)
  JVS(391) = B(80)+ B(82)+ B(92)
!   JVS(392) = Jac_FULL(84,125)
  JVS(392) = B(81)- B(95)
!   JVS(393) = Jac_FULL(84,128)
  JVS(393) = B(83)
!   JVS(394) = Jac_FULL(84,135)
  JVS(394) = B(93)
!   JVS(395) = Jac_FULL(85,53)
  JVS(395) = - B(99)+ B(103)
!   JVS(396) = Jac_FULL(85,84)
  JVS(396) = 0
!   JVS(397) = Jac_FULL(85,85)
  JVS(397) = - B(97)- B(100)- B(101)- B(107)
!   JVS(398) = Jac_FULL(85,90)
  JVS(398) = B(84)
!   JVS(399) = Jac_FULL(85,125)
  JVS(399) = 0
!   JVS(400) = Jac_FULL(85,127)
  JVS(400) = - B(98)+ B(104)
!   JVS(401) = Jac_FULL(85,128)
  JVS(401) = B(85)
!   JVS(402) = Jac_FULL(85,135)
  JVS(402) = - B(102)
!   JVS(403) = Jac_FULL(86,60)
  JVS(403) = B(217)+ B(449)
!   JVS(404) = Jac_FULL(86,63)
  JVS(404) = 0.7*B(195)+ B(444)
!   JVS(405) = Jac_FULL(86,86)
  JVS(405) = - B(203)- B(445)
!   JVS(406) = Jac_FULL(86,92)
  JVS(406) = 0.96*B(191)+ B(193)
!   JVS(407) = Jac_FULL(86,127)
  JVS(407) = 0.7*B(196)- B(204)+ B(218)
!   JVS(408) = Jac_FULL(86,128)
  JVS(408) = 0
!   JVS(409) = Jac_FULL(86,132)
  JVS(409) = B(194)
!   JVS(410) = Jac_FULL(86,134)
  JVS(410) = 0.96*B(192)
!   JVS(411) = Jac_FULL(87,87)
  JVS(411) = - B(36)- B(289)- B(424)
!   JVS(412) = Jac_FULL(87,100)
  JVS(412) = 0.13875*B(135)
!   JVS(413) = Jac_FULL(87,107)
  JVS(413) = 0.09*B(257)
!   JVS(414) = Jac_FULL(87,125)
  JVS(414) = 0.13875*B(136)+ 0.09*B(258)
!   JVS(415) = Jac_FULL(87,127)
  JVS(415) = - B(37)
!   JVS(416) = Jac_FULL(87,128)
  JVS(416) = B(33)
!   JVS(417) = Jac_FULL(87,138)
  JVS(417) = - B(290)
!   JVS(418) = Jac_FULL(88,88)
  JVS(418) = - B(113)
!   JVS(419) = Jac_FULL(88,92)
  JVS(419) = 0.2*B(193)
!   JVS(420) = Jac_FULL(88,93)
  JVS(420) = 0.5*B(209)
!   JVS(421) = Jac_FULL(88,96)
  JVS(421) = 0.03*B(183)
!   JVS(422) = Jac_FULL(88,103)
  JVS(422) = 0.18*B(221)
!   JVS(423) = Jac_FULL(88,109)
  JVS(423) = 0.25*B(267)
!   JVS(424) = Jac_FULL(88,112)
  JVS(424) = 0.25*B(239)
!   JVS(425) = Jac_FULL(88,117)
  JVS(425) = 0.25*B(145)
!   JVS(426) = Jac_FULL(88,125)
  JVS(426) = 0.03*B(184)
!   JVS(427) = Jac_FULL(88,127)
  JVS(427) = - B(114)
!   JVS(428) = Jac_FULL(88,132)
  JVS(428) = B(122)+ 0.25*B(146)+ 0.2*B(194)+ 0.5*B(210)+ 0.18*B(222)+ 0.25*B(240)+ 0.25*B(268)
!   JVS(429) = Jac_FULL(89,78)
  JVS(429) = B(381)
!   JVS(430) = Jac_FULL(89,89)
  JVS(430) = - B(379)- B(391)- B(482)
!   JVS(431) = Jac_FULL(89,101)
  JVS(431) = B(383)
!   JVS(432) = Jac_FULL(89,104)
  JVS(432) = B(505)
!   JVS(433) = Jac_FULL(89,113)
  JVS(433) = B(507)
!   JVS(434) = Jac_FULL(89,116)
  JVS(434) = B(503)
!   JVS(435) = Jac_FULL(89,118)
  JVS(435) = B(509)
!   JVS(436) = Jac_FULL(89,123)
  JVS(436) = B(504)+ B(508)
!   JVS(437) = Jac_FULL(89,124)
  JVS(437) = B(389)
!   JVS(438) = Jac_FULL(89,130)
  JVS(438) = B(506)+ B(510)
!   JVS(439) = Jac_FULL(89,131)
  JVS(439) = B(390)
!   JVS(440) = Jac_FULL(89,137)
  JVS(440) = - B(380)+ B(382)
!   JVS(441) = Jac_FULL(89,138)
  JVS(441) = B(384)- B(392)
!   JVS(442) = Jac_FULL(90,31)
  JVS(442) = B(78)
!   JVS(443) = Jac_FULL(90,84)
  JVS(443) = B(94)
!   JVS(444) = Jac_FULL(90,90)
  JVS(444) = - B(80)- B(82)- B(84)- B(86)- B(88)- B(90)- B(92)
!   JVS(445) = Jac_FULL(90,125)
  JVS(445) = - B(81)+ B(95)
!   JVS(446) = Jac_FULL(90,127)
  JVS(446) = B(79)
!   JVS(447) = Jac_FULL(90,128)
  JVS(447) = - B(83)- B(85)
!   JVS(448) = Jac_FULL(90,134)
  JVS(448) = - B(87)- B(89)
!   JVS(449) = Jac_FULL(90,135)
  JVS(449) = - B(91)- B(93)
!   JVS(450) = Jac_FULL(91,91)
  JVS(450) = - B(272)- B(459)
!   JVS(451) = Jac_FULL(91,107)
  JVS(451) = B(261)
!   JVS(452) = Jac_FULL(91,109)
  JVS(452) = 0.044*B(265)
!   JVS(453) = Jac_FULL(91,127)
  JVS(453) = - B(273)
!   JVS(454) = Jac_FULL(91,134)
  JVS(454) = 0.044*B(266)
!   JVS(455) = Jac_FULL(91,136)
  JVS(455) = B(262)
!   JVS(456) = Jac_FULL(92,32)
  JVS(456) = 0.82*B(181)
!   JVS(457) = Jac_FULL(92,63)
  JVS(457) = 0.3*B(195)
!   JVS(458) = Jac_FULL(92,92)
  JVS(458) = - B(189)- B(191)- B(193)
!   JVS(459) = Jac_FULL(92,127)
  JVS(459) = 0.82*B(182)+ 0.3*B(196)
!   JVS(460) = Jac_FULL(92,128)
  JVS(460) = - B(190)
!   JVS(461) = Jac_FULL(92,132)
  JVS(461) = - B(194)
!   JVS(462) = Jac_FULL(92,134)
  JVS(462) = - B(192)
!   JVS(463) = Jac_FULL(93,67)
  JVS(463) = 0.3*B(211)
!   JVS(464) = Jac_FULL(93,86)
  JVS(464) = B(203)
!   JVS(465) = Jac_FULL(93,92)
  JVS(465) = 0
!   JVS(466) = Jac_FULL(93,93)
  JVS(466) = - B(205)- B(207)- B(209)
!   JVS(467) = Jac_FULL(93,127)
  JVS(467) = B(204)+ 0.3*B(212)
!   JVS(468) = Jac_FULL(93,128)
  JVS(468) = - B(206)
!   JVS(469) = Jac_FULL(93,132)
  JVS(469) = - B(210)
!   JVS(470) = Jac_FULL(93,134)
  JVS(470) = - B(208)
!   JVS(471) = Jac_FULL(94,67)
  JVS(471) = 0.7*B(211)
!   JVS(472) = Jac_FULL(94,82)
  JVS(472) = 0.5*B(452)
!   JVS(473) = Jac_FULL(94,93)
  JVS(473) = 0.5*B(209)
!   JVS(474) = Jac_FULL(94,94)
  JVS(474) = - B(215)- B(447)
!   JVS(475) = Jac_FULL(94,96)
  JVS(475) = 0.04*B(183)
!   JVS(476) = Jac_FULL(94,108)
  JVS(476) = B(213)
!   JVS(477) = Jac_FULL(94,109)
  JVS(477) = 0.25*B(267)
!   JVS(478) = Jac_FULL(94,110)
  JVS(478) = 0.9*B(229)
!   JVS(479) = Jac_FULL(94,112)
  JVS(479) = 0.5*B(235)+ 0.5*B(239)+ B(241)
!   JVS(480) = Jac_FULL(94,125)
  JVS(480) = 0.04*B(184)+ 0.9*B(230)
!   JVS(481) = Jac_FULL(94,127)
  JVS(481) = 0.7*B(212)+ B(214)- B(216)
!   JVS(482) = Jac_FULL(94,128)
  JVS(482) = 0
!   JVS(483) = Jac_FULL(94,132)
  JVS(483) = 0.5*B(210)+ 0.5*B(240)+ 0.25*B(268)
!   JVS(484) = Jac_FULL(94,134)
  JVS(484) = 0.5*B(236)
!   JVS(485) = Jac_FULL(95,46)
  JVS(485) = B(524)+ B(526)
!   JVS(486) = Jac_FULL(95,47)
  JVS(486) = B(174)+ B(442)
!   JVS(487) = Jac_FULL(95,75)
  JVS(487) = B(176)
!   JVS(488) = Jac_FULL(95,82)
  JVS(488) = 0.25*B(452)
!   JVS(489) = Jac_FULL(95,91)
  JVS(489) = 0
!   JVS(490) = Jac_FULL(95,94)
  JVS(490) = B(215)+ B(447)
!   JVS(491) = Jac_FULL(95,95)
  JVS(491) = - B(129)
!   JVS(492) = Jac_FULL(95,96)
  JVS(492) = 0.31*B(183)
!   JVS(493) = Jac_FULL(95,99)
  JVS(493) = B(438)
!   JVS(494) = Jac_FULL(95,100)
  JVS(494) = 0.63*B(135)
!   JVS(495) = Jac_FULL(95,107)
  JVS(495) = 0.14*B(257)
!   JVS(496) = Jac_FULL(95,108)
  JVS(496) = 0
!   JVS(497) = Jac_FULL(95,109)
  JVS(497) = 0
!   JVS(498) = Jac_FULL(95,110)
  JVS(498) = 0.22*B(229)+ B(451)
!   JVS(499) = Jac_FULL(95,112)
  JVS(499) = 0.25*B(235)+ 0.125*B(239)+ 0.5*B(241)
!   JVS(500) = Jac_FULL(95,119)
  JVS(500) = B(440)
!   JVS(501) = Jac_FULL(95,121)
  JVS(501) = 0
!   JVS(502) = Jac_FULL(95,125)
  JVS(502) = 0.63*B(136)+ 0.31*B(184)+ 0.22*B(230)+ 0.14*B(258)
!   JVS(503) = Jac_FULL(95,126)
  JVS(503) = B(525)
!   JVS(504) = Jac_FULL(95,127)
  JVS(504) = B(125)- B(130)+ B(175)+ B(177)+ B(216)
!   JVS(505) = Jac_FULL(95,128)
  JVS(505) = 0
!   JVS(506) = Jac_FULL(95,132)
  JVS(506) = 0.125*B(240)
!   JVS(507) = Jac_FULL(95,133)
  JVS(507) = B(126)+ B(127)+ B(310)+ B(359)+ B(435)+ B(436)
!   JVS(508) = Jac_FULL(95,134)
  JVS(508) = 0.25*B(236)
!   JVS(509) = Jac_FULL(95,135)
  JVS(509) = 0
!   JVS(510) = Jac_FULL(95,136)
  JVS(510) = B(128)
!   JVS(511) = Jac_FULL(95,137)
  JVS(511) = B(360)
!   JVS(512) = Jac_FULL(95,138)
  JVS(512) = B(311)
!   JVS(513) = Jac_FULL(96,96)
  JVS(513) = - B(183)- B(185)- B(187)
!   JVS(514) = Jac_FULL(96,125)
  JVS(514) = - B(184)
!   JVS(515) = Jac_FULL(96,127)
  JVS(515) = - B(186)
!   JVS(516) = Jac_FULL(96,136)
  JVS(516) = - B(188)
!   JVS(517) = Jac_FULL(97,55)
  JVS(517) = 0.2*B(250)
!   JVS(518) = Jac_FULL(97,81)
  JVS(518) = B(244)
!   JVS(519) = Jac_FULL(97,97)
  JVS(519) = - B(246)- B(248)
!   JVS(520) = Jac_FULL(97,103)
  JVS(520) = 0
!   JVS(521) = Jac_FULL(97,111)
  JVS(521) = 0
!   JVS(522) = Jac_FULL(97,127)
  JVS(522) = B(245)+ 0.2*B(251)
!   JVS(523) = Jac_FULL(97,128)
  JVS(523) = - B(247)
!   JVS(524) = Jac_FULL(97,132)
  JVS(524) = 0
!   JVS(525) = Jac_FULL(97,134)
  JVS(525) = - B(249)
!   JVS(526) = Jac_FULL(98,98)
  JVS(526) = - B(13)- B(19)- B(283)
!   JVS(527) = Jac_FULL(98,99)
  JVS(527) = 0.05*B(109)+ 0.69*B(438)
!   JVS(528) = Jac_FULL(98,120)
  JVS(528) = - B(14)+ 0.05*B(110)
!   JVS(529) = Jac_FULL(98,122)
  JVS(529) = B(27)
!   JVS(530) = Jac_FULL(98,127)
  JVS(530) = - B(20)
!   JVS(531) = Jac_FULL(98,128)
  JVS(531) = B(28)
!   JVS(532) = Jac_FULL(98,133)
  JVS(532) = B(435)
!   JVS(533) = Jac_FULL(98,138)
  JVS(533) = - B(284)
!   JVS(534) = Jac_FULL(99,96)
  JVS(534) = 0.06*B(183)
!   JVS(535) = Jac_FULL(99,99)
  JVS(535) = - B(109)- B(111)- B(308)- B(438)
!   JVS(536) = Jac_FULL(99,120)
  JVS(536) = - B(110)
!   JVS(537) = Jac_FULL(99,125)
  JVS(537) = 0.06*B(184)
!   JVS(538) = Jac_FULL(99,127)
  JVS(538) = - B(112)
!   JVS(539) = Jac_FULL(99,136)
  JVS(539) = 0
!   JVS(540) = Jac_FULL(99,138)
  JVS(540) = - B(309)
!   JVS(541) = Jac_FULL(100,100)
  JVS(541) = - B(135)- B(137)- B(326)- B(369)
!   JVS(542) = Jac_FULL(100,125)
  JVS(542) = - B(136)
!   JVS(543) = Jac_FULL(100,127)
  JVS(543) = - B(138)
!   JVS(544) = Jac_FULL(100,137)
  JVS(544) = - B(370)
!   JVS(545) = Jac_FULL(100,138)
  JVS(545) = - B(327)
!   JVS(546) = Jac_FULL(101,89)
  JVS(546) = B(379)
!   JVS(547) = Jac_FULL(101,101)
  JVS(547) = - B(350)- B(383)- B(473)
!   JVS(548) = Jac_FULL(101,104)
  JVS(548) = B(352)
!   JVS(549) = Jac_FULL(101,113)
  JVS(549) = 0
!   JVS(550) = Jac_FULL(101,116)
  JVS(550) = 0
!   JVS(551) = Jac_FULL(101,118)
  JVS(551) = B(499)
!   JVS(552) = Jac_FULL(101,123)
  JVS(552) = B(500)
!   JVS(553) = Jac_FULL(101,124)
  JVS(553) = 0
!   JVS(554) = Jac_FULL(101,127)
  JVS(554) = - B(351)
!   JVS(555) = Jac_FULL(101,130)
  JVS(555) = 0
!   JVS(556) = Jac_FULL(101,131)
  JVS(556) = B(341)
!   JVS(557) = Jac_FULL(101,137)
  JVS(557) = B(353)+ B(380)
!   JVS(558) = Jac_FULL(101,138)
  JVS(558) = - B(384)
!   JVS(559) = Jac_FULL(102,83)
  JVS(559) = 2*B(488)+ B(497)
!   JVS(560) = Jac_FULL(102,102)
  JVS(560) = - B(73)- B(432)
!   JVS(561) = Jac_FULL(102,104)
  JVS(561) = B(501)+ B(505)
!   JVS(562) = Jac_FULL(102,114)
  JVS(562) = B(405)
!   JVS(563) = Jac_FULL(102,116)
  JVS(563) = B(493)+ B(495)+ B(503)
!   JVS(564) = Jac_FULL(102,119)
  JVS(564) = B(151)
!   JVS(565) = Jac_FULL(102,123)
  JVS(565) = B(504)
!   JVS(566) = Jac_FULL(102,127)
  JVS(566) = B(65)- B(74)
!   JVS(567) = Jac_FULL(102,129)
  JVS(567) = 2*B(489)+ B(496)+ B(502)
!   JVS(568) = Jac_FULL(102,130)
  JVS(568) = B(494)+ B(498)+ B(506)
!   JVS(569) = Jac_FULL(102,133)
  JVS(569) = B(127)
!   JVS(570) = Jac_FULL(102,135)
  JVS(570) = B(66)
!   JVS(571) = Jac_FULL(102,136)
  JVS(571) = B(128)+ B(152)+ B(406)
!   JVS(572) = Jac_FULL(103,22)
  JVS(572) = B(219)
!   JVS(573) = Jac_FULL(103,79)
  JVS(573) = 0.15*B(227)
!   JVS(574) = Jac_FULL(103,103)
  JVS(574) = - B(221)- B(223)- B(225)
!   JVS(575) = Jac_FULL(103,127)
  JVS(575) = B(220)+ 0.15*B(228)
!   JVS(576) = Jac_FULL(103,128)
  JVS(576) = - B(224)
!   JVS(577) = Jac_FULL(103,132)
  JVS(577) = - B(222)
!   JVS(578) = Jac_FULL(103,134)
  JVS(578) = - B(226)
!   JVS(579) = Jac_FULL(104,104)
  JVS(579) = - B(352)- B(358)- B(477)- B(501)- B(505)
!   JVS(580) = Jac_FULL(104,129)
  JVS(580) = - B(502)
!   JVS(581) = Jac_FULL(104,130)
  JVS(581) = - B(506)
!   JVS(582) = Jac_FULL(104,131)
  JVS(582) = B(356)
!   JVS(583) = Jac_FULL(104,135)
  JVS(583) = B(357)
!   JVS(584) = Jac_FULL(104,137)
  JVS(584) = - B(353)
!   JVS(585) = Jac_FULL(105,51)
  JVS(585) = B(528)
!   JVS(586) = Jac_FULL(105,59)
  JVS(586) = B(512)+ B(514)
!   JVS(587) = Jac_FULL(105,66)
  JVS(587) = 0.6*B(407)
!   JVS(588) = Jac_FULL(105,80)
  JVS(588) = B(409)
!   JVS(589) = Jac_FULL(105,105)
  JVS(589) = - B(399)- B(527)
!   JVS(590) = Jac_FULL(105,114)
  JVS(590) = 0
!   JVS(591) = Jac_FULL(105,125)
  JVS(591) = B(515)
!   JVS(592) = Jac_FULL(105,126)
  JVS(592) = 0
!   JVS(593) = Jac_FULL(105,127)
  JVS(593) = - B(400)+ 0.6*B(408)
!   JVS(594) = Jac_FULL(105,129)
  JVS(594) = 0
!   JVS(595) = Jac_FULL(105,131)
  JVS(595) = 0
!   JVS(596) = Jac_FULL(105,136)
  JVS(596) = 0
!   JVS(597) = Jac_FULL(105,137)
  JVS(597) = 0
!   JVS(598) = Jac_FULL(105,138)
  JVS(598) = 0
!   JVS(599) = Jac_FULL(106,106)
  JVS(599) = - B(123)- B(312)- B(361)- B(434)
!   JVS(600) = Jac_FULL(106,127)
  JVS(600) = - B(124)
!   JVS(601) = Jac_FULL(106,128)
  JVS(601) = B(115)
!   JVS(602) = Jac_FULL(106,132)
  JVS(602) = B(116)
!   JVS(603) = Jac_FULL(106,137)
  JVS(603) = - B(362)
!   JVS(604) = Jac_FULL(106,138)
  JVS(604) = - B(313)
!   JVS(605) = Jac_FULL(107,107)
  JVS(605) = - B(257)- B(259)- B(261)
!   JVS(606) = Jac_FULL(107,125)
  JVS(606) = - B(258)
!   JVS(607) = Jac_FULL(107,127)
  JVS(607) = - B(260)
!   JVS(608) = Jac_FULL(107,136)
  JVS(608) = - B(262)
!   JVS(609) = Jac_FULL(108,54)
  JVS(609) = B(254)+ B(457)
!   JVS(610) = Jac_FULL(108,62)
  JVS(610) = 0.5*B(201)
!   JVS(611) = Jac_FULL(108,82)
  JVS(611) = 0.25*B(452)
!   JVS(612) = Jac_FULL(108,91)
  JVS(612) = B(272)
!   JVS(613) = Jac_FULL(108,93)
  JVS(613) = 0.2*B(209)
!   JVS(614) = Jac_FULL(108,107)
  JVS(614) = 0
!   JVS(615) = Jac_FULL(108,108)
  JVS(615) = - B(213)- B(446)
!   JVS(616) = Jac_FULL(108,109)
  JVS(616) = 0.25*B(267)
!   JVS(617) = Jac_FULL(108,112)
  JVS(617) = 0.25*B(235)+ 0.375*B(239)+ B(241)
!   JVS(618) = Jac_FULL(108,115)
  JVS(618) = 0
!   JVS(619) = Jac_FULL(108,125)
  JVS(619) = 0
!   JVS(620) = Jac_FULL(108,127)
  JVS(620) = 0.5*B(202)- B(214)+ B(255)+ B(273)
!   JVS(621) = Jac_FULL(108,128)
  JVS(621) = 0
!   JVS(622) = Jac_FULL(108,132)
  JVS(622) = 0.2*B(210)+ 0.375*B(240)+ 0.25*B(268)
!   JVS(623) = Jac_FULL(108,134)
  JVS(623) = 0.25*B(236)
!   JVS(624) = Jac_FULL(108,135)
  JVS(624) = 0
!   JVS(625) = Jac_FULL(108,136)
  JVS(625) = 0
!   JVS(626) = Jac_FULL(109,107)
  JVS(626) = B(259)
!   JVS(627) = Jac_FULL(109,109)
  JVS(627) = - B(263)- B(265)- B(267)- 2*B(269)
!   JVS(628) = Jac_FULL(109,125)
  JVS(628) = 0
!   JVS(629) = Jac_FULL(109,127)
  JVS(629) = B(260)
!   JVS(630) = Jac_FULL(109,128)
  JVS(630) = - B(264)
!   JVS(631) = Jac_FULL(109,132)
  JVS(631) = - B(268)
!   JVS(632) = Jac_FULL(109,134)
  JVS(632) = - B(266)
!   JVS(633) = Jac_FULL(109,136)
  JVS(633) = 0
!   JVS(634) = Jac_FULL(110,61)
  JVS(634) = B(270)+ B(458)
!   JVS(635) = Jac_FULL(110,91)
  JVS(635) = B(459)
!   JVS(636) = Jac_FULL(110,107)
  JVS(636) = 0.65*B(257)
!   JVS(637) = Jac_FULL(110,109)
  JVS(637) = 0.956*B(265)+ 0.5*B(267)+ 2*B(269)
!   JVS(638) = Jac_FULL(110,110)
  JVS(638) = - B(229)- B(231)- B(451)
!   JVS(639) = Jac_FULL(110,125)
  JVS(639) = - B(230)+ 0.65*B(258)
!   JVS(640) = Jac_FULL(110,127)
  JVS(640) = - B(232)+ B(271)
!   JVS(641) = Jac_FULL(110,128)
  JVS(641) = 0
!   JVS(642) = Jac_FULL(110,132)
  JVS(642) = 0.5*B(268)
!   JVS(643) = Jac_FULL(110,134)
  JVS(643) = 0.956*B(266)
!   JVS(644) = Jac_FULL(110,136)
  JVS(644) = 0
!   JVS(645) = Jac_FULL(111,96)
  JVS(645) = B(187)
!   JVS(646) = Jac_FULL(111,97)
  JVS(646) = 0.015*B(248)
!   JVS(647) = Jac_FULL(111,103)
  JVS(647) = 0.16*B(225)
!   JVS(648) = Jac_FULL(111,111)
  JVS(648) = - B(252)- B(456)
!   JVS(649) = Jac_FULL(111,115)
  JVS(649) = 0.02*B(199)
!   JVS(650) = Jac_FULL(111,125)
  JVS(650) = 0
!   JVS(651) = Jac_FULL(111,127)
  JVS(651) = - B(253)
!   JVS(652) = Jac_FULL(111,128)
  JVS(652) = 0
!   JVS(653) = Jac_FULL(111,132)
  JVS(653) = 0
!   JVS(654) = Jac_FULL(111,134)
  JVS(654) = 0.02*B(200)+ 0.16*B(226)+ 0.015*B(249)
!   JVS(655) = Jac_FULL(111,136)
  JVS(655) = B(188)
!   JVS(656) = Jac_FULL(112,54)
  JVS(656) = B(256)
!   JVS(657) = Jac_FULL(112,82)
  JVS(657) = B(242)
!   JVS(658) = Jac_FULL(112,107)
  JVS(658) = 0.1*B(257)
!   JVS(659) = Jac_FULL(112,110)
  JVS(659) = B(231)
!   JVS(660) = Jac_FULL(112,112)
  JVS(660) = - B(233)- B(235)- B(237)- B(239)- 2*B(241)
!   JVS(661) = Jac_FULL(112,125)
  JVS(661) = 0.1*B(258)
!   JVS(662) = Jac_FULL(112,127)
  JVS(662) = B(232)+ B(243)
!   JVS(663) = Jac_FULL(112,128)
  JVS(663) = - B(234)
!   JVS(664) = Jac_FULL(112,132)
  JVS(664) = - B(240)
!   JVS(665) = Jac_FULL(112,134)
  JVS(665) = - B(236)
!   JVS(666) = Jac_FULL(112,135)
  JVS(666) = - B(238)
!   JVS(667) = Jac_FULL(112,136)
  JVS(667) = 0
!   JVS(668) = Jac_FULL(113,113)
  JVS(668) = - B(297)- B(464)- B(491)- B(507)
!   JVS(669) = Jac_FULL(113,116)
  JVS(669) = B(495)
!   JVS(670) = Jac_FULL(113,123)
  JVS(670) = - B(508)
!   JVS(671) = Jac_FULL(113,124)
  JVS(671) = B(293)
!   JVS(672) = Jac_FULL(113,127)
  JVS(672) = - B(298)
!   JVS(673) = Jac_FULL(113,128)
  JVS(673) = B(294)
!   JVS(674) = Jac_FULL(113,129)
  JVS(674) = B(496)
!   JVS(675) = Jac_FULL(113,130)
  JVS(675) = - B(492)
!   JVS(676) = Jac_FULL(114,114)
  JVS(676) = - B(401)- B(403)- B(405)- B(414)- B(416)- B(418)
!   JVS(677) = Jac_FULL(114,127)
  JVS(677) = - B(402)- B(404)
!   JVS(678) = Jac_FULL(114,131)
  JVS(678) = - B(419)
!   JVS(679) = Jac_FULL(114,136)
  JVS(679) = - B(406)
!   JVS(680) = Jac_FULL(114,137)
  JVS(680) = - B(417)
!   JVS(681) = Jac_FULL(114,138)
  JVS(681) = - B(415)
!   JVS(682) = Jac_FULL(115,62)
  JVS(682) = 0.5*B(201)
!   JVS(683) = Jac_FULL(115,96)
  JVS(683) = B(185)
!   JVS(684) = Jac_FULL(115,100)
  JVS(684) = 0.666667*B(137)+ 0.666667*B(326)+ 0.666667*B(369)
!   JVS(685) = Jac_FULL(115,115)
  JVS(685) = - B(197)- B(199)
!   JVS(686) = Jac_FULL(115,125)
  JVS(686) = 0
!   JVS(687) = Jac_FULL(115,127)
  JVS(687) = 0.666667*B(138)+ B(186)+ 0.5*B(202)
!   JVS(688) = Jac_FULL(115,128)
  JVS(688) = - B(198)
!   JVS(689) = Jac_FULL(115,134)
  JVS(689) = - B(200)
!   JVS(690) = Jac_FULL(115,136)
  JVS(690) = 0
!   JVS(691) = Jac_FULL(115,137)
  JVS(691) = 0.666667*B(370)
!   JVS(692) = Jac_FULL(115,138)
  JVS(692) = 0.666667*B(327)
!   JVS(693) = Jac_FULL(116,116)
  JVS(693) = - B(303)- B(304)- B(306)- B(466)- B(467)- B(493)- B(495)- B(503)
!   JVS(694) = Jac_FULL(116,123)
  JVS(694) = - B(504)
!   JVS(695) = Jac_FULL(116,124)
  JVS(695) = B(301)
!   JVS(696) = Jac_FULL(116,126)
  JVS(696) = - B(305)
!   JVS(697) = Jac_FULL(116,129)
  JVS(697) = - B(496)
!   JVS(698) = Jac_FULL(116,130)
  JVS(698) = - B(494)
!   JVS(699) = Jac_FULL(116,135)
  JVS(699) = B(302)
!   JVS(700) = Jac_FULL(116,138)
  JVS(700) = - B(307)
!   JVS(701) = Jac_FULL(117,21)
  JVS(701) = B(133)
!   JVS(702) = Jac_FULL(117,32)
  JVS(702) = 0.18*B(181)
!   JVS(703) = Jac_FULL(117,57)
  JVS(703) = 0.3*B(147)
!   JVS(704) = Jac_FULL(117,79)
  JVS(704) = 0.33*B(450)
!   JVS(705) = Jac_FULL(117,81)
  JVS(705) = B(453)
!   JVS(706) = Jac_FULL(117,96)
  JVS(706) = 0.06*B(183)
!   JVS(707) = Jac_FULL(117,103)
  JVS(707) = 0.12*B(221)+ 0.28*B(225)
!   JVS(708) = Jac_FULL(117,111)
  JVS(708) = 0.33*B(456)
!   JVS(709) = Jac_FULL(117,115)
  JVS(709) = 0
!   JVS(710) = Jac_FULL(117,117)
  JVS(710) = - B(139)- B(141)- B(143)- B(145)- B(169)
!   JVS(711) = Jac_FULL(117,121)
  JVS(711) = - B(170)
!   JVS(712) = Jac_FULL(117,125)
  JVS(712) = 0.06*B(184)
!   JVS(713) = Jac_FULL(117,127)
  JVS(713) = B(134)+ 0.3*B(148)+ 0.18*B(182)
!   JVS(714) = Jac_FULL(117,128)
  JVS(714) = - B(140)
!   JVS(715) = Jac_FULL(117,132)
  JVS(715) = - B(146)+ 0.12*B(222)
!   JVS(716) = Jac_FULL(117,134)
  JVS(716) = - B(142)+ 0.28*B(226)
!   JVS(717) = Jac_FULL(117,136)
  JVS(717) = - B(144)
!   JVS(718) = Jac_FULL(117,137)
  JVS(718) = 0
!   JVS(719) = Jac_FULL(117,138)
  JVS(719) = 0
!   JVS(720) = Jac_FULL(118,101)
  JVS(720) = B(350)
!   JVS(721) = Jac_FULL(118,104)
  JVS(721) = B(501)
!   JVS(722) = Jac_FULL(118,113)
  JVS(722) = 0
!   JVS(723) = Jac_FULL(118,116)
  JVS(723) = 0
!   JVS(724) = Jac_FULL(118,118)
  JVS(724) = - B(348)- B(475)- B(499)- B(509)
!   JVS(725) = Jac_FULL(118,123)
  JVS(725) = - B(500)
!   JVS(726) = Jac_FULL(118,124)
  JVS(726) = 0
!   JVS(727) = Jac_FULL(118,126)
  JVS(727) = - B(349)
!   JVS(728) = Jac_FULL(118,127)
  JVS(728) = B(351)
!   JVS(729) = Jac_FULL(118,128)
  JVS(729) = B(344)
!   JVS(730) = Jac_FULL(118,129)
  JVS(730) = B(502)
!   JVS(731) = Jac_FULL(118,130)
  JVS(731) = - B(510)
!   JVS(732) = Jac_FULL(118,131)
  JVS(732) = B(345)+ B(363)
!   JVS(733) = Jac_FULL(118,132)
  JVS(733) = B(364)
!   JVS(734) = Jac_FULL(118,135)
  JVS(734) = 0
!   JVS(735) = Jac_FULL(118,137)
  JVS(735) = 0
!   JVS(736) = Jac_FULL(118,138)
  JVS(736) = 0
!   JVS(737) = Jac_FULL(119,55)
  JVS(737) = B(454)
!   JVS(738) = Jac_FULL(119,57)
  JVS(738) = 0.7*B(147)+ B(439)
!   JVS(739) = Jac_FULL(119,79)
  JVS(739) = 0.33*B(450)
!   JVS(740) = Jac_FULL(119,96)
  JVS(740) = 0.47*B(183)
!   JVS(741) = Jac_FULL(119,97)
  JVS(741) = 0.985*B(248)
!   JVS(742) = Jac_FULL(119,103)
  JVS(742) = 0.12*B(221)+ 0.28*B(225)
!   JVS(743) = Jac_FULL(119,111)
  JVS(743) = 0.33*B(456)
!   JVS(744) = Jac_FULL(119,115)
  JVS(744) = 0.98*B(199)
!   JVS(745) = Jac_FULL(119,117)
  JVS(745) = B(141)+ B(143)+ 0.75*B(145)+ B(169)
!   JVS(746) = Jac_FULL(119,119)
  JVS(746) = - B(149)- B(151)- B(328)- B(371)- B(440)
!   JVS(747) = Jac_FULL(119,121)
  JVS(747) = B(170)
!   JVS(748) = Jac_FULL(119,125)
  JVS(748) = 0.47*B(184)
!   JVS(749) = Jac_FULL(119,127)
  JVS(749) = 0.7*B(148)- B(150)
!   JVS(750) = Jac_FULL(119,128)
  JVS(750) = 0
!   JVS(751) = Jac_FULL(119,132)
  JVS(751) = 0.75*B(146)+ 0.12*B(222)
!   JVS(752) = Jac_FULL(119,134)
  JVS(752) = B(142)+ 0.98*B(200)+ 0.28*B(226)+ 0.985*B(249)
!   JVS(753) = Jac_FULL(119,136)
  JVS(753) = B(144)- B(152)
!   JVS(754) = Jac_FULL(119,137)
  JVS(754) = - B(372)
!   JVS(755) = Jac_FULL(119,138)
  JVS(755) = - B(329)
!   JVS(756) = Jac_FULL(120,23)
  JVS(756) = - B(316)
!   JVS(757) = Jac_FULL(120,24)
  JVS(757) = - B(332)
!   JVS(758) = Jac_FULL(120,25)
  JVS(758) = - B(562)
!   JVS(759) = Jac_FULL(120,26)
  JVS(759) = - B(582)
!   JVS(760) = Jac_FULL(120,27)
  JVS(760) = - B(334)
!   JVS(761) = Jac_FULL(120,33)
  JVS(761) = - B(543)
!   JVS(762) = Jac_FULL(120,42)
  JVS(762) = - B(551)
!   JVS(763) = Jac_FULL(120,44)
  JVS(763) = - B(322)
!   JVS(764) = Jac_FULL(120,49)
  JVS(764) = - B(42)- B(44)+ B(425)
!   JVS(765) = Jac_FULL(120,52)
  JVS(765) = - B(318)
!   JVS(766) = Jac_FULL(120,56)
  JVS(766) = - 0.66*B(591)
!   JVS(767) = Jac_FULL(120,69)
  JVS(767) = - B(537)
!   JVS(768) = Jac_FULL(120,71)
  JVS(768) = - B(555)
!   JVS(769) = Jac_FULL(120,72)
  JVS(769) = - B(565)
!   JVS(770) = Jac_FULL(120,73)
  JVS(770) = - B(571)
!   JVS(771) = Jac_FULL(120,74)
  JVS(771) = - B(585)
!   JVS(772) = Jac_FULL(120,77)
  JVS(772) = - B(530)
!   JVS(773) = Jac_FULL(120,90)
  JVS(773) = 0
!   JVS(774) = Jac_FULL(120,98)
  JVS(774) = - B(13)
!   JVS(775) = Jac_FULL(120,99)
  JVS(775) = - B(109)
!   JVS(776) = Jac_FULL(120,120)
  JVS(776) = - B(1)- B(5)- B(14)- B(34)- B(40)- B(43)- B(45)- B(110)- B(317)- B(319)- B(323)- B(333)- B(335)- B(531)- B(538)- &
                     B(544)&
               &- B(552)- B(556)- B(563)- B(566)- B(572)- B(583)- B(586)- 0.66*B(592)
!   JVS(777) = Jac_FULL(120,122)
  JVS(777) = 0
!   JVS(778) = Jac_FULL(120,125)
  JVS(778) = - B(6)+ B(421)
!   JVS(779) = Jac_FULL(120,127)
  JVS(779) = 0
!   JVS(780) = Jac_FULL(120,128)
  JVS(780) = 0
!   JVS(781) = Jac_FULL(120,129)
  JVS(781) = - B(35)
!   JVS(782) = Jac_FULL(120,133)
  JVS(782) = 0
!   JVS(783) = Jac_FULL(120,134)
  JVS(783) = 0
!   JVS(784) = Jac_FULL(120,135)
  JVS(784) = 0
!   JVS(785) = Jac_FULL(120,136)
  JVS(785) = 0
!   JVS(786) = Jac_FULL(120,138)
  JVS(786) = 0
!   JVS(787) = Jac_FULL(121,18)
  JVS(787) = 2*B(455)
!   JVS(788) = Jac_FULL(121,55)
  JVS(788) = B(454)
!   JVS(789) = Jac_FULL(121,58)
  JVS(789) = B(172)
!   JVS(790) = Jac_FULL(121,67)
  JVS(790) = B(448)
!   JVS(791) = Jac_FULL(121,75)
  JVS(791) = B(178)+ B(443)
!   JVS(792) = Jac_FULL(121,81)
  JVS(792) = B(453)
!   JVS(793) = Jac_FULL(121,82)
  JVS(793) = 0.25*B(452)
!   JVS(794) = Jac_FULL(121,86)
  JVS(794) = B(445)
!   JVS(795) = Jac_FULL(121,92)
  JVS(795) = 0
!   JVS(796) = Jac_FULL(121,93)
  JVS(796) = B(207)+ 0.3*B(209)
!   JVS(797) = Jac_FULL(121,94)
  JVS(797) = B(215)+ B(447)
!   JVS(798) = Jac_FULL(121,96)
  JVS(798) = 0.23*B(183)
!   JVS(799) = Jac_FULL(121,97)
  JVS(799) = 0.985*B(248)
!   JVS(800) = Jac_FULL(121,103)
  JVS(800) = 0
!   JVS(801) = Jac_FULL(121,107)
  JVS(801) = 0.1*B(257)
!   JVS(802) = Jac_FULL(121,108)
  JVS(802) = B(446)
!   JVS(803) = Jac_FULL(121,109)
  JVS(803) = 0
!   JVS(804) = Jac_FULL(121,110)
  JVS(804) = 0.1*B(229)+ B(451)
!   JVS(805) = Jac_FULL(121,111)
  JVS(805) = 0
!   JVS(806) = Jac_FULL(121,112)
  JVS(806) = 0.25*B(235)+ 0.125*B(239)
!   JVS(807) = Jac_FULL(121,115)
  JVS(807) = 0
!   JVS(808) = Jac_FULL(121,117)
  JVS(808) = - B(169)
!   JVS(809) = Jac_FULL(121,119)
  JVS(809) = B(149)+ B(151)+ B(328)+ B(371)
!   JVS(810) = Jac_FULL(121,121)
  JVS(810) = - B(155)- B(157)- B(159)- B(161)- B(163)- B(165)- B(167)- B(170)- 2*B(171)
!   JVS(811) = Jac_FULL(121,125)
  JVS(811) = 0.23*B(184)+ 0.1*B(230)+ 0.1*B(258)
!   JVS(812) = Jac_FULL(121,127)
  JVS(812) = B(150)+ B(173)+ B(216)
!   JVS(813) = Jac_FULL(121,128)
  JVS(813) = - B(156)- B(158)
!   JVS(814) = Jac_FULL(121,132)
  JVS(814) = - B(166)- B(168)+ 0.3*B(210)+ 0.125*B(240)
!   JVS(815) = Jac_FULL(121,134)
  JVS(815) = - B(160)+ B(208)+ 0.25*B(236)+ 0.985*B(249)
!   JVS(816) = Jac_FULL(121,135)
  JVS(816) = - B(162)
!   JVS(817) = Jac_FULL(121,136)
  JVS(817) = B(152)- B(164)
!   JVS(818) = Jac_FULL(121,137)
  JVS(818) = B(372)
!   JVS(819) = Jac_FULL(121,138)
  JVS(819) = B(329)
!   JVS(820) = Jac_FULL(122,95)
  JVS(820) = B(129)
!   JVS(821) = Jac_FULL(122,96)
  JVS(821) = 0
!   JVS(822) = Jac_FULL(122,98)
  JVS(822) = B(13)+ B(19)+ B(283)
!   JVS(823) = Jac_FULL(122,99)
  JVS(823) = 0.4*B(109)+ 0.31*B(438)
!   JVS(824) = Jac_FULL(122,100)
  JVS(824) = 0
!   JVS(825) = Jac_FULL(122,107)
  JVS(825) = 0
!   JVS(826) = Jac_FULL(122,108)
  JVS(826) = 0
!   JVS(827) = Jac_FULL(122,109)
  JVS(827) = 0
!   JVS(828) = Jac_FULL(122,110)
  JVS(828) = 0
!   JVS(829) = Jac_FULL(122,112)
  JVS(829) = 0
!   JVS(830) = Jac_FULL(122,115)
  JVS(830) = 0
!   JVS(831) = Jac_FULL(122,119)
  JVS(831) = 0
!   JVS(832) = Jac_FULL(122,120)
  JVS(832) = B(14)+ 0.4*B(110)
!   JVS(833) = Jac_FULL(122,121)
  JVS(833) = 0
!   JVS(834) = Jac_FULL(122,122)
  JVS(834) = - B(9)- B(11)- B(25)- B(27)- B(29)
!   JVS(835) = Jac_FULL(122,125)
  JVS(835) = - B(12)
!   JVS(836) = Jac_FULL(122,126)
  JVS(836) = B(15)
!   JVS(837) = Jac_FULL(122,127)
  JVS(837) = B(16)+ B(20)+ B(130)
!   JVS(838) = Jac_FULL(122,128)
  JVS(838) = - B(26)- B(28)- B(30)
!   JVS(839) = Jac_FULL(122,129)
  JVS(839) = B(423)
!   JVS(840) = Jac_FULL(122,130)
  JVS(840) = B(463)
!   JVS(841) = Jac_FULL(122,132)
  JVS(841) = 0
!   JVS(842) = Jac_FULL(122,133)
  JVS(842) = B(436)
!   JVS(843) = Jac_FULL(122,134)
  JVS(843) = 0
!   JVS(844) = Jac_FULL(122,135)
  JVS(844) = 0
!   JVS(845) = Jac_FULL(122,136)
  JVS(845) = 0
!   JVS(846) = Jac_FULL(122,137)
  JVS(846) = 0
!   JVS(847) = Jac_FULL(122,138)
  JVS(847) = B(284)
!   JVS(848) = Jac_FULL(123,70)
  JVS(848) = B(373)
!   JVS(849) = Jac_FULL(123,100)
  JVS(849) = B(369)
!   JVS(850) = Jac_FULL(123,106)
  JVS(850) = B(361)
!   JVS(851) = Jac_FULL(123,113)
  JVS(851) = - B(507)
!   JVS(852) = Jac_FULL(123,114)
  JVS(852) = B(416)
!   JVS(853) = Jac_FULL(123,116)
  JVS(853) = - B(503)
!   JVS(854) = Jac_FULL(123,118)
  JVS(854) = - B(499)
!   JVS(855) = Jac_FULL(123,119)
  JVS(855) = B(371)
!   JVS(856) = Jac_FULL(123,121)
  JVS(856) = 0
!   JVS(857) = Jac_FULL(123,123)
  JVS(857) = - B(346)- B(500)- B(504)- B(508)
!   JVS(858) = Jac_FULL(123,124)
  JVS(858) = 0
!   JVS(859) = Jac_FULL(123,125)
  JVS(859) = 0
!   JVS(860) = Jac_FULL(123,126)
  JVS(860) = 0
!   JVS(861) = Jac_FULL(123,127)
  JVS(861) = - B(347)
!   JVS(862) = Jac_FULL(123,128)
  JVS(862) = B(342)
!   JVS(863) = Jac_FULL(123,129)
  JVS(863) = 0
!   JVS(864) = Jac_FULL(123,130)
  JVS(864) = 0
!   JVS(865) = Jac_FULL(123,131)
  JVS(865) = 0
!   JVS(866) = Jac_FULL(123,132)
  JVS(866) = 0
!   JVS(867) = Jac_FULL(123,133)
  JVS(867) = B(359)
!   JVS(868) = Jac_FULL(123,134)
  JVS(868) = 0
!   JVS(869) = Jac_FULL(123,135)
  JVS(869) = 0
!   JVS(870) = Jac_FULL(123,136)
  JVS(870) = 0
!   JVS(871) = Jac_FULL(123,137)
  JVS(871) = B(343)+ B(360)+ B(362)+ B(370)+ B(372)+ B(374)+ B(417)
!   JVS(872) = Jac_FULL(123,138)
  JVS(872) = 0
!   JVS(873) = Jac_FULL(124,19)
  JVS(873) = 2*B(282)
!   JVS(874) = Jac_FULL(124,23)
  JVS(874) = B(316)
!   JVS(875) = Jac_FULL(124,24)
  JVS(875) = B(332)
!   JVS(876) = Jac_FULL(124,27)
  JVS(876) = B(334)
!   JVS(877) = Jac_FULL(124,33)
  JVS(877) = 0.8*B(543)
!   JVS(878) = Jac_FULL(124,35)
  JVS(878) = B(462)
!   JVS(879) = Jac_FULL(124,77)
  JVS(879) = 0.55*B(530)
!   JVS(880) = Jac_FULL(124,113)
  JVS(880) = B(297)
!   JVS(881) = Jac_FULL(124,116)
  JVS(881) = B(303)+ B(304)+ B(467)
!   JVS(882) = Jac_FULL(124,120)
  JVS(882) = B(317)+ B(333)+ B(335)+ 0.55*B(531)+ 0.8*B(544)
!   JVS(883) = Jac_FULL(124,122)
  JVS(883) = 0
!   JVS(884) = Jac_FULL(124,123)
  JVS(884) = 0
!   JVS(885) = Jac_FULL(124,124)
  JVS(885) = - B(276)- 2*B(278)- 2*B(279)- 2*B(280)- 2*B(281)- B(291)- B(293)- B(299)- B(301)- B(314)- B(385)- B(387)- B(389)
!   JVS(886) = Jac_FULL(124,125)
  JVS(886) = B(274)
!   JVS(887) = Jac_FULL(124,126)
  JVS(887) = - B(277)+ B(305)
!   JVS(888) = Jac_FULL(124,127)
  JVS(888) = - B(292)+ B(298)
!   JVS(889) = Jac_FULL(124,128)
  JVS(889) = B(287)- B(294)
!   JVS(890) = Jac_FULL(124,129)
  JVS(890) = 0
!   JVS(891) = Jac_FULL(124,130)
  JVS(891) = 0
!   JVS(892) = Jac_FULL(124,131)
  JVS(892) = - B(386)- B(388)- B(390)
!   JVS(893) = Jac_FULL(124,132)
  JVS(893) = - B(315)
!   JVS(894) = Jac_FULL(124,133)
  JVS(894) = 0
!   JVS(895) = Jac_FULL(124,134)
  JVS(895) = - B(300)
!   JVS(896) = Jac_FULL(124,135)
  JVS(896) = - B(302)
!   JVS(897) = Jac_FULL(124,136)
  JVS(897) = 0
!   JVS(898) = Jac_FULL(124,137)
  JVS(898) = 0
!   JVS(899) = Jac_FULL(124,138)
  JVS(899) = B(275)+ B(288)
!   JVS(900) = Jac_FULL(125,59)
  JVS(900) = - B(514)
!   JVS(901) = Jac_FULL(125,80)
  JVS(901) = - B(410)
!   JVS(902) = Jac_FULL(125,84)
  JVS(902) = - B(94)
!   JVS(903) = Jac_FULL(125,90)
  JVS(903) = - B(80)
!   JVS(904) = Jac_FULL(125,96)
  JVS(904) = - B(183)
!   JVS(905) = Jac_FULL(125,100)
  JVS(905) = - B(135)
!   JVS(906) = Jac_FULL(125,105)
  JVS(906) = 0
!   JVS(907) = Jac_FULL(125,107)
  JVS(907) = - B(257)
!   JVS(908) = Jac_FULL(125,110)
  JVS(908) = - B(229)
!   JVS(909) = Jac_FULL(125,114)
  JVS(909) = 0
!   JVS(910) = Jac_FULL(125,120)
  JVS(910) = - B(5)
!   JVS(911) = Jac_FULL(125,121)
  JVS(911) = B(157)
!   JVS(912) = Jac_FULL(125,122)
  JVS(912) = - B(11)
!   JVS(913) = Jac_FULL(125,125)
  JVS(913) = - B(6)- B(7)- B(12)- B(17)- B(23)- B(46)- B(52)- B(81)- B(95)- B(136)- B(184)- B(230)- B(258)- B(274)- B(336)- &
                     B(411)&
               &- B(421)- B(422)- B(515)
!   JVS(914) = Jac_FULL(125,126)
  JVS(914) = B(3)- B(8)
!   JVS(915) = Jac_FULL(125,127)
  JVS(915) = - B(18)
!   JVS(916) = Jac_FULL(125,128)
  JVS(916) = - B(24)+ B(158)
!   JVS(917) = Jac_FULL(125,129)
  JVS(917) = 0
!   JVS(918) = Jac_FULL(125,130)
  JVS(918) = 0
!   JVS(919) = Jac_FULL(125,131)
  JVS(919) = 0
!   JVS(920) = Jac_FULL(125,132)
  JVS(920) = 0
!   JVS(921) = Jac_FULL(125,133)
  JVS(921) = 0
!   JVS(922) = Jac_FULL(125,134)
  JVS(922) = - B(47)
!   JVS(923) = Jac_FULL(125,135)
  JVS(923) = - B(53)
!   JVS(924) = Jac_FULL(125,136)
  JVS(924) = 0
!   JVS(925) = Jac_FULL(125,137)
  JVS(925) = - B(337)
!   JVS(926) = Jac_FULL(125,138)
  JVS(926) = - B(275)
!   JVS(927) = Jac_FULL(126,20)
  JVS(927) = B(516)
!   JVS(928) = Jac_FULL(126,25)
  JVS(928) = 0.25*B(562)
!   JVS(929) = Jac_FULL(126,26)
  JVS(929) = 0.7*B(582)
!   JVS(930) = Jac_FULL(126,33)
  JVS(930) = 0.2*B(543)
!   JVS(931) = Jac_FULL(126,35)
  JVS(931) = B(462)
!   JVS(932) = Jac_FULL(126,42)
  JVS(932) = 0.77*B(551)
!   JVS(933) = Jac_FULL(126,46)
  JVS(933) = - B(524)
!   JVS(934) = Jac_FULL(126,48)
  JVS(934) = B(38)+ B(48)+ B(54)
!   JVS(935) = Jac_FULL(126,51)
  JVS(935) = B(528)
!   JVS(936) = Jac_FULL(126,59)
  JVS(936) = B(512)
!   JVS(937) = Jac_FULL(126,69)
  JVS(937) = 0.65*B(537)
!   JVS(938) = Jac_FULL(126,71)
  JVS(938) = 0.31*B(555)
!   JVS(939) = Jac_FULL(126,72)
  JVS(939) = 0.24*B(565)
!   JVS(940) = Jac_FULL(126,73)
  JVS(940) = 0.18*B(571)
!   JVS(941) = Jac_FULL(126,74)
  JVS(941) = 0.7*B(585)
!   JVS(942) = Jac_FULL(126,77)
  JVS(942) = 0.28*B(530)
!   JVS(943) = Jac_FULL(126,105)
  JVS(943) = B(527)
!   JVS(944) = Jac_FULL(126,114)
  JVS(944) = 0
!   JVS(945) = Jac_FULL(126,116)
  JVS(945) = - B(304)
!   JVS(946) = Jac_FULL(126,118)
  JVS(946) = - B(348)
!   JVS(947) = Jac_FULL(126,120)
  JVS(947) = B(1)+ B(40)+ 0.28*B(531)+ 0.65*B(538)+ 0.2*B(544)+ 0.77*B(552)+ 0.31*B(556)+ 0.25*B(563)+ 0.24*B(566)+ 0.18*B(572)&
               &+ 0.7*B(583)+ 0.7*B(586)
!   JVS(948) = Jac_FULL(126,122)
  JVS(948) = B(29)
!   JVS(949) = Jac_FULL(126,123)
  JVS(949) = 0
!   JVS(950) = Jac_FULL(126,124)
  JVS(950) = - B(276)
!   JVS(951) = Jac_FULL(126,125)
  JVS(951) = - B(7)+ B(422)
!   JVS(952) = Jac_FULL(126,126)
  JVS(952) = - B(3)- B(8)- B(15)- B(21)- B(50)- B(277)- B(305)- B(338)- B(349)- B(525)
!   JVS(953) = Jac_FULL(126,127)
  JVS(953) = - B(16)
!   JVS(954) = Jac_FULL(126,128)
  JVS(954) = - B(22)+ B(30)
!   JVS(955) = Jac_FULL(126,129)
  JVS(955) = 0
!   JVS(956) = Jac_FULL(126,130)
  JVS(956) = 0
!   JVS(957) = Jac_FULL(126,131)
  JVS(957) = - B(339)+ B(474)
!   JVS(958) = Jac_FULL(126,132)
  JVS(958) = 0
!   JVS(959) = Jac_FULL(126,133)
  JVS(959) = 0
!   JVS(960) = Jac_FULL(126,134)
  JVS(960) = B(49)+ B(427)
!   JVS(961) = Jac_FULL(126,135)
  JVS(961) = - B(51)+ B(55)+ B(426)
!   JVS(962) = Jac_FULL(126,136)
  JVS(962) = B(428)
!   JVS(963) = Jac_FULL(126,137)
  JVS(963) = 0
!   JVS(964) = Jac_FULL(126,138)
  JVS(964) = 0
!   JVS(965) = Jac_FULL(127,21)
  JVS(965) = - B(133)
!   JVS(966) = Jac_FULL(127,22)
  JVS(966) = - B(219)
!   JVS(967) = Jac_FULL(127,28)
  JVS(967) = - B(377)
!   JVS(968) = Jac_FULL(127,29)
  JVS(968) = - B(375)
!   JVS(969) = Jac_FULL(127,31)
  JVS(969) = - B(78)
!   JVS(970) = Jac_FULL(127,32)
  JVS(970) = - B(181)
!   JVS(971) = Jac_FULL(127,36)
  JVS(971) = - B(397)
!   JVS(972) = Jac_FULL(127,37)
  JVS(972) = - B(367)
!   JVS(973) = Jac_FULL(127,38)
  JVS(973) = - B(393)
!   JVS(974) = Jac_FULL(127,39)
  JVS(974) = - B(395)
!   JVS(975) = Jac_FULL(127,41)
  JVS(975) = B(518)
!   JVS(976) = Jac_FULL(127,42)
  JVS(976) = - B(553)
!   JVS(977) = Jac_FULL(127,43)
  JVS(977) = - B(546)
!   JVS(978) = Jac_FULL(127,44)
  JVS(978) = B(322)- B(324)
!   JVS(979) = Jac_FULL(127,45)
  JVS(979) = - B(577)
!   JVS(980) = Jac_FULL(127,46)
  JVS(980) = - B(522)
!   JVS(981) = Jac_FULL(127,47)
  JVS(981) = - B(174)
!   JVS(982) = Jac_FULL(127,50)
  JVS(982) = - B(105)
!   JVS(983) = Jac_FULL(127,52)
  JVS(983) = B(318)- B(320)
!   JVS(984) = Jac_FULL(127,53)
  JVS(984) = - B(103)
!   JVS(985) = Jac_FULL(127,54)
  JVS(985) = - B(254)
!   JVS(986) = Jac_FULL(127,55)
  JVS(986) = - 0.2*B(250)+ B(454)
!   JVS(987) = Jac_FULL(127,56)
  JVS(987) = 0.15*B(591)- B(593)
!   JVS(988) = Jac_FULL(127,57)
  JVS(988) = - 0.3*B(147)+ B(439)
!   JVS(989) = Jac_FULL(127,58)
  JVS(989) = - B(172)+ B(441)
!   JVS(990) = Jac_FULL(127,60)
  JVS(990) = - B(217)
!   JVS(991) = Jac_FULL(127,61)
  JVS(991) = B(458)
!   JVS(992) = Jac_FULL(127,62)
  JVS(992) = - 0.5*B(201)
!   JVS(993) = Jac_FULL(127,63)
  JVS(993) = - 0.3*B(195)+ B(444)
!   JVS(994) = Jac_FULL(127,64)
  JVS(994) = - B(76)+ 0.333*B(433)
!   JVS(995) = Jac_FULL(127,65)
  JVS(995) = - B(153)
!   JVS(996) = Jac_FULL(127,66)
  JVS(996) = - B(407)
!   JVS(997) = Jac_FULL(127,67)
  JVS(997) = - 0.3*B(211)+ B(448)
!   JVS(998) = Jac_FULL(127,68)
  JVS(998) = - B(71)+ B(431)
!   JVS(999) = Jac_FULL(127,69)
  JVS(999) = 0.24*B(537)- B(539)
!   JVS(1000) = Jac_FULL(127,70)
  JVS(1000) = - B(179)
!   JVS(1001) = Jac_FULL(127,71)
  JVS(1001) = - B(557)
!   JVS(1002) = Jac_FULL(127,72)
  JVS(1002) = 0.6*B(565)- B(567)
!   JVS(1003) = Jac_FULL(127,73)
  JVS(1003) = 0.38*B(571)- B(573)
!   JVS(1004) = Jac_FULL(127,74)
  JVS(1004) = - B(587)
!   JVS(1005) = Jac_FULL(127,75)
  JVS(1005) = - B(176)
!   JVS(1006) = Jac_FULL(127,76)
  JVS(1006) = - B(131)
!   JVS(1007) = Jac_FULL(127,77)
  JVS(1007) = 0.05*B(530)- B(532)
!   JVS(1008) = Jac_FULL(127,79)
  JVS(1008) = - 0.15*B(227)+ B(450)
!   JVS(1009) = Jac_FULL(127,81)
  JVS(1009) = - B(244)
!   JVS(1010) = Jac_FULL(127,82)
  JVS(1010) = - B(242)+ B(452)
!   JVS(1011) = Jac_FULL(127,84)
  JVS(1011) = 0
!   JVS(1012) = Jac_FULL(127,85)
  JVS(1012) = - B(97)
!   JVS(1013) = Jac_FULL(127,86)
  JVS(1013) = - B(203)
!   JVS(1014) = Jac_FULL(127,87)
  JVS(1014) = - B(36)+ 2*B(424)
!   JVS(1015) = Jac_FULL(127,88)
  JVS(1015) = - B(113)
!   JVS(1016) = Jac_FULL(127,90)
  JVS(1016) = B(82)+ B(86)
!   JVS(1017) = Jac_FULL(127,91)
  JVS(1017) = - B(272)
!   JVS(1018) = Jac_FULL(127,92)
  JVS(1018) = 0
!   JVS(1019) = Jac_FULL(127,93)
  JVS(1019) = 0
!   JVS(1020) = Jac_FULL(127,94)
  JVS(1020) = - B(215)
!   JVS(1021) = Jac_FULL(127,95)
  JVS(1021) = - B(129)
!   JVS(1022) = Jac_FULL(127,96)
  JVS(1022) = 0.33*B(183)- B(185)
!   JVS(1023) = Jac_FULL(127,97)
  JVS(1023) = 0
!   JVS(1024) = Jac_FULL(127,98)
  JVS(1024) = B(13)- B(19)
!   JVS(1025) = Jac_FULL(127,99)
  JVS(1025) = 0.75*B(109)- B(111)
!   JVS(1026) = Jac_FULL(127,100)
  JVS(1026) = 0.13*B(135)- B(137)
!   JVS(1027) = Jac_FULL(127,101)
  JVS(1027) = - B(350)
!   JVS(1028) = Jac_FULL(127,102)
  JVS(1028) = - B(73)+ B(432)
!   JVS(1029) = Jac_FULL(127,103)
  JVS(1029) = 0
!   JVS(1030) = Jac_FULL(127,104)
  JVS(1030) = 0
!   JVS(1031) = Jac_FULL(127,105)
  JVS(1031) = - B(399)
!   JVS(1032) = Jac_FULL(127,106)
  JVS(1032) = - 0.7*B(123)+ B(312)+ B(434)
!   JVS(1033) = Jac_FULL(127,107)
  JVS(1033) = 0.25*B(257)- B(259)
!   JVS(1034) = Jac_FULL(127,108)
  JVS(1034) = - B(213)
!   JVS(1035) = Jac_FULL(127,109)
  JVS(1035) = 0
!   JVS(1036) = Jac_FULL(127,110)
  JVS(1036) = 0.19*B(229)- B(231)
!   JVS(1037) = Jac_FULL(127,111)
  JVS(1037) = - B(252)
!   JVS(1038) = Jac_FULL(127,112)
  JVS(1038) = 0
!   JVS(1039) = Jac_FULL(127,113)
  JVS(1039) = - B(297)+ B(464)
!   JVS(1040) = Jac_FULL(127,114)
  JVS(1040) = - B(401)- B(403)
!   JVS(1041) = Jac_FULL(127,115)
  JVS(1041) = 0
!   JVS(1042) = Jac_FULL(127,116)
  JVS(1042) = 0
!   JVS(1043) = Jac_FULL(127,117)
  JVS(1043) = 0
!   JVS(1044) = Jac_FULL(127,118)
  JVS(1044) = B(348)+ B(475)
!   JVS(1045) = Jac_FULL(127,119)
  JVS(1045) = - B(149)
!   JVS(1046) = Jac_FULL(127,120)
  JVS(1046) = B(14)+ 2*B(34)+ 0.75*B(110)+ B(319)+ B(323)+ 0.05*B(531)+ 0.24*B(538)+ 0.6*B(566)+ 0.38*B(572)+ 0.15*B(592)
!   JVS(1047) = Jac_FULL(127,121)
  JVS(1047) = 0
!   JVS(1048) = Jac_FULL(127,122)
  JVS(1048) = B(11)+ 2*B(25)
!   JVS(1049) = Jac_FULL(127,123)
  JVS(1049) = - B(346)
!   JVS(1050) = Jac_FULL(127,124)
  JVS(1050) = - B(291)
!   JVS(1051) = Jac_FULL(127,125)
  JVS(1051) = B(12)- B(17)+ B(23)+ 0.13*B(136)+ 0.33*B(184)+ 0.19*B(230)+ 0.25*B(258)
!   JVS(1052) = Jac_FULL(127,126)
  JVS(1052) = - B(15)+ B(21)+ B(349)
!   JVS(1053) = Jac_FULL(127,127)
  JVS(1053) = - B(16)- B(18)- B(20)- B(31)- B(37)- B(61)- B(65)- B(72)- B(74)- B(77)- B(79)- B(98)- B(104)- B(106)- B(112)- &
                     B(114)- 0.7&
                &*B(124)- B(125)- B(130)- B(132)- B(134)- B(138)- 0.3*B(148)- B(150)- B(154)- B(173)- B(175)- B(177)- B(180)- &
                     B(182)&
                &- B(186)- 0.3*B(196)- 0.5*B(202)- B(204)- 0.3*B(212)- B(214)- B(216)- B(218)- B(220)- 0.15*B(228)- B(232)- &
                     B(243)&
                &- B(245)- 0.2*B(251)- B(253)- B(255)- B(260)- B(273)- B(292)- B(295)- B(298)- B(321)- B(325)- B(347)- B(351)- &
                     B(368)&
                &- B(376)- B(378)- B(394)- B(396)- B(398)- B(400)- B(402)- B(404)- B(408)- B(523)- B(533)- B(540)- B(547)- &
                     B(554)- B(558)&
                &- B(568)- B(574)- B(578)- B(588)- B(594)
!   JVS(1054) = Jac_FULL(127,128)
  JVS(1054) = B(22)+ B(24)+ 2*B(26)- B(32)+ B(63)+ B(69)+ B(83)+ B(287)
!   JVS(1055) = Jac_FULL(127,129)
  JVS(1055) = 2*B(35)+ B(423)
!   JVS(1056) = Jac_FULL(127,130)
  JVS(1056) = - B(296)
!   JVS(1057) = Jac_FULL(127,131)
  JVS(1057) = 0
!   JVS(1058) = Jac_FULL(127,132)
  JVS(1058) = 0
!   JVS(1059) = Jac_FULL(127,133)
  JVS(1059) = - B(126)
!   JVS(1060) = Jac_FULL(127,134)
  JVS(1060) = - B(62)+ B(64)+ B(87)
!   JVS(1061) = Jac_FULL(127,135)
  JVS(1061) = - B(66)
!   JVS(1062) = Jac_FULL(127,136)
  JVS(1062) = B(70)
!   JVS(1063) = Jac_FULL(127,137)
  JVS(1063) = 0
!   JVS(1064) = Jac_FULL(127,138)
  JVS(1064) = B(288)+ B(313)
!   JVS(1065) = Jac_FULL(128,30)
  JVS(1065) = - B(412)
!   JVS(1066) = Jac_FULL(128,57)
  JVS(1066) = B(439)
!   JVS(1067) = Jac_FULL(128,60)
  JVS(1067) = B(449)
!   JVS(1068) = Jac_FULL(128,61)
  JVS(1068) = B(458)
!   JVS(1069) = Jac_FULL(128,63)
  JVS(1069) = B(444)
!   JVS(1070) = Jac_FULL(128,64)
  JVS(1070) = B(75)+ 0.667*B(433)
!   JVS(1071) = Jac_FULL(128,66)
  JVS(1071) = 0.4*B(407)
!   JVS(1072) = Jac_FULL(128,76)
  JVS(1072) = B(131)
!   JVS(1073) = Jac_FULL(128,79)
  JVS(1073) = 0.67*B(450)
!   JVS(1074) = Jac_FULL(128,80)
  JVS(1074) = 0
!   JVS(1075) = Jac_FULL(128,82)
  JVS(1075) = 0.75*B(452)
!   JVS(1076) = Jac_FULL(128,85)
  JVS(1076) = B(107)
!   JVS(1077) = Jac_FULL(128,87)
  JVS(1077) = B(36)+ B(289)
!   JVS(1078) = Jac_FULL(128,88)
  JVS(1078) = B(113)
!   JVS(1079) = Jac_FULL(128,90)
  JVS(1079) = - B(82)- B(84)+ B(86)
!   JVS(1080) = Jac_FULL(128,91)
  JVS(1080) = B(459)
!   JVS(1081) = Jac_FULL(128,92)
  JVS(1081) = - B(189)+ 0.96*B(191)+ 0.8*B(193)
!   JVS(1082) = Jac_FULL(128,93)
  JVS(1082) = - B(205)+ 0.3*B(209)
!   JVS(1083) = Jac_FULL(128,94)
  JVS(1083) = B(447)
!   JVS(1084) = Jac_FULL(128,96)
  JVS(1084) = 0.26*B(183)
!   JVS(1085) = Jac_FULL(128,97)
  JVS(1085) = - B(246)
!   JVS(1086) = Jac_FULL(128,100)
  JVS(1086) = 0.13*B(135)
!   JVS(1087) = Jac_FULL(128,103)
  JVS(1087) = 1.23*B(221)- B(223)+ 0.56*B(225)
!   JVS(1088) = Jac_FULL(128,105)
  JVS(1088) = B(399)
!   JVS(1089) = Jac_FULL(128,106)
  JVS(1089) = B(434)
!   JVS(1090) = Jac_FULL(128,107)
  JVS(1090) = 0.25*B(257)
!   JVS(1091) = Jac_FULL(128,108)
  JVS(1091) = B(213)+ B(446)
!   JVS(1092) = Jac_FULL(128,109)
  JVS(1092) = - B(263)+ 0.956*B(265)+ B(267)+ B(269)
!   JVS(1093) = Jac_FULL(128,110)
  JVS(1093) = 0.32*B(229)+ B(451)
!   JVS(1094) = Jac_FULL(128,111)
  JVS(1094) = 0.67*B(456)
!   JVS(1095) = Jac_FULL(128,112)
  JVS(1095) = - B(233)+ 0.75*B(235)+ 0.875*B(239)+ B(241)
!   JVS(1096) = Jac_FULL(128,114)
  JVS(1096) = B(403)
!   JVS(1097) = Jac_FULL(128,115)
  JVS(1097) = - B(197)+ 0.98*B(199)
!   JVS(1098) = Jac_FULL(128,117)
  JVS(1098) = - B(139)+ B(141)+ B(143)+ B(145)+ 0.82*B(169)
!   JVS(1099) = Jac_FULL(128,119)
  JVS(1099) = B(440)
!   JVS(1100) = Jac_FULL(128,121)
  JVS(1100) = - B(155)- B(157)+ B(165)+ 0.82*B(170)
!   JVS(1101) = Jac_FULL(128,122)
  JVS(1101) = B(9)- B(25)- B(27)- B(29)
!   JVS(1102) = Jac_FULL(128,124)
  JVS(1102) = 0.94*B(291)- B(293)+ B(314)
!   JVS(1103) = Jac_FULL(128,125)
  JVS(1103) = B(17)- B(23)+ 0.13*B(136)+ 0.26*B(184)+ 0.32*B(230)+ 0.25*B(258)
!   JVS(1104) = Jac_FULL(128,126)
  JVS(1104) = - B(21)
!   JVS(1105) = Jac_FULL(128,127)
  JVS(1105) = B(18)- B(31)+ B(37)+ B(114)+ B(125)+ B(132)+ B(214)+ 0.94*B(292)+ B(400)+ B(404)+ 0.4*B(408)
!   JVS(1106) = Jac_FULL(128,128)
  JVS(1106) = - B(22)- B(24)- B(26)- B(28)- B(30)- B(32)- 2*B(33)- B(63)- B(67)- B(69)- B(83)- B(85)- B(115)- B(140)- B(156)- &
                     B(158)&
                &- B(190)- B(198)- B(206)- B(224)- B(234)- B(247)- B(264)- B(285)- B(287)- B(294)- B(342)- B(344)- B(413)
!   JVS(1107) = Jac_FULL(128,129)
  JVS(1107) = 0
!   JVS(1108) = Jac_FULL(128,130)
  JVS(1108) = 0
!   JVS(1109) = Jac_FULL(128,131)
  JVS(1109) = - B(345)+ B(365)
!   JVS(1110) = Jac_FULL(128,132)
  JVS(1110) = - B(116)+ B(117)+ B(119)+ 2*B(121)+ B(146)+ B(166)+ 0.8*B(194)+ 0.3*B(210)+ 1.23*B(222)+ 0.875*B(240)+ B(268)+ &
                     B(315)&
                &+ B(366)
!   JVS(1111) = Jac_FULL(128,133)
  JVS(1111) = B(126)+ B(127)+ B(310)+ B(359)+ B(436)
!   JVS(1112) = Jac_FULL(128,134)
  JVS(1112) = - B(64)+ B(87)+ B(118)+ B(142)+ 0.96*B(192)+ 0.98*B(200)+ 0.56*B(226)+ 0.75*B(236)+ 0.956*B(266)
!   JVS(1113) = Jac_FULL(128,135)
  JVS(1113) = - B(68)
!   JVS(1114) = Jac_FULL(128,136)
  JVS(1114) = - B(70)+ B(120)+ B(128)+ B(144)
!   JVS(1115) = Jac_FULL(128,137)
  JVS(1115) = - B(343)+ B(360)
!   JVS(1116) = Jac_FULL(128,138)
  JVS(1116) = - B(286)- B(288)+ B(290)+ B(311)
!   JVS(1117) = Jac_FULL(129,21)
  JVS(1117) = B(133)
!   JVS(1118) = Jac_FULL(129,22)
  JVS(1118) = B(219)
!   JVS(1119) = Jac_FULL(129,28)
  JVS(1119) = B(377)
!   JVS(1120) = Jac_FULL(129,29)
  JVS(1120) = B(375)
!   JVS(1121) = Jac_FULL(129,31)
  JVS(1121) = B(78)
!   JVS(1122) = Jac_FULL(129,32)
  JVS(1122) = B(181)
!   JVS(1123) = Jac_FULL(129,36)
  JVS(1123) = B(397)
!   JVS(1124) = Jac_FULL(129,37)
  JVS(1124) = B(367)
!   JVS(1125) = Jac_FULL(129,38)
  JVS(1125) = B(393)
!   JVS(1126) = Jac_FULL(129,39)
  JVS(1126) = B(395)
!   JVS(1127) = Jac_FULL(129,40)
  JVS(1127) = B(529)
!   JVS(1128) = Jac_FULL(129,42)
  JVS(1128) = B(553)
!   JVS(1129) = Jac_FULL(129,43)
  JVS(1129) = B(546)
!   JVS(1130) = Jac_FULL(129,44)
  JVS(1130) = B(324)
!   JVS(1131) = Jac_FULL(129,45)
  JVS(1131) = B(577)
!   JVS(1132) = Jac_FULL(129,50)
  JVS(1132) = B(105)
!   JVS(1133) = Jac_FULL(129,51)
  JVS(1133) = - B(520)
!   JVS(1134) = Jac_FULL(129,52)
  JVS(1134) = B(320)
!   JVS(1135) = Jac_FULL(129,53)
  JVS(1135) = B(103)
!   JVS(1136) = Jac_FULL(129,58)
  JVS(1136) = B(172)
!   JVS(1137) = Jac_FULL(129,62)
  JVS(1137) = B(201)
!   JVS(1138) = Jac_FULL(129,64)
  JVS(1138) = B(76)
!   JVS(1139) = Jac_FULL(129,65)
  JVS(1139) = B(153)
!   JVS(1140) = Jac_FULL(129,68)
  JVS(1140) = B(71)
!   JVS(1141) = Jac_FULL(129,69)
  JVS(1141) = B(539)
!   JVS(1142) = Jac_FULL(129,71)
  JVS(1142) = B(557)
!   JVS(1143) = Jac_FULL(129,72)
  JVS(1143) = B(567)
!   JVS(1144) = Jac_FULL(129,73)
  JVS(1144) = B(573)
!   JVS(1145) = Jac_FULL(129,74)
  JVS(1145) = B(587)
!   JVS(1146) = Jac_FULL(129,75)
  JVS(1146) = B(176)
!   JVS(1147) = Jac_FULL(129,76)
  JVS(1147) = B(131)
!   JVS(1148) = Jac_FULL(129,77)
  JVS(1148) = B(532)
!   JVS(1149) = Jac_FULL(129,79)
  JVS(1149) = 0.85*B(227)
!   JVS(1150) = Jac_FULL(129,83)
  JVS(1150) = - B(488)
!   JVS(1151) = Jac_FULL(129,84)
  JVS(1151) = 0
!   JVS(1152) = Jac_FULL(129,85)
  JVS(1152) = B(97)
!   JVS(1153) = Jac_FULL(129,86)
  JVS(1153) = B(203)
!   JVS(1154) = Jac_FULL(129,87)
  JVS(1154) = B(36)
!   JVS(1155) = Jac_FULL(129,90)
  JVS(1155) = B(84)+ B(88)+ B(90)
!   JVS(1156) = Jac_FULL(129,92)
  JVS(1156) = 0
!   JVS(1157) = Jac_FULL(129,96)
  JVS(1157) = 0
!   JVS(1158) = Jac_FULL(129,98)
  JVS(1158) = B(19)
!   JVS(1159) = Jac_FULL(129,99)
  JVS(1159) = B(111)+ 1.155*B(438)
!   JVS(1160) = Jac_FULL(129,100)
  JVS(1160) = 0
!   JVS(1161) = Jac_FULL(129,102)
  JVS(1161) = B(73)
!   JVS(1162) = Jac_FULL(129,103)
  JVS(1162) = 0
!   JVS(1163) = Jac_FULL(129,104)
  JVS(1163) = - B(501)
!   JVS(1164) = Jac_FULL(129,105)
  JVS(1164) = 0
!   JVS(1165) = Jac_FULL(129,106)
  JVS(1165) = B(123)
!   JVS(1166) = Jac_FULL(129,107)
  JVS(1166) = 0
!   JVS(1167) = Jac_FULL(129,110)
  JVS(1167) = 0
!   JVS(1168) = Jac_FULL(129,111)
  JVS(1168) = B(252)
!   JVS(1169) = Jac_FULL(129,113)
  JVS(1169) = B(297)+ B(491)+ B(507)
!   JVS(1170) = Jac_FULL(129,114)
  JVS(1170) = 0
!   JVS(1171) = Jac_FULL(129,115)
  JVS(1171) = 0
!   JVS(1172) = Jac_FULL(129,116)
  JVS(1172) = - B(495)
!   JVS(1173) = Jac_FULL(129,117)
  JVS(1173) = 0
!   JVS(1174) = Jac_FULL(129,118)
  JVS(1174) = B(499)+ B(509)
!   JVS(1175) = Jac_FULL(129,119)
  JVS(1175) = B(149)
!   JVS(1176) = Jac_FULL(129,120)
  JVS(1176) = - B(34)
!   JVS(1177) = Jac_FULL(129,121)
  JVS(1177) = 0
!   JVS(1178) = Jac_FULL(129,122)
  JVS(1178) = B(29)
!   JVS(1179) = Jac_FULL(129,123)
  JVS(1179) = B(346)+ B(500)+ B(508)
!   JVS(1180) = Jac_FULL(129,124)
  JVS(1180) = 0
!   JVS(1181) = Jac_FULL(129,125)
  JVS(1181) = 0
!   JVS(1182) = Jac_FULL(129,126)
  JVS(1182) = 0
!   JVS(1183) = Jac_FULL(129,127)
  JVS(1183) = B(20)+ B(31)+ B(37)+ B(72)+ B(74)+ B(77)+ B(79)+ B(98)+ B(104)+ B(106)+ B(112)+ B(124)+ B(125)+ B(132)+ B(134)+ &
                     B(150)&
                &+ B(154)+ B(173)+ B(177)+ B(182)+ B(202)+ B(204)+ B(220)+ 0.85*B(228)+ B(253)+ B(295)+ B(298)+ B(321)+ B(325)+ &
                     B(347)&
                &+ B(368)+ B(376)+ B(378)+ B(394)+ B(396)+ B(398)+ B(533)+ B(540)+ B(547)+ B(554)+ B(558)+ B(568)+ B(574)+ &
                     B(578)+ B(588)
!   JVS(1184) = Jac_FULL(129,128)
  JVS(1184) = B(30)+ B(32)+ B(85)
!   JVS(1185) = Jac_FULL(129,129)
  JVS(1185) = - B(35)- B(423)- B(489)- B(496)- B(502)- B(521)
!   JVS(1186) = Jac_FULL(129,130)
  JVS(1186) = B(296)+ B(492)+ B(510)
!   JVS(1187) = Jac_FULL(129,131)
  JVS(1187) = 0
!   JVS(1188) = Jac_FULL(129,132)
  JVS(1188) = 0
!   JVS(1189) = Jac_FULL(129,133)
  JVS(1189) = B(126)
!   JVS(1190) = Jac_FULL(129,134)
  JVS(1190) = B(89)
!   JVS(1191) = Jac_FULL(129,135)
  JVS(1191) = B(91)
!   JVS(1192) = Jac_FULL(129,136)
  JVS(1192) = 0
!   JVS(1193) = Jac_FULL(129,137)
  JVS(1193) = 0
!   JVS(1194) = Jac_FULL(129,138)
  JVS(1194) = 0
!   JVS(1195) = Jac_FULL(130,43)
  JVS(1195) = B(548)
!   JVS(1196) = Jac_FULL(130,45)
  JVS(1196) = B(579)
!   JVS(1197) = Jac_FULL(130,56)
  JVS(1197) = B(595)
!   JVS(1198) = Jac_FULL(130,69)
  JVS(1198) = B(541)
!   JVS(1199) = Jac_FULL(130,70)
  JVS(1199) = B(330)
!   JVS(1200) = Jac_FULL(130,71)
  JVS(1200) = B(559)
!   JVS(1201) = Jac_FULL(130,72)
  JVS(1201) = B(569)
!   JVS(1202) = Jac_FULL(130,73)
  JVS(1202) = B(575)
!   JVS(1203) = Jac_FULL(130,74)
  JVS(1203) = B(589)
!   JVS(1204) = Jac_FULL(130,77)
  JVS(1204) = B(534)
!   JVS(1205) = Jac_FULL(130,83)
  JVS(1205) = - B(497)
!   JVS(1206) = Jac_FULL(130,87)
  JVS(1206) = B(289)
!   JVS(1207) = Jac_FULL(130,98)
  JVS(1207) = B(283)
!   JVS(1208) = Jac_FULL(130,99)
  JVS(1208) = B(308)
!   JVS(1209) = Jac_FULL(130,100)
  JVS(1209) = B(326)
!   JVS(1210) = Jac_FULL(130,104)
  JVS(1210) = - B(505)
!   JVS(1211) = Jac_FULL(130,106)
  JVS(1211) = B(312)
!   JVS(1212) = Jac_FULL(130,107)
  JVS(1212) = 0
!   JVS(1213) = Jac_FULL(130,113)
  JVS(1213) = - B(491)
!   JVS(1214) = Jac_FULL(130,114)
  JVS(1214) = B(414)
!   JVS(1215) = Jac_FULL(130,116)
  JVS(1215) = - B(493)
!   JVS(1216) = Jac_FULL(130,118)
  JVS(1216) = - B(509)
!   JVS(1217) = Jac_FULL(130,119)
  JVS(1217) = B(328)
!   JVS(1218) = Jac_FULL(130,120)
  JVS(1218) = 0
!   JVS(1219) = Jac_FULL(130,121)
  JVS(1219) = 0
!   JVS(1220) = Jac_FULL(130,122)
  JVS(1220) = 0
!   JVS(1221) = Jac_FULL(130,123)
  JVS(1221) = 0
!   JVS(1222) = Jac_FULL(130,124)
  JVS(1222) = 0.06*B(291)
!   JVS(1223) = Jac_FULL(130,125)
  JVS(1223) = 0
!   JVS(1224) = Jac_FULL(130,126)
  JVS(1224) = 0
!   JVS(1225) = Jac_FULL(130,127)
  JVS(1225) = 0.06*B(292)- B(295)
!   JVS(1226) = Jac_FULL(130,128)
  JVS(1226) = B(285)
!   JVS(1227) = Jac_FULL(130,129)
  JVS(1227) = 0
!   JVS(1228) = Jac_FULL(130,130)
  JVS(1228) = - B(296)- B(463)- B(492)- B(494)- B(498)- B(506)- B(510)
!   JVS(1229) = Jac_FULL(130,131)
  JVS(1229) = 0
!   JVS(1230) = Jac_FULL(130,132)
  JVS(1230) = 0
!   JVS(1231) = Jac_FULL(130,133)
  JVS(1231) = B(310)
!   JVS(1232) = Jac_FULL(130,134)
  JVS(1232) = 0
!   JVS(1233) = Jac_FULL(130,135)
  JVS(1233) = 0
!   JVS(1234) = Jac_FULL(130,136)
  JVS(1234) = 0
!   JVS(1235) = Jac_FULL(130,137)
  JVS(1235) = 0
!   JVS(1236) = Jac_FULL(130,138)
  JVS(1236) = B(284)+ B(286)+ B(290)+ B(309)+ B(311)+ B(313)+ B(327)+ B(329)+ B(331)+ B(415)+ B(535)+ B(542)+ B(549)+ B(560)+ &
                     B(570)&
                &+ B(576)+ B(580)+ B(590)+ B(596)
!   JVS(1237) = Jac_FULL(131,104)
  JVS(1237) = B(358)+ 0.15*B(477)
!   JVS(1238) = Jac_FULL(131,114)
  JVS(1238) = - B(418)
!   JVS(1239) = Jac_FULL(131,118)
  JVS(1239) = B(348)
!   JVS(1240) = Jac_FULL(131,123)
  JVS(1240) = 0
!   JVS(1241) = Jac_FULL(131,124)
  JVS(1241) = - B(385)- B(387)- B(389)
!   JVS(1242) = Jac_FULL(131,125)
  JVS(1242) = B(336)
!   JVS(1243) = Jac_FULL(131,126)
  JVS(1243) = - B(338)+ B(349)
!   JVS(1244) = Jac_FULL(131,127)
  JVS(1244) = 0
!   JVS(1245) = Jac_FULL(131,128)
  JVS(1245) = - B(344)
!   JVS(1246) = Jac_FULL(131,129)
  JVS(1246) = 0
!   JVS(1247) = Jac_FULL(131,130)
  JVS(1247) = 0
!   JVS(1248) = Jac_FULL(131,131)
  JVS(1248) = - B(339)- 2*B(340)- 2*B(341)- B(345)- B(354)- B(356)- B(363)- B(365)- B(386)- B(388)- B(390)- B(419)- B(474)
!   JVS(1249) = Jac_FULL(131,132)
  JVS(1249) = - B(364)- B(366)
!   JVS(1250) = Jac_FULL(131,133)
  JVS(1250) = 0
!   JVS(1251) = Jac_FULL(131,134)
  JVS(1251) = - B(355)
!   JVS(1252) = Jac_FULL(131,135)
  JVS(1252) = - B(357)
!   JVS(1253) = Jac_FULL(131,136)
  JVS(1253) = 0
!   JVS(1254) = Jac_FULL(131,137)
  JVS(1254) = B(337)
!   JVS(1255) = Jac_FULL(131,138)
  JVS(1255) = 0
!   JVS(1256) = Jac_FULL(132,4)
  JVS(1256) = B(487)
!   JVS(1257) = Jac_FULL(132,37)
  JVS(1257) = B(478)
!   JVS(1258) = Jac_FULL(132,52)
  JVS(1258) = B(468)
!   JVS(1259) = Jac_FULL(132,58)
  JVS(1259) = B(441)
!   JVS(1260) = Jac_FULL(132,65)
  JVS(1260) = B(153)
!   JVS(1261) = Jac_FULL(132,66)
  JVS(1261) = 0.6*B(407)
!   JVS(1262) = Jac_FULL(132,70)
  JVS(1262) = B(179)+ B(373)
!   JVS(1263) = Jac_FULL(132,80)
  JVS(1263) = B(409)
!   JVS(1264) = Jac_FULL(132,86)
  JVS(1264) = B(445)
!   JVS(1265) = Jac_FULL(132,92)
  JVS(1265) = - B(193)
!   JVS(1266) = Jac_FULL(132,93)
  JVS(1266) = - B(209)
!   JVS(1267) = Jac_FULL(132,96)
  JVS(1267) = 0.07*B(183)
!   JVS(1268) = Jac_FULL(132,99)
  JVS(1268) = 0.75*B(109)+ B(111)+ B(308)
!   JVS(1269) = Jac_FULL(132,103)
  JVS(1269) = - B(221)
!   JVS(1270) = Jac_FULL(132,106)
  JVS(1270) = 0.7*B(123)+ B(361)
!   JVS(1271) = Jac_FULL(132,107)
  JVS(1271) = 0.08*B(257)
!   JVS(1272) = Jac_FULL(132,109)
  JVS(1272) = - B(267)
!   JVS(1273) = Jac_FULL(132,112)
  JVS(1273) = - B(239)
!   JVS(1274) = Jac_FULL(132,114)
  JVS(1274) = 0
!   JVS(1275) = Jac_FULL(132,117)
  JVS(1275) = - B(145)+ 0.82*B(169)
!   JVS(1276) = Jac_FULL(132,119)
  JVS(1276) = B(440)
!   JVS(1277) = Jac_FULL(132,120)
  JVS(1277) = 0.75*B(110)
!   JVS(1278) = Jac_FULL(132,121)
  JVS(1278) = B(159)+ B(163)- B(167)+ 0.82*B(170)+ 2*B(171)
!   JVS(1279) = Jac_FULL(132,122)
  JVS(1279) = 0
!   JVS(1280) = Jac_FULL(132,124)
  JVS(1280) = - B(314)
!   JVS(1281) = Jac_FULL(132,125)
  JVS(1281) = 0.07*B(184)+ 0.08*B(258)
!   JVS(1282) = Jac_FULL(132,126)
  JVS(1282) = 0
!   JVS(1283) = Jac_FULL(132,127)
  JVS(1283) = B(112)+ 0.7*B(124)+ B(154)+ B(180)+ 0.6*B(408)
!   JVS(1284) = Jac_FULL(132,128)
  JVS(1284) = - B(115)
!   JVS(1285) = Jac_FULL(132,129)
  JVS(1285) = 0
!   JVS(1286) = Jac_FULL(132,130)
  JVS(1286) = 0
!   JVS(1287) = Jac_FULL(132,131)
  JVS(1287) = - B(363)- B(365)
!   JVS(1288) = Jac_FULL(132,132)
  JVS(1288) = - B(116)- B(117)- B(119)- 2*B(121)- 2*B(122)- B(146)- B(168)- B(194)- B(210)- B(222)- B(240)- B(268)- B(315)- &
                     B(364)&
                &- B(366)
!   JVS(1289) = Jac_FULL(132,133)
  JVS(1289) = 0
!   JVS(1290) = Jac_FULL(132,134)
  JVS(1290) = - B(118)+ B(160)
!   JVS(1291) = Jac_FULL(132,135)
  JVS(1291) = 0
!   JVS(1292) = Jac_FULL(132,136)
  JVS(1292) = - B(120)+ B(164)
!   JVS(1293) = Jac_FULL(132,137)
  JVS(1293) = B(362)+ B(374)
!   JVS(1294) = Jac_FULL(132,138)
  JVS(1294) = B(309)
!   JVS(1295) = Jac_FULL(133,47)
  JVS(1295) = B(174)+ B(442)
!   JVS(1296) = Jac_FULL(133,61)
  JVS(1296) = B(458)
!   JVS(1297) = Jac_FULL(133,66)
  JVS(1297) = B(407)
!   JVS(1298) = Jac_FULL(133,67)
  JVS(1298) = B(448)
!   JVS(1299) = Jac_FULL(133,75)
  JVS(1299) = B(176)
!   JVS(1300) = Jac_FULL(133,82)
  JVS(1300) = 0.75*B(452)
!   JVS(1301) = Jac_FULL(133,88)
  JVS(1301) = B(113)
!   JVS(1302) = Jac_FULL(133,91)
  JVS(1302) = B(459)
!   JVS(1303) = Jac_FULL(133,92)
  JVS(1303) = 0.8*B(193)
!   JVS(1304) = Jac_FULL(133,93)
  JVS(1304) = B(207)+ 0.8*B(209)
!   JVS(1305) = Jac_FULL(133,96)
  JVS(1305) = 0.57*B(183)
!   JVS(1306) = Jac_FULL(133,99)
  JVS(1306) = 0.25*B(109)
!   JVS(1307) = Jac_FULL(133,100)
  JVS(1307) = 1.13875*B(135)
!   JVS(1308) = Jac_FULL(133,103)
  JVS(1308) = 0.68*B(221)
!   JVS(1309) = Jac_FULL(133,106)
  JVS(1309) = 0.3*B(123)+ B(312)+ B(434)
!   JVS(1310) = Jac_FULL(133,107)
  JVS(1310) = 0.58*B(257)
!   JVS(1311) = Jac_FULL(133,108)
  JVS(1311) = B(446)
!   JVS(1312) = Jac_FULL(133,109)
  JVS(1312) = 0.956*B(265)+ 1.25*B(267)+ B(269)
!   JVS(1313) = Jac_FULL(133,110)
  JVS(1313) = B(451)
!   JVS(1314) = Jac_FULL(133,112)
  JVS(1314) = 0.75*B(235)+ 1.125*B(239)+ 0.5*B(241)
!   JVS(1315) = Jac_FULL(133,114)
  JVS(1315) = B(401)+ B(405)+ B(414)+ B(416)
!   JVS(1316) = Jac_FULL(133,115)
  JVS(1316) = 0.98*B(199)
!   JVS(1317) = Jac_FULL(133,117)
  JVS(1317) = 0.75*B(145)
!   JVS(1318) = Jac_FULL(133,120)
  JVS(1318) = 0.25*B(110)
!   JVS(1319) = Jac_FULL(133,121)
  JVS(1319) = B(165)+ B(167)
!   JVS(1320) = Jac_FULL(133,122)
  JVS(1320) = 0
!   JVS(1321) = Jac_FULL(133,124)
  JVS(1321) = B(314)
!   JVS(1322) = Jac_FULL(133,125)
  JVS(1322) = 1.13875*B(136)+ 0.57*B(184)+ 0.58*B(258)
!   JVS(1323) = Jac_FULL(133,126)
  JVS(1323) = 0
!   JVS(1324) = Jac_FULL(133,127)
  JVS(1324) = B(114)+ 0.3*B(124)- B(125)+ B(175)+ B(177)+ B(402)+ B(408)
!   JVS(1325) = Jac_FULL(133,128)
  JVS(1325) = 0
!   JVS(1326) = Jac_FULL(133,129)
  JVS(1326) = 0
!   JVS(1327) = Jac_FULL(133,130)
  JVS(1327) = 0
!   JVS(1328) = Jac_FULL(133,131)
  JVS(1328) = B(363)+ B(365)
!   JVS(1329) = Jac_FULL(133,132)
  JVS(1329) = B(117)+ B(119)+ 2*B(121)+ B(122)+ 0.75*B(146)+ B(166)+ B(168)+ 0.8*B(194)+ 0.8*B(210)+ 0.68*B(222)+ 1.125*B(240)&
                &+ 1.25*B(268)+ B(315)+ B(364)+ B(366)
!   JVS(1330) = Jac_FULL(133,133)
  JVS(1330) = - B(126)- B(127)- B(310)- B(359)- B(435)- B(436)
!   JVS(1331) = Jac_FULL(133,134)
  JVS(1331) = B(118)+ 0.98*B(200)+ B(208)+ 0.75*B(236)+ 0.956*B(266)
!   JVS(1332) = Jac_FULL(133,135)
  JVS(1332) = 0
!   JVS(1333) = Jac_FULL(133,136)
  JVS(1333) = B(120)- B(128)+ B(406)
!   JVS(1334) = Jac_FULL(133,137)
  JVS(1334) = - B(360)+ B(417)
!   JVS(1335) = Jac_FULL(133,138)
  JVS(1335) = - B(311)+ B(313)+ B(415)
!   JVS(1336) = Jac_FULL(134,48)
  JVS(1336) = B(38)- B(48)
!   JVS(1337) = Jac_FULL(134,49)
  JVS(1337) = 2*B(42)
!   JVS(1338) = Jac_FULL(134,53)
  JVS(1338) = B(99)
!   JVS(1339) = Jac_FULL(134,68)
  JVS(1339) = B(431)
!   JVS(1340) = Jac_FULL(134,84)
  JVS(1340) = 0
!   JVS(1341) = Jac_FULL(134,85)
  JVS(1341) = B(97)+ B(100)+ B(101)+ B(107)
!   JVS(1342) = Jac_FULL(134,90)
  JVS(1342) = - B(86)- B(88)+ B(92)
!   JVS(1343) = Jac_FULL(134,92)
  JVS(1343) = - B(191)
!   JVS(1344) = Jac_FULL(134,93)
  JVS(1344) = - B(207)
!   JVS(1345) = Jac_FULL(134,97)
  JVS(1345) = - B(248)
!   JVS(1346) = Jac_FULL(134,103)
  JVS(1346) = - B(225)
!   JVS(1347) = Jac_FULL(134,109)
  JVS(1347) = - B(265)
!   JVS(1348) = Jac_FULL(134,111)
  JVS(1348) = 0
!   JVS(1349) = Jac_FULL(134,112)
  JVS(1349) = - B(235)
!   JVS(1350) = Jac_FULL(134,115)
  JVS(1350) = - B(199)
!   JVS(1351) = Jac_FULL(134,117)
  JVS(1351) = - B(141)
!   JVS(1352) = Jac_FULL(134,120)
  JVS(1352) = 2*B(43)
!   JVS(1353) = Jac_FULL(134,121)
  JVS(1353) = - B(159)
!   JVS(1354) = Jac_FULL(134,122)
  JVS(1354) = 0
!   JVS(1355) = Jac_FULL(134,124)
  JVS(1355) = - B(299)
!   JVS(1356) = Jac_FULL(134,125)
  JVS(1356) = - B(46)
!   JVS(1357) = Jac_FULL(134,126)
  JVS(1357) = B(50)
!   JVS(1358) = Jac_FULL(134,127)
  JVS(1358) = - B(61)+ B(98)
!   JVS(1359) = Jac_FULL(134,128)
  JVS(1359) = - B(63)
!   JVS(1360) = Jac_FULL(134,129)
  JVS(1360) = 0
!   JVS(1361) = Jac_FULL(134,130)
  JVS(1361) = 0
!   JVS(1362) = Jac_FULL(134,131)
  JVS(1362) = - B(354)
!   JVS(1363) = Jac_FULL(134,132)
  JVS(1363) = - B(117)
!   JVS(1364) = Jac_FULL(134,133)
  JVS(1364) = 0
!   JVS(1365) = Jac_FULL(134,134)
  JVS(1365) = - B(47)- B(49)- B(56)- B(62)- B(64)- B(87)- B(89)- B(118)- B(142)- B(160)- B(192)- B(200)- B(208)- B(226)- B(236)- &
                     B(249)&
                &- B(266)- B(300)- B(355)- B(427)
!   JVS(1366) = Jac_FULL(134,135)
  JVS(1366) = B(51)+ B(93)+ B(102)+ B(426)
!   JVS(1367) = Jac_FULL(134,136)
  JVS(1367) = - B(57)+ B(429)
!   JVS(1368) = Jac_FULL(134,137)
  JVS(1368) = 0
!   JVS(1369) = Jac_FULL(134,138)
  JVS(1369) = 0
!   JVS(1370) = Jac_FULL(135,1)
  JVS(1370) = B(476)
!   JVS(1371) = Jac_FULL(135,34)
  JVS(1371) = B(465)
!   JVS(1372) = Jac_FULL(135,47)
  JVS(1372) = B(174)+ B(442)
!   JVS(1373) = Jac_FULL(135,48)
  JVS(1373) = - B(54)
!   JVS(1374) = Jac_FULL(135,54)
  JVS(1374) = B(254)+ B(256)+ B(457)
!   JVS(1375) = Jac_FULL(135,60)
  JVS(1375) = B(217)+ B(449)
!   JVS(1376) = Jac_FULL(135,64)
  JVS(1376) = B(75)+ B(76)+ 0.667*B(433)
!   JVS(1377) = Jac_FULL(135,68)
  JVS(1377) = B(71)
!   JVS(1378) = Jac_FULL(135,75)
  JVS(1378) = B(176)+ B(178)+ B(443)
!   JVS(1379) = Jac_FULL(135,83)
  JVS(1379) = B(60)+ B(430)
!   JVS(1380) = Jac_FULL(135,85)
  JVS(1380) = - B(101)
!   JVS(1381) = Jac_FULL(135,90)
  JVS(1381) = - B(90)- B(92)
!   JVS(1382) = Jac_FULL(135,91)
  JVS(1382) = B(459)
!   JVS(1383) = Jac_FULL(135,92)
  JVS(1383) = 0.96*B(191)
!   JVS(1384) = Jac_FULL(135,93)
  JVS(1384) = B(207)
!   JVS(1385) = Jac_FULL(135,97)
  JVS(1385) = 0.985*B(248)
!   JVS(1386) = Jac_FULL(135,102)
  JVS(1386) = B(432)
!   JVS(1387) = Jac_FULL(135,103)
  JVS(1387) = 0.84*B(225)
!   JVS(1388) = Jac_FULL(135,104)
  JVS(1388) = B(358)+ 0.15*B(477)
!   JVS(1389) = Jac_FULL(135,107)
  JVS(1389) = 0
!   JVS(1390) = Jac_FULL(135,109)
  JVS(1390) = 0.956*B(265)
!   JVS(1391) = Jac_FULL(135,111)
  JVS(1391) = B(252)+ B(456)
!   JVS(1392) = Jac_FULL(135,112)
  JVS(1392) = B(235)- B(237)
!   JVS(1393) = Jac_FULL(135,114)
  JVS(1393) = 0
!   JVS(1394) = Jac_FULL(135,115)
  JVS(1394) = 0.98*B(199)
!   JVS(1395) = Jac_FULL(135,116)
  JVS(1395) = B(303)+ B(467)
!   JVS(1396) = Jac_FULL(135,117)
  JVS(1396) = B(141)+ B(143)
!   JVS(1397) = Jac_FULL(135,119)
  JVS(1397) = 0
!   JVS(1398) = Jac_FULL(135,121)
  JVS(1398) = B(159)- B(161)+ B(163)
!   JVS(1399) = Jac_FULL(135,123)
  JVS(1399) = 0
!   JVS(1400) = Jac_FULL(135,124)
  JVS(1400) = B(299)- B(301)
!   JVS(1401) = Jac_FULL(135,125)
  JVS(1401) = B(46)- B(52)
!   JVS(1402) = Jac_FULL(135,126)
  JVS(1402) = - B(50)
!   JVS(1403) = Jac_FULL(135,127)
  JVS(1403) = - B(65)+ B(72)+ B(77)+ B(175)+ B(177)+ B(218)+ B(253)+ B(255)
!   JVS(1404) = Jac_FULL(135,128)
  JVS(1404) = B(63)- B(67)+ B(69)
!   JVS(1405) = Jac_FULL(135,129)
  JVS(1405) = 0
!   JVS(1406) = Jac_FULL(135,130)
  JVS(1406) = 0
!   JVS(1407) = Jac_FULL(135,131)
  JVS(1407) = B(354)- B(356)
!   JVS(1408) = Jac_FULL(135,132)
  JVS(1408) = B(117)+ B(119)
!   JVS(1409) = Jac_FULL(135,133)
  JVS(1409) = 0
!   JVS(1410) = Jac_FULL(135,134)
  JVS(1410) = B(47)+ 2*B(56)+ B(64)+ B(118)+ B(142)+ B(160)+ 0.96*B(192)+ 0.98*B(200)+ B(208)+ 0.84*B(226)+ B(236)+ 0.985*B(249)&
                &+ 0.956*B(266)+ B(300)+ B(355)
!   JVS(1411) = Jac_FULL(135,135)
  JVS(1411) = - B(51)- B(53)- B(55)- B(58)- B(66)- B(68)- B(91)- B(93)- B(102)- B(162)- B(238)- B(302)- B(357)- B(426)
!   JVS(1412) = Jac_FULL(135,136)
  JVS(1412) = 2*B(57)- B(59)+ B(70)+ B(120)+ B(144)+ B(164)+ B(428)
!   JVS(1413) = Jac_FULL(135,137)
  JVS(1413) = 0
!   JVS(1414) = Jac_FULL(135,138)
  JVS(1414) = 0
!   JVS(1415) = Jac_FULL(136,64)
  JVS(1415) = 0.333*B(433)
!   JVS(1416) = Jac_FULL(136,83)
  JVS(1416) = B(60)+ B(430)
!   JVS(1417) = Jac_FULL(136,96)
  JVS(1417) = - B(187)
!   JVS(1418) = Jac_FULL(136,102)
  JVS(1418) = B(73)
!   JVS(1419) = Jac_FULL(136,104)
  JVS(1419) = B(352)+ 0.85*B(477)
!   JVS(1420) = Jac_FULL(136,107)
  JVS(1420) = - B(261)
!   JVS(1421) = Jac_FULL(136,114)
  JVS(1421) = - B(405)
!   JVS(1422) = Jac_FULL(136,116)
  JVS(1422) = B(304)+ B(306)+ B(466)
!   JVS(1423) = Jac_FULL(136,117)
  JVS(1423) = - B(143)
!   JVS(1424) = Jac_FULL(136,119)
  JVS(1424) = - B(151)
!   JVS(1425) = Jac_FULL(136,121)
  JVS(1425) = - B(163)
!   JVS(1426) = Jac_FULL(136,123)
  JVS(1426) = 0
!   JVS(1427) = Jac_FULL(136,124)
  JVS(1427) = 0
!   JVS(1428) = Jac_FULL(136,125)
  JVS(1428) = B(52)
!   JVS(1429) = Jac_FULL(136,126)
  JVS(1429) = B(305)
!   JVS(1430) = Jac_FULL(136,127)
  JVS(1430) = B(74)
!   JVS(1431) = Jac_FULL(136,128)
  JVS(1431) = - B(69)
!   JVS(1432) = Jac_FULL(136,129)
  JVS(1432) = 0
!   JVS(1433) = Jac_FULL(136,130)
  JVS(1433) = 0
!   JVS(1434) = Jac_FULL(136,131)
  JVS(1434) = 0
!   JVS(1435) = Jac_FULL(136,132)
  JVS(1435) = - B(119)
!   JVS(1436) = Jac_FULL(136,133)
  JVS(1436) = - B(127)
!   JVS(1437) = Jac_FULL(136,134)
  JVS(1437) = - B(56)
!   JVS(1438) = Jac_FULL(136,135)
  JVS(1438) = B(53)- B(58)
!   JVS(1439) = Jac_FULL(136,136)
  JVS(1439) = - B(57)- B(59)- B(70)- B(120)- B(128)- B(144)- B(152)- B(164)- B(188)- B(262)- B(406)- B(428)- B(429)
!   JVS(1440) = Jac_FULL(136,137)
  JVS(1440) = B(353)
!   JVS(1441) = Jac_FULL(136,138)
  JVS(1441) = B(307)
!   JVS(1442) = Jac_FULL(137,1)
  JVS(1442) = B(476)
!   JVS(1443) = Jac_FULL(137,2)
  JVS(1443) = B(483)
!   JVS(1444) = Jac_FULL(137,3)
  JVS(1444) = B(481)
!   JVS(1445) = Jac_FULL(137,28)
  JVS(1445) = 2*B(377)+ 2*B(479)
!   JVS(1446) = Jac_FULL(137,29)
  JVS(1446) = 3*B(375)+ 3*B(480)
!   JVS(1447) = Jac_FULL(137,36)
  JVS(1447) = B(397)+ B(484)
!   JVS(1448) = Jac_FULL(137,37)
  JVS(1448) = B(367)+ B(478)
!   JVS(1449) = Jac_FULL(137,38)
  JVS(1449) = B(393)+ B(485)
!   JVS(1450) = Jac_FULL(137,39)
  JVS(1450) = 2*B(395)+ 2*B(486)
!   JVS(1451) = Jac_FULL(137,70)
  JVS(1451) = - B(373)
!   JVS(1452) = Jac_FULL(137,78)
  JVS(1452) = - B(381)
!   JVS(1453) = Jac_FULL(137,89)
  JVS(1453) = - B(379)+ B(391)+ B(482)
!   JVS(1454) = Jac_FULL(137,100)
  JVS(1454) = - B(369)
!   JVS(1455) = Jac_FULL(137,101)
  JVS(1455) = B(350)+ B(383)+ 2*B(473)
!   JVS(1456) = Jac_FULL(137,104)
  JVS(1456) = - B(352)+ 0.85*B(477)
!   JVS(1457) = Jac_FULL(137,106)
  JVS(1457) = - B(361)
!   JVS(1458) = Jac_FULL(137,113)
  JVS(1458) = 0
!   JVS(1459) = Jac_FULL(137,114)
  JVS(1459) = - B(416)+ B(418)
!   JVS(1460) = Jac_FULL(137,116)
  JVS(1460) = 0
!   JVS(1461) = Jac_FULL(137,118)
  JVS(1461) = B(475)
!   JVS(1462) = Jac_FULL(137,119)
  JVS(1462) = - B(371)
!   JVS(1463) = Jac_FULL(137,121)
  JVS(1463) = 0
!   JVS(1464) = Jac_FULL(137,123)
  JVS(1464) = B(346)
!   JVS(1465) = Jac_FULL(137,124)
  JVS(1465) = B(385)+ B(387)
!   JVS(1466) = Jac_FULL(137,125)
  JVS(1466) = - B(336)
!   JVS(1467) = Jac_FULL(137,126)
  JVS(1467) = B(338)
!   JVS(1468) = Jac_FULL(137,127)
  JVS(1468) = B(347)+ B(351)+ B(368)+ 3*B(376)+ 2*B(378)+ B(394)+ 2*B(396)+ B(398)
!   JVS(1469) = Jac_FULL(137,128)
  JVS(1469) = - B(342)
!   JVS(1470) = Jac_FULL(137,129)
  JVS(1470) = 0
!   JVS(1471) = Jac_FULL(137,130)
  JVS(1471) = 0
!   JVS(1472) = Jac_FULL(137,131)
  JVS(1472) = B(339)+ 2*B(340)+ B(354)+ B(365)+ B(386)+ B(388)+ B(419)+ B(474)
!   JVS(1473) = Jac_FULL(137,132)
  JVS(1473) = B(366)
!   JVS(1474) = Jac_FULL(137,133)
  JVS(1474) = - B(359)
!   JVS(1475) = Jac_FULL(137,134)
  JVS(1475) = B(355)
!   JVS(1476) = Jac_FULL(137,135)
  JVS(1476) = 0
!   JVS(1477) = Jac_FULL(137,136)
  JVS(1477) = 0
!   JVS(1478) = Jac_FULL(137,137)
  JVS(1478) = - B(337)- B(343)- B(353)- B(360)- B(362)- B(370)- B(372)- B(374)- B(380)- B(382)- B(417)
!   JVS(1479) = Jac_FULL(137,138)
  JVS(1479) = B(384)+ B(392)
!   JVS(1480) = Jac_FULL(138,2)
  JVS(1480) = B(483)
!   JVS(1481) = Jac_FULL(138,19)
  JVS(1481) = 2*B(461)
!   JVS(1482) = Jac_FULL(138,23)
  JVS(1482) = 3*B(316)+ 4*B(469)
!   JVS(1483) = Jac_FULL(138,24)
  JVS(1483) = B(332)+ 2*B(472)
!   JVS(1484) = Jac_FULL(138,25)
  JVS(1484) = 2*B(564)
!   JVS(1485) = Jac_FULL(138,26)
  JVS(1485) = B(584)
!   JVS(1486) = Jac_FULL(138,27)
  JVS(1486) = 2*B(334)+ 3*B(471)
!   JVS(1487) = Jac_FULL(138,33)
  JVS(1487) = 1.6*B(543)+ 3*B(545)
!   JVS(1488) = Jac_FULL(138,34)
  JVS(1488) = B(465)
!   JVS(1489) = Jac_FULL(138,36)
  JVS(1489) = B(397)+ B(484)
!   JVS(1490) = Jac_FULL(138,38)
  JVS(1490) = 2*B(393)+ 2*B(485)
!   JVS(1491) = Jac_FULL(138,39)
  JVS(1491) = B(395)+ B(486)
!   JVS(1492) = Jac_FULL(138,43)
  JVS(1492) = - B(548)+ 2*B(550)
!   JVS(1493) = Jac_FULL(138,44)
  JVS(1493) = 3*B(322)+ 3*B(324)+ 3*B(470)
!   JVS(1494) = Jac_FULL(138,45)
  JVS(1494) = 3*B(577)+ 2*B(579)+ 3*B(581)
!   JVS(1495) = Jac_FULL(138,52)
  JVS(1495) = B(318)+ B(320)+ B(468)
!   JVS(1496) = Jac_FULL(138,56)
  JVS(1496) = - B(595)
!   JVS(1497) = Jac_FULL(138,69)
  JVS(1497) = - B(541)
!   JVS(1498) = Jac_FULL(138,70)
  JVS(1498) = - B(330)
!   JVS(1499) = Jac_FULL(138,71)
  JVS(1499) = 0.69*B(555)- B(559)+ 2*B(561)
!   JVS(1500) = Jac_FULL(138,72)
  JVS(1500) = - B(569)
!   JVS(1501) = Jac_FULL(138,73)
  JVS(1501) = - B(575)
!   JVS(1502) = Jac_FULL(138,74)
  JVS(1502) = - B(589)
!   JVS(1503) = Jac_FULL(138,77)
  JVS(1503) = 0.17*B(530)- B(534)+ B(536)
!   JVS(1504) = Jac_FULL(138,78)
  JVS(1504) = B(381)+ 2*B(460)
!   JVS(1505) = Jac_FULL(138,83)
  JVS(1505) = 0
!   JVS(1506) = Jac_FULL(138,87)
  JVS(1506) = - B(289)
!   JVS(1507) = Jac_FULL(138,89)
  JVS(1507) = B(379)- B(391)+ B(482)
!   JVS(1508) = Jac_FULL(138,98)
  JVS(1508) = - B(283)
!   JVS(1509) = Jac_FULL(138,99)
  JVS(1509) = - B(308)
!   JVS(1510) = Jac_FULL(138,100)
  JVS(1510) = - B(326)
!   JVS(1511) = Jac_FULL(138,101)
  JVS(1511) = - B(383)
!   JVS(1512) = Jac_FULL(138,104)
  JVS(1512) = 0
!   JVS(1513) = Jac_FULL(138,106)
  JVS(1513) = - B(312)
!   JVS(1514) = Jac_FULL(138,107)
  JVS(1514) = 0
!   JVS(1515) = Jac_FULL(138,113)
  JVS(1515) = B(464)
!   JVS(1516) = Jac_FULL(138,114)
  JVS(1516) = - B(414)
!   JVS(1517) = Jac_FULL(138,116)
  JVS(1517) = - B(306)+ B(466)
!   JVS(1518) = Jac_FULL(138,118)
  JVS(1518) = 0
!   JVS(1519) = Jac_FULL(138,119)
  JVS(1519) = - B(328)
!   JVS(1520) = Jac_FULL(138,120)
  JVS(1520) = 3*B(317)+ B(319)+ 3*B(323)+ B(333)+ 2*B(335)+ 0.17*B(531)+ 1.6*B(544)+ 0.69*B(556)
!   JVS(1521) = Jac_FULL(138,121)
  JVS(1521) = 0
!   JVS(1522) = Jac_FULL(138,122)
  JVS(1522) = 0
!   JVS(1523) = Jac_FULL(138,123)
  JVS(1523) = 0
!   JVS(1524) = Jac_FULL(138,124)
  JVS(1524) = B(276)+ 2*B(279)+ B(280)+ 0.94*B(291)+ B(299)+ B(314)+ B(387)
!   JVS(1525) = Jac_FULL(138,125)
  JVS(1525) = - B(274)
!   JVS(1526) = Jac_FULL(138,126)
  JVS(1526) = B(277)
!   JVS(1527) = Jac_FULL(138,127)
  JVS(1527) = 0.94*B(292)+ B(295)+ B(321)+ 3*B(325)+ 2*B(394)+ B(396)+ B(398)+ 3*B(578)
!   JVS(1528) = Jac_FULL(138,128)
  JVS(1528) = - B(285)- B(287)
!   JVS(1529) = Jac_FULL(138,129)
  JVS(1529) = 0
!   JVS(1530) = Jac_FULL(138,130)
  JVS(1530) = B(296)+ B(463)
!   JVS(1531) = Jac_FULL(138,131)
  JVS(1531) = B(388)
!   JVS(1532) = Jac_FULL(138,132)
  JVS(1532) = B(315)
!   JVS(1533) = Jac_FULL(138,133)
  JVS(1533) = - B(310)
!   JVS(1534) = Jac_FULL(138,134)
  JVS(1534) = B(300)
!   JVS(1535) = Jac_FULL(138,135)
  JVS(1535) = 0
!   JVS(1536) = Jac_FULL(138,136)
  JVS(1536) = 0
!   JVS(1537) = Jac_FULL(138,137)
  JVS(1537) = B(380)+ B(382)
!   JVS(1538) = Jac_FULL(138,138)
  JVS(1538) = - B(275)- B(284)- B(286)- B(288)- B(290)- B(307)- B(309)- B(311)- B(313)- B(327)- B(329)- B(331)- B(384)- B(392)- &
                     B(415)&
                &- B(535)- B(542)- B(549)- B(560)- B(570)- B(576)+ 2*B(580)- B(590)- B(596)
      
END SUBROUTINE Jac_SP
 
SUBROUTINE Update_RCONST()
 integer         :: j,k

  k = is

!   Begin INLINED RCONST


!  end of USE statements

!  start of executable statements
!  define some rate constants here if the expressions are too long
!  for kpp or if they are used more than once
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &
!    - - - - - - - - - - - -
!  inorganic and C1 chemistry:
  k_HO2_HO2    = (3.0E-13 *EXP(460. / temp(k))+ 2.1E-33 *EXP(920. / temp(k)) *cair(k)) *&
                 (1.+ 1.4E-21 *EXP(2200. / temp(k)) *C(ind_H2O))
  k_NO3_NO2    = k_3rd(temp(k) , cair(k) , 2.4E-30 , 3.0 , 1.6E-12 , - 0.1 , 0.6)
  k_NO2_HO2    = k_3rd(temp(k) , cair(k) , 1.9E-31 , 3.4 , 4.0E-12 , 0.3 , 0.6)
  k_HNO3_OH    = 1.32E-14 *EXP(527. / temp(k)) +  1. /  &  !  "All data" in Tab. 1 of ref3325
                (1. / (7.39E-32 *EXP(453. / temp(k)) *cair(k)) +  &
                 1. / (9.73E-17 *EXP(1910. / temp(k))))!  15 % ref3325 ,  p. 2389
  k_CH3OOH_OH  = 5.3E-12 *EXP(190. / temp(k))
  k_CH3CO2H_OH = 4.0E-14 *EXP(850. / temp(k))
  k_ClO_ClO    = k_3rd(temp(k) , cair(k) , 1.9E-32 , 3.6 , 3.7E-12 , 1.6 , 0.6)
  k_BrO_NO2    = k_3rd_iupac(temp(k) , cair(k) , 4.7E-31 , 3.1 , 1.8E-11 , 0.0 , 0.4)
!  JPL: k_BrO_NO2   = k_3rd(temp(k) , cair(k) , 5.2E-31 , 3.2 , 6.9E-12 , 2.9 , 0.6)
  k_I_NO2      = k_3rd_iupac(temp(k) , cair(k) , 3.0E-31 , 1.0 , 6.6E-11 , 0.0 , 0.63)
!  for numerical reasons ,  the expression is multiplied by 1e30 / 1e30
  k_DMS_OH     = 1.E-9 *EXP(5820. / temp(k)) *C(ind_O2) /  &
                 (1.E30+ 5. *EXP(6280. / temp(k)) *C(ind_O2))
  k_CH2OO_SO2  = 3.66E-11  !  average of 3.9E-11 +  3.42E-11
  k_O3s = (1.7E-12 *EXP(- 940. / temp(k))) *C(ind_OH) &   !  <G2104>
        +  (1.E-14 *EXP(- 490. / temp(k))) *C(ind_HO2) &   !  <G2107>
        +  jx (k,ip_O1D)  *2.2E-10  *C(ind_H2O) &       !
         / (3.2E-11 *EXP(70. / temp(k)) *C(ind_O2)   &
           +  1.8E-11 *EXP(110. / temp(k)) *C(ind_N2) &
           +  2.2E-10 *C(ind_H2O))
!  new methane chemistry:
!  branching ratio for methyl nitrate according to Butkovskaya et al. ,
!  (ref3177) but reduced according to Flocke et al. (ref3164)
!  fit of data according to Lindemann- Hinshelwood scheme by J. Crowley
!  http: /  / iupac.pole-ether.fr / datasheets / pdf / ROO_1_CH3O2_NO.pdf
  beta_null_CH3NO3 = 0.00295 +  5.15E-22 *cair(k) *(temp(k) / 298) **(7.4)
  beta_inf_CH3NO3  = 0.022
  beta_CH3NO3      = (beta_null_CH3NO3  *beta_inf_CH3NO3)  / &
                     (beta_null_CH3NO3 +  beta_inf_CH3NO3)  /  10.
  k_NO2_CH3O2      = k_3rd(temp(k) , cair(k) , 1.0E-30 , 4.8 , 7.2E-12 , 2.1 , 0.6)
  k_C6H5O2_NO2     = k_NO2_CH3O2  !  Consistent with ref3167 that set 1E-12 as lower limit at 298 K and 1 bar.
  k_CH2OO_NO2          = 4.25E-12  !  average of 7.E-12 and 1.5E-12
!  branching ratio for ethylnitrate formation according to Butkovskaya ref3170
!  ratio transformed from beta = k1b / k1a to beta_C2H5NO3 = (1- (1+ beta)^(- 1))
  beta_C2H5NO3    = (1- 1 / (1+ 1.E-2 *(3.88e-3 *cair(k) / 2.46e19 *760.+ .365) *(1+ 1500. *(1 / temp(k) - 1 / 298.))))
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &
!    - - - - - - - - - - - -
!  only for mim1 ,  see mim1.rpl:
!  op_kg_20110805+  for HO2 +  NO - > HNO3 (butkovskaya_ *.rpl)
  alpha_NO_HO2 = C(ind_H2O) *6.6E-27 *temp(k) *EXP(3700. / temp(k))
  beta_NO_HO2  = MAX(((530. / temp(k))+ (press(k) *4.8004E-6)- 1.73) *0.01 , 0._dp)
  k0_NO_HO2    = 3.5E-12 *EXP(250. / temp(k))
!  without humidity correction
  k2d_NO_HO2   = (beta_NO_HO2 *k0_NO_HO2) / (1.+ beta_NO_HO2)
  k1d_NO_HO2   = k0_NO_HO2 -  k2d_NO_HO2
!  with humidity correction
  k2w_NO_HO2   = (beta_NO_HO2 *k0_NO_HO2 *(1.+ 42. *alpha_NO_HO2))/  &
                 ((1.+ alpha_NO_HO2) *(1.+ beta_NO_HO2))
  k1w_NO_HO2   = k0_NO_HO2 -  k2w_NO_HO2
!  op_kg_20110805-
  k_PrO2_HO2   = 1.9E-13 *EXP(1300. / temp(k))
  k_PrO2_NO    = 2.7E-12 *EXP(360. / temp(k))
  k_PrO2_CH3O2 = 9.46E-14 *EXP(431. / temp(k))
  f_BrO_CH3O2 = 0.8 / 1.1  !  0.8+  / - 0.2
!  end of mim1 block
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - &
!    - - - - - - - - - - - -
  k_CH3CO3_NO2 = k_3rd(temp(k) , cair(k) , 9.7E-29 , 5.6 , 9.3E-12 , 1.5 , 0.6)
  k_PAN_M      = k_CH3CO3_NO2 / (9.0E-29 *EXP(14000. / temp(k)))
!  rate coefficients from the MCM:
  KDEC    = 1.E6  !  moved here from parameters to avoid renaming to k_dec
!  required by medina parser for parameters
  KRO2NO  = 2.54E-12 *EXP(360. / temp(k))
  KAPNO   = 8.10E-12 *EXP(270. / temp(k))   !  CH3CO3 +  NO
  KRO2NO3 = 2.30E-12  !  ref2419
  KNO3AL  = 1.4E-12 *EXP(- 1900. / temp(k))
!  updated rate constant for the RCO3+ HO2 reactions
!  (GroC ,  PhD Thesis ,  ref3195)
!  except CH3CO3+ HO2 that is taken from GroC ref3156
  KAPHO2  = 5.20E-13 *EXP(980. / temp(k)) *1.865  !  at 298K k(hoch2co3 +  ho2) = 2.6( -  0.4)E-11 scaled with IUPAC T- dependent &
!    expression
!  Rate constants for the permutation reaction formalism
!  calculated as in the permutation reaction formalism of MCM
!  k_RO2 = 2. *(KRO2self *k_CH3O2)^0.5
!  k_RO2self are taken from IUPAC recommendations unless noted otherwise
  k_CH3O2     = 1.03E-13 *EXP(365. / temp(k))  !  CH3O2 +  CH3O2 (IUPAC)
!  Acyl peroxy radicals
  k_RO2RCO3   = 2. *2.E-12 *EXP(500. / temp(k))  !  K17 for the CH3CO3 +  CH3O2 reaction directly taken from ref. 1759. Old MCM &
!    value 1.00E-11 at 298 K.
!  Alkyl radicals (unsubstituted ,  > C3)
  k_RO2pRO2   = 2. *(1.E-12 *k_CH3O2) **(.5)                       !  Model compound (CH3)2CHCH2O2 (isobutyl ,  ref3210). Old MCM &
!    value 1.30E-12 at 298 K.
  k_RO2sRO2   = 2. *(1.6E-12 *EXP(- 2200. / temp(k)) *k_CH3O2) **(.5) !  Model compound i- C3H7O2 (ref3175). Old MCM value &
!    2.50E-13 at 298 K.
  k_RO2tRO2   = 2. *3.8E-13 *EXP(- 1430. / temp(k))                 !  Model reaction t- C4H9O2 +  CH3O2. Old MCM value 6.70E-15 &
!    at 298 K.
!  Alkyl radical with either O or Cl in beta
  k_RO2pORO2  = 2. *7.5E-13 *EXP(500. / temp(k))                       !  Model reaction CH3COCH2O2 +  CH3O2 (ref3175). Old MCM &
!    value 2.00E-12
  k_RO2sORO2  = 2. *(7.7E-15 *EXP(1330. / temp(k)) *k_CH3O2) **(.5)  !  Model compound CH3CH(OH)CH(O2)CH3 (ref3175). Old MCM &
!    value 8.80E-13 at 298 K.
  k_RO2tORO2  = 2. *(4.7E-13 *EXP(- 1420. / temp(k)) *k_CH3O2) **(.5)     !  Model compound (CH3)2C(OH)CO2(CH3)2 (ref3175). Old &
!    MCM value 9.20E-14 at 298 K.
!  Allyl-  and beta- hydroxy alkyl radicals
  k_RO2LISOPACO2 = 2. *((2.8E-12+ 3.9E-12) / 2. *k_CH3O2) **(.5)   !  Model compound ISOPAO2 and ISOPCO2. Old MCM value 2.0E-12 &
!    at 298 K. K15 average from MCM ref. 2419
  k_RO2ISOPBO2   = 2. *(6.9E-14 *k_CH3O2) **(.5)                   !  Model compound ISOPBO2. Old MCM value 8.0E-13 at 298 K. K15 &
!    from MCM ref. 2419
  k_RO2ISOPDO2   = 2. *(4.8E-12 *k_CH3O2) **(.5)                   !  Model compound ISOPDO2. Old MCM value 8.0E-13 at 298 K. K15 &
!    from MCM ref. 2419
!  T- dependent H- abstraction group rate constants
  k_p          = 4.49E-18 *temp(k) *temp(k) *EXP(- 320. / temp(k))  !  Kwok and Atkinson ,  ref3194
  k_s          = 4.50E-18 *temp(k) *temp(k) *EXP(253. / temp(k))   !  Kwok and Atkinson ,  ref3194
  k_t          = 2.12E-18 *temp(k) *temp(k) *EXP(696. / temp(k))   !  Kwok and Atkinson ,  ref3194
  k_ROHRO      = 2.1E-18 *temp(k) *temp(k) *EXP(- 85. / temp(k))    !  Kwok and Atkinson ,  ref3194
  k_ROOHRO     = 0.6 *k_CH3OOH_OH
  k_CO2H       = 0.7 *k_CH3CO2H_OH
!  T- dependent OH- addition rate constants
  k_adp        = 4.5E-12 *(temp(k) / 300.) **(- 0.85)                         !  1 / 2 k(OH +  C2H4) ,  high pressure limit IUPAC &
!    as in Peeters et al. 2007
  k_ads        = 0.25 *(1.1E-11 *EXP(485. / temp(k))+ 1.0E-11 *EXP(553. / temp(k))) !  1 / 2  *k_av(OH +  cis / trans 2- butene) &
!    as in Peeters et al. 2007
  k_adt        = 1.922E-11 *EXP(450. / temp(k)) -  k_ads                     !  k(OH +  2- methyl- 2- butene) -  k_ads
  k_hsb         = 1.52E11 *EXP(- 9512. / temp(k)) *1.  !  1 , 5- H- shift Peeters et al(2009) 0.003533 s- 1 at 303K
  k_hsd         = 6.08E10 *EXP(- 8893. / temp(k)) *1.  !  1 , 5- H- shift Peeters et al(2009) 0.0109 s- 1 at 303K
!  1 , 6- H- shift for ZISOPAO2 and ZISOPCO2
  k_16hsz14     = 2.28E9  *exp(- 6764 / temp(k))  *0.28  !  0.07035 s- 1 at 295K  !  as in SI Taraborrelli et al. ,  Nat. Geosc. &
!    2012
  k_16hsz41     = 1.23E9  *exp(- 6186 / temp(k))  *0.28  !  0.2692 s- 1 at 295K
  k_16hs        = (k_16hsz14 *k_16hsz41) **(.5)
  k_15hsdhb     = 5.                              !  1 , 5- H- shift assisted by double H- bonding after Peeters and &
!    MC<ller(2010)
!  1 , 4- H- shift involving an aldehydic hydrogen
  k_14hsal = 2.9E7 *exp(- 5297 / temp(k))  !  Crounse ref3331 barrier 19 kcal / mol => ~ 0.5 s- 1 at 295K
! k_14hsal      = 2.9E7 *exp(- 1 *(5297+ 705) / temp(k))  !  CCSD(T) / aug- Schartz4(DT) /  / M05- 2X / 6- 311G(d , p))yields &
!    a barrier of 20.39 (L. Vereecken 2013) => ~ 0.04 s- 1 at 295K
  k_15hs24vynal = k_16hsz14  *exp(- 3500 / (1.987 *temp(k))) !  adding 3.5 kcal to the barrier of 1 , 6- H- shift as from SAR by &
!    L. Vereecken
  k_15hs42vynal = k_16hsz41  *exp(- 3500 / (1.987 *temp(k)))
  k_hydec       = 6.e14 *exp(- 16000. / (1.98588 *temp(k))) !  in cal Ea from Nguyen et al(2009) A from Baulch et al(2005)
!  Rate constants for the formic acid production via vinyl alcohol. Also used for some bigger and saturated aldehydes.
  k_CH2CHOH_OH_HCOOH = 4.3E-11  !  ref3179
  k_CH2CHOH_OH_ALD   = 2.4E-11  !  ref3179
  k_CH2CHOH_HCOOH    = 4.67E-26 *(temp(k)) **(3.286) *EXP(4509. / (1.987 *temp(k))) !  ref3162
  k_ALD_HCOOH        = 1.17E-19 *(temp(k)) **(1.209) *EXP(- 556. / (1.987 *temp(k))) !  ref3162
  j_IC3H7NO3   = 3.7 *jx (k,ip_PAN)
  j_ACETOL     = 0.65 *0.11 *jx (k,ip_CHOH)
  j_HPALD      = (jx (k,ip_CH3OOH)+  jx (k,ip_MACR) / (2. *1.95E-3)) !  mcm.leeds.ac.uk / MCM / parameters / photolysis.htt
  j_ketene     = jx (k,ip_MVK) / 0.004
  RO2 = 0.
  RO2 = RO2 +  C(ind_CH3O2)
  RO2 = RO2 +  C(ind_CH3CO3)
  RO2 = RO2 +  C(ind_C2H5O2)
  RO2 = RO2 +  C(ind_CH3COCH2O2)
  RO2 = RO2 +  C(ind_IC3H7O2)
  RO2 = RO2 +  C(ind_LC4H9O2)
  RO2 = RO2 +  C(ind_LMEKO2)
!  MBO- related
!  APINENE-related:
!  BPINENE-related:
!  aromatics- related:
!  pseudo first order rate constants     !  occurence
  k1_RO2RCO3      = RO2  *k_RO2RCO3       !  51
  k1_RO2pRO2      = RO2  *k_RO2pRO2       !  5
  k1_RO2sRO2      = RO2  *k_RO2sRO2       !  11+ 1
  k1_RO2tRO2      = RO2  *k_RO2tRO2       !  13+ 1
  k1_RO2pORO2     = RO2  *k_RO2pORO2      !  11+ 2
  k1_RO2sORO2     = RO2  *k_RO2sORO2      !  33+ 2
  k1_RO2tORO2     = RO2  *k_RO2tORO2      !  17
  k1_RO2LISOPACO2 = RO2  *k_RO2LISOPACO2  !  3
  k1_RO2ISOPBO2   = RO2  *k_RO2ISOPBO2    !  1
  k1_RO2ISOPDO2   = RO2  *k_RO2ISOPDO2    !  13

!   End INLINED RCONST

  RCONST(1) = (3.3E-11 *EXP(55. / temp(k)))
  RCONST(2) = (6.0E-34 *((temp(k) / 300.) **(- 2.4))*cair(k))
!   RCONST(3) = constant rate coefficient
  RCONST(4) = (8.0E-12 *EXP(- 2060. / temp(k)))
  RCONST(5) = (k_3rd(temp(k) , cair(k) , 4.4E-32 , 1.3 , 7.5E-11 , - 0.2 , 0.6))
  RCONST(6) = (1.4E-10 *EXP(- 470. / temp(k)))
!   RCONST(7) = constant rate coefficient
  RCONST(8) = (1.8E-11 *EXP(180. / temp(k)))
  RCONST(9) = (1.7E-12 *EXP(- 940. / temp(k)))
  RCONST(10) = (2.8E-12 *EXP(- 1800. / temp(k)))
  RCONST(11) = (3.E-11 *EXP(200. / temp(k)))
  RCONST(12) = (1.E-14 *EXP(- 490. / temp(k)))
!   RCONST(13) = constant rate coefficient
!   RCONST(14) = constant rate coefficient
!   RCONST(15) = constant rate coefficient
  RCONST(16) = (4.8E-11 *EXP(250. / temp(k)))
  RCONST(17) = (k_HO2_HO2)
  RCONST(18) = (1.63E-10 *EXP(60. / temp(k)))
!   RCONST(19) = constant rate coefficient
  RCONST(20) = (1.5E-11 *EXP(- 3600. / temp(k)))
  RCONST(21) = (2.15E-11 *EXP(110. / temp(k)))
  RCONST(22) = (7.259E-11 *EXP(20. / temp(k)))
  RCONST(23) = (4.641E-11 *EXP(20. / temp(k)))
  RCONST(24) = (3.0E-12 *EXP(- 1500. / temp(k)))
  RCONST(25) = (2.1E-11 *EXP(100. / temp(k)))
  RCONST(26) = (5.1E-12 *EXP(210. / temp(k)))
  RCONST(27) = (1.2E-13 *EXP(- 2450. / temp(k)))
  RCONST(28) = (5.8E-12 *EXP(220. / temp(k)))
  RCONST(29) = (1.5E-11 *EXP(170. / temp(k)))
  RCONST(30) = (k_NO3_NO2)
  RCONST(31) = (k_NO3_NO2 / (5.8E-27 *EXP(10840. / temp(k))))
  RCONST(32) = (k_3rd(temp(k) , cair(k) , 7.0E-31 , 2.6 , 3.6E-11 , 0.1 , 0.6))
  RCONST(33) = (3.3E-12 *EXP(270. / temp(k)))
  RCONST(34) = (k_3rd(temp(k) , cair(k) , 1.8E-30 , 3.0 , 2.8E-11 , 0. , 0.6))
  RCONST(35) = (k_NO2_HO2)
!   RCONST(36) = constant rate coefficient
  RCONST(37) = (1.8E-11 *EXP(- 390. / temp(k)))
  RCONST(38) = (k_HNO3_OH)
  RCONST(39) = (k_NO2_HO2 / (2.1E-27 *EXP(10900. / temp(k))))
  RCONST(40) = (1.3E-12 *EXP(380. / temp(k)))
  RCONST(41) = (1.7E-12 *EXP(- 710. / temp(k)))
  RCONST(42) = (4.3E-12 *EXP(- 930. / temp(k)))
  RCONST(43) = (4.8E-07 *EXP(- 628. / temp(k)) *(temp(k)) **(- 1.32))
  RCONST(44) = (9.4E-09 *EXP(- 356. / temp(k)) *(temp(k)) **(- 1.12))
  RCONST(45) = (1.92E-12 *((temp(k) / 298.) **(- 1.5)))
  RCONST(46) = (1.41E-11 *((temp(k) / 298.) **(- 1.5)))
  RCONST(47) = (1.2E-11 *((temp(k) / 298.) **(- 2.0)))
  RCONST(48) = (0.8E-11 *((temp(k) / 298.) **(- 2.0)))
!   RCONST(49) = constant rate coefficient
!   RCONST(50) = constant rate coefficient
  RCONST(51) = (8.0E-11 *EXP(- 500. / temp(k)))
  RCONST(52) = (1.66E-12 *EXP(- 1500. / temp(k)))
  RCONST(53) = (1.0E-12 *EXP(- 1000. / temp(k)))
!   RCONST(54) = constant rate coefficient
  RCONST(55) = (4.13E-11 *EXP(- 2138. / temp(k)))
  RCONST(56) = (3.65E-14 *EXP(- 4600. / temp(k)))
!   RCONST(57) = constant rate coefficient
  RCONST(58) = (1.85E-20 *EXP(2.82 *LOG(temp(k))- 987. / temp(k)))
  RCONST(59) = (2.9E-12 *EXP(- 345. / temp(k)))
  RCONST(60) = (4.1E-13 *EXP(750. / temp(k)))
  RCONST(61) = (2.8E-12 *EXP(300. / temp(k)))
!   RCONST(62) = constant rate coefficient
  RCONST(63) = (9.5E-14 *EXP(390. / temp(k)) / (1.+ 1. / 26.2 *EXP(1130. / temp(k))))
  RCONST(64) = (9.5E-14 *EXP(390. / temp(k)) / (1.+ 26.2 *EXP(- 1130. / temp(k))))
  RCONST(65) = (k_CH3OOH_OH)
  RCONST(66) = (9.52E-18 *EXP(2.03 *LOG(temp(k))+ 636. / temp(k)))
  RCONST(67) = (3.4E-13 *EXP(- 1900. / temp(k)))
  RCONST(68) = ((1.57E-13+ cair(k) *3.54E-33))
!   RCONST(69) = constant rate coefficient
  RCONST(70) = (1.49E-17 *temp(k) *temp(k) *EXP(- 499. / temp(k)))
  RCONST(71) = (1.2E-14 *EXP(- 2630. / temp(k)))
  RCONST(72) = (k_3rd(temp(k) , cair(k) , 1.0E-28 , 4.5 , 7.5E-12 , 0.85 , 0.6))
  RCONST(73) = (7.5E-13 *EXP(700. / temp(k)))
  RCONST(74) = (2.6E-12 *EXP(365. / temp(k)))
!   RCONST(75) = constant rate coefficient
  RCONST(76) = (1.6E-13 *EXP(195. / temp(k)))
  RCONST(77) = (k_CH3OOH_OH)
  RCONST(78) = (4.4E-12 *EXP(365. / temp(k)))
  RCONST(79) = (1.4E-12 *EXP(- 1900. / temp(k)))
  RCONST(80) = (4.2E-14 *EXP(855. / temp(k)))
  RCONST(81) = (4.3E-13 *EXP(1040. / temp(k)) / (1.+ 1. / 37. *EXP(660. / temp(k))))
  RCONST(82) = (4.3E-13 *EXP(1040. / temp(k)) / (1.+ 37. *EXP(- 660. / temp(k))))
  RCONST(83) = (8.1E-12 *EXP(270. / temp(k)))
  RCONST(84) = (k_CH3CO3_NO2)
!   RCONST(85) = constant rate coefficient
  RCONST(86) = (0.9 *2.0E-12 *EXP(500. / temp(k)))
  RCONST(87) = (0.1 *2.0E-12 *EXP(500. / temp(k)))
  RCONST(88) = (4.9E-12 *EXP(211. / temp(k)))
  RCONST(89) = (2.5E-12 *EXP(500. / temp(k)))
  RCONST(90) = (0.6 *k_CH3OOH_OH)
  RCONST(91) = (5.6E-12 *EXP(270. / temp(k)))
  RCONST(92) = (9.50E-13 *EXP(- 650. / temp(k)))
  RCONST(93) = (k_PAN_M)
  RCONST(94) = (k_3rd(temp(k) , cair(k) , 5.5e-30 , 0.0 , 8.3e-13 , - 2. , 0.6))
  RCONST(95) = (1.65E-17 *temp(k) *temp(k) *EXP(- 87. / temp(k)))
  RCONST(96) = (6.5E-15 *EXP(- 1900. / temp(k)))
  RCONST(97) = (k_3rd(temp(k) , cair(k) , 8.E-27 , 3.5 , 3.E-11 , 0. , 0.5))
  RCONST(98) = (4.6E-13 *EXP(- 1155. / temp(k)))
  RCONST(99) = (k_PrO2_HO2)
  RCONST(100) = (k_PrO2_NO)
  RCONST(101) = (k_PrO2_CH3O2)
  RCONST(102) = (k_CH3OOH_OH)
  RCONST(103) = (6.5E-13 *EXP(650. / temp(k)))
  RCONST(104) = (4.2E-12 *EXP(180. / temp(k)))
  RCONST(105) = (3.8E-12 *EXP(200. / temp(k)))
  RCONST(106) = (1.33E-13+ 3.82E-11 *EXP(- 2000. / temp(k)))
  RCONST(107) = (8.6E-13 *EXP(700. / temp(k)))
  RCONST(108) = (2.9E-12 *EXP(300. / temp(k)))
  RCONST(109) = (7.5E-13 *EXP(500. / temp(k)))
  RCONST(110) = (k_CH3OOH_OH)
  RCONST(111) = (2.15E-12 *EXP(305. / temp(k)))
  RCONST(112) = (8.4E-13 *EXP(830. / temp(k)))
  RCONST(113) = (6.2E-13 *EXP(- 230. / temp(k)))
  RCONST(114) = (1.81E-17 *temp(k) *temp(k) *EXP(114. / temp(k)))
  RCONST(115) = (k_PrO2_CH3O2)
  RCONST(116) = (k_PrO2_HO2)
  RCONST(117) = (k_PrO2_NO)
  RCONST(118) = (k_CH3OOH_OH)
  RCONST(119) = (.5 *(1.36E-15 *EXP(- 2112. / temp(k))+ 7.51E-16 *EXP(- 1521. / temp(k))))
  RCONST(120) = (.5 *(4.1E-12 *EXP(452. / temp(k))+ 1.9E-11 *EXP(175. / temp(k))))
  RCONST(121) = (1.82E-13 *EXP(1300. / temp(k)))
  RCONST(122) = (2.54E-12 *EXP(360. / temp(k)))
  RCONST(123) = (.25 *k_3rd(temp(k) , cair(k) , 9.7E-29 , 5.6 , 9.3E-12 , 1.5 , 0.6))
!   RCONST(124) = constant rate coefficient
!   RCONST(125) = constant rate coefficient
!   RCONST(126) = constant rate coefficient
  RCONST(127) = (1.3E-12 *EXP(- 25. / temp(k)))
  RCONST(128) = (k_PrO2_HO2)
  RCONST(129) = (k_PrO2_NO)
  RCONST(130) = (k_CH3OOH_OH)
!   RCONST(131) = constant rate coefficient
!   RCONST(132) = constant rate coefficient
  RCONST(133) = (k_PAN_M)
  RCONST(134) = (7.86E-15 *EXP(- 1913. / temp(k)))
  RCONST(135) = (2.54E-11 *EXP(410. / temp(k)))
  RCONST(136) = (3.03E-12 *EXP(- 446. / temp(k)))
  RCONST(137) = (2.22E-13 *EXP(1300. / temp(k)))
  RCONST(138) = (2.54E-12 *EXP(360. / temp(k)))
!   RCONST(139) = constant rate coefficient
!   RCONST(140) = constant rate coefficient
!   RCONST(141) = constant rate coefficient
!   RCONST(142) = constant rate coefficient
  RCONST(143) = (2.8E-11 *EXP(- 250. / temp(k)))
  RCONST(144) = (2.5E-11 *EXP(110. / temp(k)))
  RCONST(145) = (1.0E-12 *EXP(- 1590. / temp(k)))
  RCONST(146) = (3.0E-11 *EXP(- 2450. / temp(k)))
  RCONST(147) = (3.5E-13 *EXP(- 1370. / temp(k)))
  RCONST(148) = (k_ClO_ClO)
  RCONST(149) = (k_ClO_ClO / (2.16E-27 *EXP(8537. / temp(k))))
  RCONST(150) = (3.9E-11 *EXP(- 2310. / temp(k)))
  RCONST(151) = (4.4E-11- 7.5E-11 *EXP(- 620. / temp(k)))
  RCONST(152) = (7.5E-11 *EXP(- 620. / temp(k)))
  RCONST(153) = (1.1E-11 *EXP(- 980. / temp(k)))
  RCONST(154) = (7.3E-12 *EXP(300. / temp(k)))
  RCONST(155) = (2.2E-12 *EXP(340. / temp(k)))
  RCONST(156) = (1.7E-12 *EXP(- 230. / temp(k)))
  RCONST(157) = (3.0E-12 *EXP(- 500. / temp(k)))
  RCONST(158) = (6.2E-12 *EXP(295. / temp(k)))
  RCONST(159) = (k_3rd_iupac(temp(k) , cair(k) , 1.6E-31 , 3.4 , 7.E-11 , 0. , 0.4))
  RCONST(160) = (6.918E-7 *EXP(- 10909. / temp(k)) *cair(k))
  RCONST(161) = (4.5E-12 *EXP(- 900. / temp(k)))
  RCONST(162) = (6.2E-12 *EXP(145. / temp(k)))
  RCONST(163) = (6.6E-12 *EXP(- 1240. / temp(k)))
  RCONST(164) = (8.1E-11 *EXP(- 34. / temp(k)))
!   RCONST(165) = constant rate coefficient
  RCONST(166) = (1.8E-12 *EXP(- 600. / temp(k)))
!   RCONST(167) = constant rate coefficient
!   RCONST(168) = constant rate coefficient
  RCONST(169) = (1.96E-12 *EXP(- 1200. / temp(k)))
!   RCONST(170) = constant rate coefficient
  RCONST(171) = (1.64E-12 *EXP(- 1520. / temp(k)))
  RCONST(172) = (k_3rd_iupac(temp(k) , cair(k) , 1.85E-29 , 3.3 , 6.0E-10 , 0.0 , 0.4))
!   RCONST(173) = constant rate coefficient
  RCONST(174) = (k_3rd_iupac(temp(k) , cair(k) , 6.1e-30 , 3.0 , 2.0e-10 , 0. , 0.6))
!   RCONST(175) = constant rate coefficient
!   RCONST(176) = constant rate coefficient
  RCONST(177) = (1.7E-11 *EXP(- 800. / temp(k)))
  RCONST(178) = (1.9E-11 *EXP(230. / temp(k)))
!   RCONST(179) = constant rate coefficient
  RCONST(180) = (2.9E-14 *EXP(840. / temp(k)))
  RCONST(181) = (7.7E-12 *EXP(- 450. / temp(k)))
  RCONST(182) = (4.5E-12 *EXP(500. / temp(k)))
  RCONST(183) = (6.7E-12 *EXP(155. / temp(k)))
  RCONST(184) = (1.2E-10 *EXP(- 430. / temp(k)))
  RCONST(185) = (2.0E-11 *EXP(240. / temp(k)))
!   RCONST(186) = constant rate coefficient
  RCONST(187) = (8.7E-12 *EXP(260. / temp(k)))
  RCONST(188) = (k_BrO_NO2)
  RCONST(189) = (k_BrO_NO2 / (5.44E-9 *EXP(14192. / temp(k)) *1.E6 *R_gas *temp(k) / (atm2Pa *N_A)))
  RCONST(190) = (7.7E-12 *EXP(- 580. / temp(k)))
  RCONST(191) = (2.6E-12 *EXP(- 1600. / temp(k)))
  RCONST(192) = (f_BrO_CH3O2 *5.7E-12)
  RCONST(193) = ((1.- f_BrO_CH3O2) *5.7E-12)
  RCONST(194) = (1.42E-12 *EXP(- 1150. / temp(k)))
  RCONST(195) = (2.8E-13 *EXP(224. / temp(k)) / (1.+ 1.13E24 *EXP(- 3200. / temp(k)) / C(ind_O2)))
  RCONST(196) = (1.8e-11 *EXP(- 460. / temp(k)))
  RCONST(197) = (6.35e-15 *EXP(440. / temp(k)))
  RCONST(198) = (9.0E-13 *EXP(- 360. / temp(k)))
  RCONST(199) = (2.0E-12 *EXP(- 840. / temp(k)))
!   RCONST(200) = constant rate coefficient
!   RCONST(201) = constant rate coefficient
  RCONST(202) = (2.3E-10 *EXP(135. / temp(k)))
  RCONST(203) = (1.6E-12 *EXP(430. / temp(k)))
  RCONST(204) = (2.9E-12 *EXP(220. / temp(k)))
  RCONST(205) = (5.8E-13 *EXP(170. / temp(k)))
!   RCONST(206) = constant rate coefficient
  RCONST(207) = (2.0E-12 *EXP(- 840. / temp(k)))
  RCONST(208) = (2.0E-12 *EXP(- 840. / temp(k)))
  RCONST(209) = (2.1E-12 *EXP(- 880. / temp(k)))
  RCONST(210) = (k_3rd(temp(k) , cair(k) , 3.3E-31 , 4.3 , 1.6E-12 , 0. , 0.6))
  RCONST(211) = (1.13E-11 *EXP(- 253. / temp(k)))
  RCONST(212) = (k_DMS_OH)
  RCONST(213) = (1.9E-13 *EXP(520. / temp(k)))
!   RCONST(214) = constant rate coefficient
  RCONST(215) = (1.8E13 *EXP(- 8661. / temp(k)))
!   RCONST(216) = constant rate coefficient
!   RCONST(217) = constant rate coefficient
!   RCONST(218) = constant rate coefficient
  RCONST(219) = (9.E-11 *EXP(- 2386. / temp(k)))
!   RCONST(220) = constant rate coefficient
  RCONST(221) = (jx (k,ip_O2))
  RCONST(222) = (jx (k,ip_O1D))
  RCONST(223) = (jx (k,ip_O3P))
  RCONST(224) = (jx (k,ip_H2O))
  RCONST(225) = (jx (k,ip_H2O2))
  RCONST(226) = (jx (k,ip_N2O))
  RCONST(227) = (jx (k,ip_NO2))
  RCONST(228) = (jx (k,ip_NO))
  RCONST(229) = (jx (k,ip_NO2O))
  RCONST(230) = (jx (k,ip_NOO2))
  RCONST(231) = (jx (k,ip_N2O5))
  RCONST(232) = (jx (k,ip_HONO))
  RCONST(233) = (jx (k,ip_HNO3))
  RCONST(234) = (jx (k,ip_HNO4))
  RCONST(235) = (jx (k,ip_CH3OOH))
  RCONST(236) = (jx (k,ip_COH2))
  RCONST(237) = (jx (k,ip_CHOH))
  RCONST(238) = (jx (k,ip_CO2))
  RCONST(239) = (jx (k,ip_CH4))
  RCONST(240) = (jx (k,ip_CH3OOH))
  RCONST(241) = (jx (k,ip_CH3CHO))
  RCONST(242) = (jx (k,ip_CH3CO3H))
  RCONST(243) = (0.19 *jx (k,ip_CHOH))
  RCONST(244) = (jx (k,ip_PAN))
  RCONST(245) = (jx (k,ip_CH3OOH))
  RCONST(246) = (jx (k,ip_CH3COCH3))
  RCONST(247) = (0.074 *jx (k,ip_CHOH))
  RCONST(248) = (jx (k,ip_MGLYOX))
  RCONST(249) = (jx (k,ip_CH3OOH))
  RCONST(250) = (3.7 *jx (k,ip_PAN))
  RCONST(251) = (jx (k,ip_CH3OOH))
  RCONST(252) = (0.019 *jx (k,ip_COH2)+ .015 *jx (k,ip_MGLYOX))
  RCONST(253) = (jx (k,ip_CH3OOH))
  RCONST(254) = (0.42 *jx (k,ip_CHOH))
  RCONST(255) = (jx (k,ip_CH3OOH))
  RCONST(256) = (2.15 *jx (k,ip_MGLYOX))
  RCONST(257) = (3.7 *jx (k,ip_PAN))
  RCONST(258) = (jx (k,ip_PAN))
  RCONST(259) = (jx (k,ip_CH3OOH))
  RCONST(260) = (3.7 *jx (k,ip_PAN))
  RCONST(261) = (jx (k,ip_Cl2))
  RCONST(262) = (jx (k,ip_Cl2O2))
  RCONST(263) = (jx (k,ip_OClO))
  RCONST(264) = (jx (k,ip_HCl))
  RCONST(265) = (jx (k,ip_HOCl))
  RCONST(266) = (jx (k,ip_ClNO2))
  RCONST(267) = (jx (k,ip_ClNO3))
  RCONST(268) = (jx (k,ip_ClONO2))
  RCONST(269) = (jx (k,ip_CH3Cl))
  RCONST(270) = (jx (k,ip_CCl4))
  RCONST(271) = (jx (k,ip_CH3CCl3))
  RCONST(272) = (jx (k,ip_CFCl3))
  RCONST(273) = (jx (k,ip_CF2Cl2))
  RCONST(274) = (jx (k,ip_Br2))
  RCONST(275) = (jx (k,ip_BrO))
  RCONST(276) = (jx (k,ip_HOBr))
  RCONST(277) = (jx (k,ip_BrNO2))
  RCONST(278) = (jx (k,ip_BrNO3))
  RCONST(279) = (jx (k,ip_CH3Br))
  RCONST(280) = (jx (k,ip_CH2Br2))
  RCONST(281) = (jx (k,ip_CHBr3))
  RCONST(282) = (jx (k,ip_CF3Br))
  RCONST(283) = (jx (k,ip_BrCl))
  RCONST(284) = (jx (k,ip_CF2ClBr))
  RCONST(285) = (jx (k,ip_CH2ClBr))
  RCONST(286) = (jx (k,ip_CHCl2Br))
  RCONST(287) = (jx (k,ip_CHClBr2))
  RCONST(288) = (JX (k,ip_CH3I))
  RCONST(289) = (khet_St (k,ihs_N2O5_H2O))
  RCONST(290) = (khet_Tr (k,iht_N2O5))
  RCONST(291) = (khet_St (k,ihs_HOCl_HCl))
  RCONST(292) = (khet_St (k,ihs_ClNO3_HCl))
  RCONST(293) = (khet_St (k,ihs_ClNO3_H2O))
  RCONST(294) = (khet_St (k,ihs_N2O5_HCl))
  RCONST(295) = (khet_St (k,ihs_HOBr_HBr))
  RCONST(296) = (khet_St (k,ihs_BrNO3_H2O))
  RCONST(297) = (khet_St (k,ihs_ClNO3_HBr))
  RCONST(298) = (khet_St (k,ihs_BrNO3_HCl))
  RCONST(299) = (khet_St (k,ihs_HOCl_HBr))
  RCONST(300) = (khet_St (k,ihs_HOBr_HCl))
  RCONST(301) = (k_O3s)
  RCONST(302) = (1.25e-13 *exp(- 2190 / temp(k)))
  RCONST(303) = (3.4e-12 *exp(- 1100 / temp(k)))
!   RCONST(304) = constant rate coefficient
!   RCONST(305) = constant rate coefficient
  RCONST(306) = (8.5e-41 *exp(6540. / temp(k)) *C(ind_H2O))
  RCONST(307) = (1.1e-13 *exp(- 1200. / temp(k)))
  RCONST(308) = (2.1e-11 *exp(- 2200. / temp(k)))
  RCONST(309) = (JX (k,ip_OCS))
  RCONST(310) = (60. *JX (k,ip_OCS))
  RCONST(311) = (JX (k,ip_SO3))
  RCONST(312) = (JX (k,ip_H2SO4))
!   RCONST(313) = constant rate coefficient
  RCONST(314) = (1.05e-12 *EXP(- 1600. / temp(k)))
  RCONST(315) = (1.05e-12 *EXP(- 2430. / temp(k)))
  RCONST(316) = (jx (k,ip_CHF2Cl))
!   RCONST(317) = constant rate coefficient
  RCONST(318) = (1.05e-12 *EXP(- 1630. / temp(k)))
  RCONST(319) = (2.4e-12 *EXP(- 2200. / temp(k)))
!   RCONST(320) = constant rate coefficient
  RCONST(321) = (jx (k,ip_CF2ClCFCl2))
  RCONST(322) = (1.09e-12 *EXP(- 870. / temp(k)))
  RCONST(323) = (.4e-12 *EXP(- 910. / temp(k)))
  RCONST(324) = (jx (k,ip_CH2Cl2))
!   RCONST(325) = constant rate coefficient
  RCONST(326) = (5.2e-13 *EXP(- 2210. / temp(k)))
!   RCONST(327) = constant rate coefficient
  RCONST(328) = (1.25e-12 *EXP(- 1600. / temp(k)))
  RCONST(329) = (3.4e-12 *EXP(- 2200. / temp(k)))
  RCONST(330) = (jx (k,ip_CH3CFCl2))
!   RCONST(331) = constant rate coefficient
  RCONST(332) = (jx (k,ip_CF2ClCF2Cl))
!   RCONST(333) = constant rate coefficient
  RCONST(334) = (6.0e-13 *EXP(- 1700. / temp(k)))
  RCONST(335) = (1.8e-12 *EXP(- 2600. / temp(k)))
!   RCONST(336) = constant rate coefficient
  RCONST(337) = (1.1e-12 *EXP(- 2010. / temp(k)))
  RCONST(338) = (1.44e-11 *EXP(- 3940. / temp(k)))
  RCONST(339) = (2.2e-12 *EXP(- 920. / temp(k)))
  RCONST(340) = (3.31e-12 *EXP(- 990. / temp(k)))
  RCONST(341) = (jx (k,ip_CHCl3))
!   RCONST(342) = constant rate coefficient
  RCONST(343) = (jx (k,ip_CF3CF2Cl))
!   RCONST(344) = constant rate coefficient
  RCONST(345) = (1.7e-12 *EXP(- 1500. / temp(k)))
  RCONST(346) = (4.9e-12 *EXP(- 1500. / temp(k)))
!   RCONST(347) = constant rate coefficient
  RCONST(348) = (8.7e-13 *EXP(- 975. / temp(k)))
  RCONST(349) = (6.0e-12 *EXP(- 960. / temp(k)))
      
END SUBROUTINE Update_RCONST
 
SUBROUTINE initialize_indexarrays
END SUBROUTINE initialize_indexarrays
 
SUBROUTINE initialize_kpp_ctrl(status, iou, modstr)


!  I/O
  INTEGER,          INTENT(OUT) :: status
  INTEGER,          INTENT(IN)  :: iou      !  logical I/O unit
  CHARACTER(LEN=*), INTENT(IN)  :: modstr   !  read <modstr>.nml

!  LOCAL
  REAL(DP) :: tsum
  INTEGER  :: i

  CALL kpp_read_nml_ctrl(status, iou)
  IF (status /= 0) RETURN

!  check fixed time steps
  tsum = 0.0_dp
  DO i=1, NMAXFIXSTEPS
     IF (t_steps(i) < TINY(0.0_DP))EXIT
     tsum = tsum +  t_steps(i)
  END DO

  nfsteps = i- 1

  l_fixed_step = (nfsteps > 0) .AND.((tsum - 1.0) < TINY(0.0_DP))

!  mz_pj_20070531+
!  DIAGNOSTIC OUTPUT TO LOG- FILE
  WRITE(*,*) ' MECHANISM        : ',WANTED
!
  IF (L_VECTOR) THEN
     WRITE(*,*) ' MODE             : VECTOR (LENGTH=',VL_DIM,')'
  ELSE
     WRITE(*,*) ' MODE             : SCALAR'
  END IF
!
  WRITE(*,*) ' DE-INDEXING MODE :',I_LU_DI
!
  WRITE(*,*) ' ICNTRL           : ',icntrl
  WRITE(*,*) ' RCNTRL           : ',rcntrl
!
!  NOTE: THIS IS ONLY MEANINGFUL FOR VECTORIZED (kp4) ROSENBROCK- METHODS
  IF (L_VECTOR) THEN
     IF (l_fixed_step) THEN
        WRITE(*,*) ' TIME STEPS       : FIXED (',t_steps(1:nfsteps),')'
     ELSE
        WRITE(*,*) ' TIME STEPS       : AUTOMATIC'
     END IF
  ELSE
     WRITE(*,*) ' TIME STEPS       : AUTOMATIC '//&
          &'(t_steps (CTRL_KPP) ignored in SCALAR MODE)'
  END IF
!  mz_pj_20070531-

  status = 0

CONTAINS

  SUBROUTINE kpp_read_nml_ctrl(status, iou)

!  READ MECCA NAMELIST, CHECK IT, AND INITIALIZE GLOBAL VARIABLES
!
!  Author: Astrid Kerkweg,  MPICH, June 2007
!          Patrick Joeckel, MPICH, June 2007



!  I/O
    INTEGER, INTENT(OUT) :: status  !  error status
    INTEGER, INTENT(IN)  :: iou     !  logical I/O unit

!  LOCAL
    LOGICAL :: lex    !  file exists?
    INTEGER :: fstat  !  file status
    CHARACTER(LEN=*),PARAMETER :: substr = 'kpp_read_nml_ctrl'

    NAMELIST /CTRL_KPP/ icntrl, rcntrl, t_steps

!  INITIALIZE
    status = 1  !  error

!  INPUT NAMELIST
    CALL read_nml_open(lex,substr,iou,'CTRL_KPP',modstr)
    IF (.not.lex) RETURN     !  <modstr>.nml does not exist

    READ(iou, NML=CTRL_KPP, IOSTAT=fstat)
    CALL read_nml_check(fstat,substr,iou,'CTRL_KPP',modstr)
    IF (fstat /= 0) RETURN   !  error while reading namelist

    WRITE(*,*) 'solver-specific method:      icntrl(3) = ',icntrl(3)
    WRITE(*,*) 'max. number of kpp-substeps: icntrl(4) = ',icntrl(4)

    CALL read_nml_close(substr, iou, modstr)
    status = 0  !  no error

  END SUBROUTINE kpp_read_nml_ctrl

END SUBROUTINE initialize_kpp_ctrl
 
  ELEMENTAL REAL(kind=dp) FUNCTION k_arr (k_298,tdep,temp)
!  Arrhenius function

    REAL,     INTENT(IN) :: k_298  !  k at T = 298.15K
    REAL,     INTENT(IN) :: tdep   !  temperature dependence
    REAL(kind=dp), INTENT(IN) :: temp   !  temperature

    INTRINSIC EXP

    k_arr = k_298 *EXP(tdep*(1._dp/temp- 3.3540E-3_dp)) !  1/298.15=3.3540e-3

  END FUNCTION k_arr
 
  ELEMENTAL REAL(kind=dp) FUNCTION k_3rd(temp,cair,k0_300K,n,kinf_300K,m,fc)

    INTRINSIC LOG10

    REAL(kind=dp), INTENT(IN) :: temp       !  temperature [K]
    REAL(kind=dp), INTENT(IN) :: cair       !  air concentration [molecules/cm3]
    REAL, INTENT(IN) :: k0_300K    !  low pressure limit at 300 K
    REAL, INTENT(IN) :: n          !  exponent for low pressure limit
    REAL, INTENT(IN) :: kinf_300K  !  high pressure limit at 300 K
    REAL, INTENT(IN) :: m          !  exponent for high pressure limit
    REAL, INTENT(IN) :: fc         !  broadening factor (usually fc=0.6)
    REAL(kind=dp) :: zt_help, k0_T, kinf_T, k_ratio

    zt_help = 300._dp/temp
    k0_T    = k0_300K   *zt_help**(n) *cair  !  k_0   at current T
    kinf_T  = kinf_300K *zt_help**(m)         !  k_inf at current T
    k_ratio = k0_T/kinf_T
    k_3rd   = k0_T/(1._dp+ k_ratio)*fc**(1._dp/(1._dp+ LOG10(k_ratio)**2))

  END FUNCTION k_3rd
 
      SUBROUTINE WCOPY(N,X,incX,Y,incY)
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!       copies a vector, x, to a vector, y:  y <-  x
!       only for incX=incY=1
!       after BLAS
!       replace this by the function from the optimized BLAS implementation:
!           CALL  SCOPY(N,X,1,Y,1)   or   CALL  DCOPY(N,X,1,Y,1)
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!       USE messy_mecca_kpp_Precision
      
      INTEGER  :: i,incX,incY,M,MP1,N
      REAL(kind=dp) :: X(N),Y(N)

      IF (N.LE.0) RETURN

      M = MOD(N,8)
      IF( M .NE. 0)THEN
        DO i = 1,M
          Y(i) = X(i)
        END DO
        IF( N .LT. 8)RETURN
      END IF    
      MP1 = M+ 1
      DO i = MP1,N,8
        Y(i) = X(i)
        Y(i +  1) = X(i +  1)
        Y(i +  2) = X(i +  2)
        Y(i +  3) = X(i +  3)
        Y(i +  4) = X(i +  4)
        Y(i +  5) = X(i +  5)
        Y(i +  6) = X(i +  6)
        Y(i +  7) = X(i +  7)
      END DO

      END SUBROUTINE WCOPY
 
      SUBROUTINE WSCAL(N,Alpha,X,incX)
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!       constant times a vector: x(1:N) <-  Alpha*x(1:N)
!       only for incX=incY=1
!       after BLAS
!       replace this by the function from the optimized BLAS implementation:
!           CALL SSCAL(N,Alpha,X,1) or  CALL DSCAL(N,Alpha,X,1)
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      INTEGER  :: i,incX,M,MP1,N
      REAL(kind=dp)  :: X(N),Alpha
      REAL(kind=dp), PARAMETER  :: ZERO=0.0_dp, ONE=1.0_dp

      IF (Alpha .EQ. ONE) RETURN
      IF (N .LE. 0) RETURN

      M = MOD(N,5)
      IF( M .NE. 0)THEN
        IF (Alpha .EQ. (- ONE))THEN
          DO i = 1,M
            X(i) = - X(i)
          END DO
        ELSEIF (Alpha .EQ. ZERO) THEN
          DO i = 1,M
            X(i) = ZERO
          END DO
        ELSE
          DO i = 1,M
            X(i) = Alpha*X(i)
          END DO
        END IF
        IF( N .LT. 5)RETURN
      END IF
      MP1 = M +  1
      IF (Alpha .EQ. (- ONE))THEN
        DO i = MP1,N,5
          X(i)     = - X(i)
          X(i +  1) = - X(i +  1)
          X(i +  2) = - X(i +  2)
          X(i +  3) = - X(i +  3)
          X(i +  4) = - X(i +  4)
        END DO
      ELSEIF (Alpha .EQ. ZERO) THEN
        DO i = MP1,N,5
          X(i)     = ZERO
          X(i +  1) = ZERO
          X(i +  2) = ZERO
          X(i +  3) = ZERO
          X(i +  4) = ZERO
        END DO
      ELSE
        DO i = MP1,N,5
          X(i)     = Alpha*X(i)
          X(i +  1) = Alpha*X(i +  1)
          X(i +  2) = Alpha*X(i +  2)
          X(i +  3) = Alpha*X(i +  3)
          X(i +  4) = Alpha*X(i +  4)
        END DO
      END IF

      END SUBROUTINE WSCAL
 
      SUBROUTINE WAXPY(N,Alpha,X,incX,Y,incY)
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!       constant times a vector plus a vector: y <-  y +  Alpha*x
!       only for incX=incY=1
!       after BLAS
!       replace this by the function from the optimized BLAS implementation:
!           CALL SAXPY(N,Alpha,X,1,Y,1) or  CALL DAXPY(N,Alpha,X,1,Y,1)
!  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

      INTEGER  :: i,incX,incY,M,MP1,N
      REAL(kind=dp) :: X(N),Y(N),Alpha
      REAL(kind=dp), PARAMETER :: ZERO = 0.0_dp

      IF (Alpha .EQ. ZERO) RETURN
      IF (N .LE. 0) RETURN

      M = MOD(N,4)
      IF( M .NE. 0)THEN
        DO i = 1,M
          Y(i) = Y(i) +  Alpha*X(i)
        END DO
        IF( N .LT. 4)RETURN
      END IF
      MP1 = M +  1
      DO i = MP1,N,4
        Y(i) = Y(i) +  Alpha*X(i)
        Y(i +  1) = Y(i +  1) +  Alpha*X(i +  1)
        Y(i +  2) = Y(i +  2) +  Alpha*X(i +  2)
        Y(i +  3) = Y(i +  3) +  Alpha*X(i +  3)
      END DO
      
      END SUBROUTINE WAXPY
 
SUBROUTINE Rosenbrock(Y,Tstart,Tend, &
           AbsTol,RelTol,            &
           RCNTRL,ICNTRL,RSTATUS,ISTATUS,IERR)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!    Solves the system y'=F(t,y) using a Rosenbrock method defined by:
!
!       G = 1/(H*gamma(1))-  Jac(t0,Y0)
!       T_i = t0 +  Alpha(i)*H
!       Y_i = Y0 +  \sum_{j=1}^{i- 1} A(i,j)*K_j
!       G *K_i = Fun( T_i, Y_i)+  \sum_{j=1}^S C(i,j)/H *K_j +
!           gamma(i)*dF/dT(t0, Y0)
!       Y1 = Y0 +  \sum_{j=1}^S M(j)*K_j
!
!      For details on Rosenbrock methods and their implementation consult:
!        E. Hairer and G. Wanner
!        "Solving ODEs II. Stiff and differential- algebraic problems".
!        Springer series in computational mathematics, Springer- Verlag, 1996.
!      The codes contained in the book inspired this implementation.
!
!      (C)  Adrian Sandu, August 2004
!      Virginia Polytechnic Institute and State University
!      Contact: sandu@cs.vt.edu
!      This implementation is part of KPP -  the Kinetic PreProcessor
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!  ~~~>   INPUT ARGUMENTS:
!
!  -      Y(NVAR)    = vector of initial conditions (at T=Tstart)
!  -     [Tstart,Tend]  = time range of integration
!       (if Tstart>Tend the integration is performed backwards in time)
!  -     RelTol, AbsTol = user precribed accuracy
!  -  SUBROUTINE  Fun( T, Y, Ydot)= ODE function,
!                       returns Ydot = Y' = F(T,Y)
!  -  SUBROUTINE  Jac( T, Y, Jcb)= Jacobian of the ODE function,
!                         returns Jcb = dFun/dY
!  -     ICNTRL(1:20)    = integer inputs parameters
!  -     RCNTRL(1:20)    = real inputs parameters
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!  ~~~>     OUTPUT ARGUMENTS:
!
!  -     Y(NVAR)    - > vector of final states (at T- >Tend)
!  -     ISTATUS(1:20)   - > integer output parameters
!  -     RSTATUS(1:20)   - > real output parameters
!  -     IERR            - > job status upon return
!                          success (positive value) or
!                          failure (negative value)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!  ~~~>     INPUT PARAMETERS:
!
!      Note: For input parameters equal to zero the default values of the
!         corresponding variables are used.
!
!      ICNTRL(1) = 1: F = F(y)   Independent of T (AUTONOMOUS)
!                = 0: F = F(t,y) Depends on T (NON- AUTONOMOUS)
!
!      ICNTRL(2) = 0: AbsTol, RelTol are NVAR- dimensional vectors
!                = 1: AbsTol, RelTol are scalars
!
!      ICNTRL(3)  - > selection of a particular Rosenbrock method
!          = 0 :  default method is Rodas3
!          = 1 :  method is  Ros2
!          = 2 :  method is  Ros3
!          = 3 :  method is  Ros4
!          = 4 :  method is  Rodas3
!          = 5:   method is  Rodas4
!
!      ICNTRL(4)  - > maximum number of integration steps
!          For ICNTRL(4)=0) the default value of 100000 is used
!
!      RCNTRL(1)  - > Hmin, lower bound for the integration step size
!            It is strongly recommended to keep Hmin = ZERO
!      RCNTRL(2)  - > Hmax, upper bound for the integration step size
!      RCNTRL(3)  - > Hstart, starting value for the integration step size
!
!      RCNTRL(4)  - > FacMin, lower bound on step decrease factor (default=0.2)
!      RCNTRL(5)  - > FacMax, upper bound on step increase factor (default=6)
!      RCNTRL(6)  - > FacRej, step decrease factor after multiple rejections
!              (default=0.1)
!      RCNTRL(7)  - > FacSafe, by which the new step is slightly smaller
!           than the predicted value  (default=0.9)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!
!  ~~~>     OUTPUT PARAMETERS:
!
!      Note: each call to Rosenbrock adds the current no. of fcn calls
!        to previous value of ISTATUS(1), and similar for the other params.
!        Set ISTATUS(1:20) = 0 before call to avoid this accumulation.
!
!      ISTATUS(1) = No. of function calls
!      ISTATUS(2) = No. of jacobian calls
!      ISTATUS(3) = No. of steps
!      ISTATUS(4) = No. of accepted steps
!      ISTATUS(5) = No. of rejected steps (except at the beginning)
!      ISTATUS(6) = No. of LU decompositions
!      ISTATUS(7) = No. of forward/backward substitutions
!      ISTATUS(8) = No. of singular matrix decompositions
!
!      RSTATUS(1)  - > Texit, the time corresponding to the
!                     computed Y upon return
!      RSTATUS(2)  - > Hexit, last accepted step before exit
!      For multiple restarts, use Hexit as Hstart in the following run
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


!  ~~~>  Arguments
   REAL(kind=dp), INTENT(INOUT) :: Y(NVAR)
   REAL(kind=dp), INTENT(IN)   :: Tstart,Tend
   REAL(kind=dp), INTENT(IN)   :: AbsTol(NVAR),RelTol(NVAR)
   INTEGER, INTENT(IN)    :: ICNTRL(20)
   REAL(kind=dp), INTENT(IN)   :: RCNTRL(20)
   INTEGER, INTENT(INOUT) :: ISTATUS(20)
   REAL(kind=dp), INTENT(INOUT) :: RSTATUS(20)
   INTEGER, INTENT(OUT)   :: IERR
!  ~~~>  The method parameters
   INTEGER, PARAMETER :: Smax = 6
   INTEGER  :: Method, ros_S
   REAL(kind=dp), DIMENSION(Smax) :: ros_M, ros_E, ros_Alpha, ros_Gamma
   REAL(kind=dp), DIMENSION(Smax*(Smax- 1)/2) :: ros_A, ros_C
   REAL(kind=dp) :: ros_ELO
   LOGICAL, DIMENSION(Smax) :: ros_NewF
   CHARACTER(LEN=12) :: ros_Name
!  ~~~>  Local variables
   REAL(kind=dp) :: Roundoff, FacMin, FacMax, FacRej, FacSafe
   REAL(kind=dp) :: Hmin, Hmax, Hstart, Hexit
   REAL(kind=dp) :: Texit
   INTEGER :: i, UplimTol, Max_no_steps
   LOGICAL :: Autonomous, VectorTol
!  ~~~>   Parameters
   REAL(kind=dp), PARAMETER :: ZERO = 0.0_dp, ONE  = 1.0_dp
   REAL(kind=dp), PARAMETER :: DeltaMin = 1.0E-5_dp

!  ~~~>  Initialize statistics
   Nfun = ISTATUS(ifun)
   Njac = ISTATUS(ijac)
   Nstp = ISTATUS(istp)
   Nacc = ISTATUS(iacc)
   Nrej = ISTATUS(irej)
   Ndec = ISTATUS(idec)
   Nsol = ISTATUS(isol)
   Nsng = ISTATUS(isng)

!  ~~~>  Autonomous or time dependent ODE. Default is time dependent.
   Autonomous = .NOT.(ICNTRL(1) == 0)

!  ~~~>  For Scalar tolerances (ICNTRL(2).NE.0)  the code uses AbsTol(1) and RelTol(1)
!     For Vector tolerances (ICNTRL(2) == 0) the code uses AbsTol(1:NVAR) and RelTol(1:NVAR)
   IF (ICNTRL(2) == 0) THEN
      VectorTol = .TRUE.
         UplimTol  = NVAR
   ELSE
      VectorTol = .FALSE.
         UplimTol  = 1
   END IF

!  ~~~>  The particular Rosenbrock method chosen
   IF (ICNTRL(3) == 0) THEN
      Method = 4
   ELSEIF((ICNTRL(3) >= 1).AND.(ICNTRL(3) <= 5))THEN
      Method = ICNTRL(3)
   ELSE
      PRINT *,'User-selected Rosenbrock method: ICNTRL(3)=',Method
      CALL ros_ErrorMsg(- 2,Tstart,ZERO,IERR)
      RETURN
   END IF

!  ~~~>   The maximum number of steps admitted
   IF (ICNTRL(4) == 0) THEN
      Max_no_steps = 100000
   ELSEIF (ICNTRL(4) > 0) THEN
      Max_no_steps=ICNTRL(4)
   ELSE
      PRINT *,'User-selected max no. of steps: ICNTRL(4)=',ICNTRL(4)
      CALL ros_ErrorMsg(- 1,Tstart,ZERO,IERR)
      RETURN
   END IF

!  ~~~>  Unit roundoff (1+ Roundoff>1)
   Roundoff = WLAMCH('E')

!  ~~~>  Lower bound on the step size: (positive value)
   IF (RCNTRL(1) == ZERO) THEN
      Hmin = ZERO
   ELSEIF (RCNTRL(1) > ZERO) THEN
      Hmin = RCNTRL(1)
   ELSE
      PRINT *,'User-selected Hmin: RCNTRL(1)=',RCNTRL(1)
      CALL ros_ErrorMsg(- 3,Tstart,ZERO,IERR)
      RETURN
   END IF
!  ~~~>  Upper bound on the step size: (positive value)
   IF (RCNTRL(2) == ZERO) THEN
      Hmax = ABS(Tend-Tstart)
   ELSEIF (RCNTRL(2) > ZERO) THEN
      Hmax = MIN(ABS(RCNTRL(2)),ABS(Tend-Tstart))
   ELSE
      PRINT *,'User-selected Hmax: RCNTRL(2)=',RCNTRL(2)
      CALL ros_ErrorMsg(- 3,Tstart,ZERO,IERR)
      RETURN
   END IF
!  ~~~>  Starting step size: (positive value)
   IF (RCNTRL(3) == ZERO) THEN
      Hstart = MAX(Hmin,DeltaMin)
   ELSEIF (RCNTRL(3) > ZERO) THEN
      Hstart = MIN(ABS(RCNTRL(3)),ABS(Tend-Tstart))
   ELSE
      PRINT *,'User-selected Hstart: RCNTRL(3)=',RCNTRL(3)
      CALL ros_ErrorMsg(- 3,Tstart,ZERO,IERR)
      RETURN
   END IF
!  ~~~>  Step size can be changed s.t.  FacMin < Hnew/Hexit < FacMax
   IF (RCNTRL(4) == ZERO) THEN
      FacMin = 0.2_dp
   ELSEIF (RCNTRL(4) > ZERO) THEN
      FacMin = RCNTRL(4)
   ELSE
      PRINT *,'User-selected FacMin: RCNTRL(4)=',RCNTRL(4)
      CALL ros_ErrorMsg(- 4,Tstart,ZERO,IERR)
      RETURN
   END IF
   IF (RCNTRL(5) == ZERO) THEN
      FacMax = 6.0_dp
   ELSEIF (RCNTRL(5) > ZERO) THEN
      FacMax = RCNTRL(5)
   ELSE
      PRINT *,'User-selected FacMax: RCNTRL(5)=',RCNTRL(5)
      CALL ros_ErrorMsg(- 4,Tstart,ZERO,IERR)
      RETURN
   END IF
!  ~~~>   FacRej: Factor to decrease step after 2 succesive rejections
   IF (RCNTRL(6) == ZERO) THEN
      FacRej = 0.1_dp
   ELSEIF (RCNTRL(6) > ZERO) THEN
      FacRej = RCNTRL(6)
   ELSE
      PRINT *,'User-selected FacRej: RCNTRL(6)=',RCNTRL(6)
      CALL ros_ErrorMsg(- 4,Tstart,ZERO,IERR)
      RETURN
   END IF
!  ~~~>   FacSafe: Safety Factor in the computation of new step size
   IF (RCNTRL(7) == ZERO) THEN
      FacSafe = 0.9_dp
   ELSEIF (RCNTRL(7) > ZERO) THEN
      FacSafe = RCNTRL(7)
   ELSE
      PRINT *,'User-selected FacSafe: RCNTRL(7)=',RCNTRL(7)
      CALL ros_ErrorMsg(- 4,Tstart,ZERO,IERR)
      RETURN
   END IF
!  ~~~>  Check if tolerances are reasonable
    DO i=1,UplimTol
      IF((AbsTol(i) <= ZERO) .OR. (RelTol(i) <= 10.0_dp*Roundoff) &
         .OR. (RelTol(i) >= 1.0_dp))THEN
        PRINT *,' AbsTol(',i,') = ',AbsTol(i)
        PRINT *,' RelTol(',i,') = ',RelTol(i)
        CALL ros_ErrorMsg(- 5,Tstart,ZERO,IERR)
        RETURN
      END IF
    END DO


!  ~~~>   Initialize the particular Rosenbrock method
   SELECT CASE (Method)
     CASE (1)
       CALL Ros2(ros_S, ros_A, ros_C, ros_M, ros_E,   &
          ros_Alpha, ros_Gamma, ros_NewF, ros_ELO, ros_Name)
     CASE (2)
       CALL Ros3(ros_S, ros_A, ros_C, ros_M, ros_E,   &
          ros_Alpha, ros_Gamma, ros_NewF, ros_ELO, ros_Name)
     CASE (3)
       CALL Ros4(ros_S, ros_A, ros_C, ros_M, ros_E,   &
          ros_Alpha, ros_Gamma, ros_NewF, ros_ELO, ros_Name)
     CASE (4)
       CALL Rodas3(ros_S, ros_A, ros_C, ros_M, ros_E, &
          ros_Alpha, ros_Gamma, ros_NewF, ros_ELO, ros_Name)
     CASE (5)
       CALL Rodas4(ros_S, ros_A, ros_C, ros_M, ros_E, &
          ros_Alpha, ros_Gamma, ros_NewF, ros_ELO, ros_Name)
     CASE DEFAULT
       PRINT *,'Unknown Rosenbrock method: ICNTRL(3)=',Method
       CALL ros_ErrorMsg(- 2,Tstart,ZERO,IERR)
       RETURN
   END SELECT

!  ~~~>  CALL Rosenbrock method
   CALL ros_Integrator(Y,Tstart,Tend,Texit,      &
        AbsTol, RelTol,                          &
!    Rosenbrock method coefficients
        ros_S, ros_M, ros_E, ros_A, ros_C,       &
        ros_Alpha, ros_Gamma, ros_ELO, ros_NewF, &
!    Integration parameters
        Autonomous, VectorTol, Max_no_steps,     &
        Roundoff, Hmin, Hmax, Hstart, Hexit,     &
        FacMin, FacMax, FacRej, FacSafe,         &
!    Error indicator
        IERR)


!  ~~~>  Collect run statistics
   ISTATUS(ifun) = Nfun
   ISTATUS(ijac) = Njac
   ISTATUS(istp) = Nstp
   ISTATUS(iacc) = Nacc
   ISTATUS(irej) = Nrej
   ISTATUS(idec) = Ndec
   ISTATUS(isol) = Nsol
   ISTATUS(isng) = Nsng
!  ~~~> Last T and H
   RSTATUS(itexit) = Texit
   RSTATUS(ihexit) = Hexit

!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CONTAINS  !   SUBROUTINES internal to Rosenbrock
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 SUBROUTINE ros_ErrorMsg(Code,T,H,IERR)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!      Handles all error messages
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   REAL(kind=dp), INTENT(IN) :: T, H
   INTEGER, INTENT(IN)  :: Code
   INTEGER, INTENT(OUT) :: IERR

   IERR = Code
   PRINT *, &
     'Forced exit from Rosenbrock due to the following error:'
   IF ((Code>=- 8).AND.(Code<=- 1))THEN
     PRINT *, IERR_NAMES(Code)
   ELSE
     PRINT *,'Unknown Error code: ',Code
   ENDIF

   PRINT *, "T=", T, "and H=", H

 END SUBROUTINE ros_ErrorMsg

!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 SUBROUTINE ros_Integrator (Y, Tstart, Tend, T,     &
        AbsTol, RelTol,                          &
!  ~~~> Rosenbrock method coefficients
        ros_S, ros_M, ros_E, ros_A, ros_C,       &
        ros_Alpha, ros_Gamma, ros_ELO, ros_NewF, &
!  ~~~> Integration parameters
        Autonomous, VectorTol, Max_no_steps,     &
        Roundoff, Hmin, Hmax, Hstart, Hexit,     &
        FacMin, FacMax, FacRej, FacSafe,         &
!  ~~~> Error indicator
        IERR)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!     Template for the implementation of a generic Rosenbrock method
!        defined by ros_S (no of stages)
!        and its coefficients ros_{A,C,M,E,Alpha,Gamma}
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


!  ~~~> Input: the initial condition at Tstart; Output: the solution at T
   REAL(kind=dp), INTENT(INOUT) :: Y(NVAR)
!  ~~~> Input: integration interval
   REAL(kind=dp), INTENT(IN) :: Tstart,Tend
!  ~~~> Output: time at which the solution is returned (T=Tend if success)
   REAL(kind=dp), INTENT(OUT) ::  T
!  ~~~> Input: tolerances
   REAL(kind=dp), INTENT(IN) ::  AbsTol(NVAR), RelTol(NVAR)
!  ~~~> Input: The Rosenbrock method parameters
   INTEGER, INTENT(IN) ::  ros_S
   REAL(kind=dp), INTENT(IN) :: ros_M(ros_S), ros_E(ros_S),  &
       ros_Alpha(ros_S), ros_A(ros_S*(ros_S- 1)/2), &
       ros_Gamma(ros_S), ros_C(ros_S*(ros_S- 1)/2), ros_ELO
   LOGICAL, INTENT(IN) :: ros_NewF(ros_S)
!  ~~~> Input: integration parameters
   LOGICAL, INTENT(IN) :: Autonomous, VectorTol
   REAL(kind=dp), INTENT(IN) :: Hstart, Hmin, Hmax
   INTEGER, INTENT(IN) :: Max_no_steps
   REAL(kind=dp), INTENT(IN) :: Roundoff, FacMin, FacMax, FacRej, FacSafe
!  ~~~> Output: last accepted step
   REAL(kind=dp), INTENT(OUT) :: Hexit
!  ~~~> Output: Error indicator
   INTEGER, INTENT(OUT) :: IERR
!   ~~~~ Local variables
   REAL(kind=dp) :: Ynew(NVAR), Fcn0(NVAR), Fcn(NVAR)
   REAL(kind=dp) :: K(NVAR*ros_S), dFdT(NVAR)
# 11812

   REAL(kind=dp) :: Jac0(LU_NONZERO), Ghimj(LU_NONZERO)

   REAL(kind=dp) :: H, Hnew, HC, HG, Fac, Tau
   REAL(kind=dp) :: Err, Yerr(NVAR)
   INTEGER :: Pivot(NVAR), Direction, ioffset, j, istage
   LOGICAL :: RejectLastH, RejectMoreH, Singular
!  ~~~>  Local parameters
   REAL(kind=dp), PARAMETER :: ZERO = 0.0_dp, ONE  = 1.0_dp
   REAL(kind=dp), PARAMETER :: DeltaMin = 1.0E-5_dp
!  ~~~>  Locally called functions
!      REAL(kind=dp) WLAMCH
!      EXTERNAL WLAMCH
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


!  ~~~>  Initial preparations
   T = Tstart
   Hexit = 0.0_dp
   H = MIN(Hstart,Hmax)
   IF (ABS(H) <= 10.0_dp*Roundoff) H = DeltaMin

   IF (Tend  >=  Tstart) THEN
     Direction = + 1
   ELSE
     Direction = - 1
   END IF

   RejectLastH=.FALSE.
   RejectMoreH=.FALSE.

!  ~~~> Time loop begins below

TimeLoop: DO WHILE((Direction > 0).AND.((T- Tend)+ Roundoff <= ZERO) &
       .OR. (Direction < 0).AND.((Tend-T)+ Roundoff <= ZERO))

   IF(Nstp > Max_no_steps)THEN   !  Too many steps
      CALL ros_ErrorMsg(- 6,T,H,IERR)
      RETURN
   END IF
   IF(((T+ 0.1_dp*H) == T).OR.(H <= Roundoff))THEN   !  Step size too small
      CALL ros_ErrorMsg(- 7,T,H,IERR)
      RETURN
   END IF

!  ~~~>  Limit H if necessary to avoid going beyond Tend
   Hexit = H
   H = MIN(H,ABS(Tend-T))

!  ~~~>   Compute the function at current time
   CALL FunTemplate(T,Y,Fcn0)

!  ~~~>  Compute the function derivative with respect to T
   IF (.NOT.Autonomous) THEN
      CALL ros_FunTimeDerivative(T, Roundoff, Y, &
                Fcn0, dFdT)
   END IF

!  ~~~>   Compute the Jacobian at current time
   CALL JacTemplate(T,Y,Jac0)

!  ~~~>  Repeat step calculation until current step accepted
UntilAccepted: DO

   CALL ros_PrepareMatrix(H,Direction,ros_Gamma(1), &
          Jac0,Ghimj,Pivot,Singular)
   IF (Singular) THEN  !  More than 5 consecutive failed decompositions
       CALL ros_ErrorMsg(- 8,T,H,IERR)
       RETURN
   END IF

!  ~~~>   Compute the stages
Stage: DO istage = 1, ros_S

!  Current istage offset. Current istage vector is K(ioffset+ 1:ioffset+ NVAR)
       ioffset = NVAR*(istage-1)

!  For the 1st istage the function has been computed previously
       IF(istage == 1)THEN
!           CALL WCOPY(NVAR,Fcn0,1,Fcn,1)
         Fcn(1:NVAR) = Fcn0(1:NVAR) 
!  istage>1 and a new function evaluation is needed at the current istage
       ELSEIF(ros_NewF(istage))THEN
!           CALL WCOPY(NVAR,Y,1,Ynew,1)
         Ynew(1:NVAR) = Y(1:NVAR)
         DO j = 1, istage-1
!             CALL WAXPY(NVAR,ros_A((istage-1)*(istage-2)/2+ j), &
!              K(NVAR*(j- 1)+ 1),1,Ynew,1)
           Ynew(1:NVAR) = Ynew(1:NVAR) +  K(NVAR*(j- 1)+ 1:NVAR*j) &
                        *ros_A((istage-1)*(istage-2)/2+ j)
         END DO
         Tau = T +  ros_Alpha(istage)*Direction*H
         CALL FunTemplate(Tau,Ynew,Fcn)
       END IF  !  if istage == 1 elseif ros_NewF(istage)
!         CALL WCOPY(NVAR,Fcn,1,K(ioffset+ 1),1)
       K(ioffset+ 1:ioffset+ NVAR) = Fcn(1:NVAR)
       DO j = 1, istage-1
         HC = ros_C((istage-1)*(istage-2)/2+ j)/(Direction*H)
!           CALL WAXPY(NVAR,HC,K(NVAR*(j- 1)+ 1),1,K(ioffset+ 1),1)
         K(ioffset+ 1:ioffset+ NVAR) = K(ioffset+ 1:ioffset+ NVAR) +  &
           K(NVAR*(j- 1)+ 1:NVAR*j) *HC
       END DO
       IF ((.NOT. Autonomous).AND.(ros_Gamma(istage).NE.ZERO))THEN
         HG = Direction*H*ros_Gamma(istage)
!           CALL WAXPY(NVAR,HG,dFdT,1,K(ioffset+ 1),1)
         K(ioffset+ 1:ioffset+ NVAR) = K(ioffset+ 1:ioffset+ NVAR) +  &
           dFdT(1:NVAR) *HG
       END IF
       CALL ros_Solve(Ghimj, Pivot, K(ioffset+ 1))

   END DO Stage


!  ~~~>  Compute the new solution
!     CALL WCOPY(NVAR,Y,1,Ynew,1)
   YNEW(1:NVAR) = Y(1:NVAR)
   Yerr(1:NVAR) = ZERO  !  op_pj_20150622: moved to here according to BULL
   DO j=1,ros_S
!           CALL WAXPY(NVAR,ros_M(j),K(NVAR*(j- 1)+ 1),1,Ynew,1)
         Ynew(1:NVAR) = Ynew(1:NVAR) +  &
                        K(NVAR*(j- 1)+ 1:NVAR*j) *ros_m(j)
!    !  $   END DO   !   op_pj_20150622: loop fusion according to BULL

!  ~~~>  Compute the error estimation
!     CALL WSCAL(NVAR,ZERO,Yerr,1)
!    !  $   Yerr(1:NVAR) = ZERO   !   op_pj_20150622: moved to above according to BULL
!    !  $   DO j=1,ros_S   !   op_pj_20150622: loop fusion according to BULL
!       CALL WAXPY(NVAR,ros_E(j),K(NVAR*(j- 1)+ 1),1,Yerr,1)
     Yerr(1:NVAR) = Yerr(1:NVAR) +  &
                    K(NVAR*(j- 1)+ 1:NVAR*j) *ros_E(j)
   END DO
   Err = ros_ErrorNorm(Y, Ynew, Yerr, AbsTol, RelTol, VectorTol)

!  ~~~> New step size is bounded by FacMin <= Hnew/H <= FacMax
   Fac  = MIN(FacMax,MAX(FacMin,FacSafe/Err**(ONE/ros_ELO)))
   Hnew = H*Fac

!  ~~~>  Check the error magnitude and adjust step size
   Nstp = Nstp+ 1
   IF((Err <= ONE).OR.(H <= Hmin))THEN   ! ~~~> Accept step
      Nacc = Nacc+ 1
!        CALL WCOPY(NVAR,Ynew,1,Y,1)
      Y(1:NVAR) = MAX(Ynew(1:NVAR),ZERO)
      T = T +  Direction*H
      Hnew = MAX(Hmin,MIN(Hnew,Hmax))
      IF (RejectLastH) THEN   !  No step size increase after a rejected step
         Hnew = MIN(Hnew,H)
      END IF
      RejectLastH = .FALSE.
      RejectMoreH = .FALSE.
      H = Hnew
      EXIT UntilAccepted  !  EXIT THE LOOP: WHILE STEP NOT ACCEPTED
   ELSE            ! ~~~> Reject step
      IF (RejectMoreH) THEN
         Hnew = H*FacRej
      END IF
      RejectMoreH = RejectLastH
      RejectLastH = .TRUE.
      H = Hnew
      IF (Nacc >= 1) THEN
         Nrej = Nrej+ 1
      END IF
   END IF  !  Err <= 1

   END DO UntilAccepted

   END DO TimeLoop

!  ~~~> Succesful exit
   IERR = 1   ! ~~~> The integration was successful

  END SUBROUTINE ros_Integrator


!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  REAL(kind=dp) FUNCTION ros_ErrorNorm(Y, Ynew, Yerr, &
               AbsTol, RelTol, VectorTol)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  ~~~> Computes the "scaled norm" of the error vector Yerr
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!   Input arguments
   REAL(kind=dp), INTENT(IN) :: Y(NVAR), Ynew(NVAR), &
          Yerr(NVAR), AbsTol(NVAR), RelTol(NVAR)
   LOGICAL, INTENT(IN) ::  VectorTol
!   Local variables
   REAL(kind=dp) :: Err, Scale, Ymax
   INTEGER  :: i
   REAL(kind=dp), PARAMETER :: ZERO = 0.0_dp

   Err = ZERO
   DO i=1,NVAR
     Ymax = MAX(ABS(Y(i)),ABS(Ynew(i)))
     IF (VectorTol) THEN
       Scale = AbsTol(i)+ RelTol(i)*Ymax
     ELSE
       Scale = AbsTol(1)+ RelTol(1)*Ymax
     END IF
     Err = Err+ (Yerr(i)/Scale)**2
   END DO
   Err  = SQRT(Err/NVAR)

   ros_ErrorNorm = Err

  END FUNCTION ros_ErrorNorm


!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE ros_FunTimeDerivative(T, Roundoff, Y, &
                Fcn0, dFdT)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  ~~~> The time partial derivative of the function by finite differences
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!  ~~~> Input arguments
   REAL(kind=dp), INTENT(IN) :: T, Roundoff, Y(NVAR), Fcn0(NVAR)
!  ~~~> Output arguments
   REAL(kind=dp), INTENT(OUT) :: dFdT(NVAR)
!  ~~~> Local variables
   REAL(kind=dp) :: Delta
   REAL(kind=dp), PARAMETER :: ONE = 1.0_dp, DeltaMin = 1.0E-6_dp

   Delta = SQRT(Roundoff)*MAX(DeltaMin,ABS(T))
   CALL FunTemplate(T+ Delta,Y,dFdT)
!     CALL WAXPY(NVAR,(- ONE),Fcn0,1,dFdT,1)
   dFdt(1:NVAR) = dFdt(1:NVAR) -  ONE *FcN0(1:NVAR)
!     CALL WSCAL(NVAR,(ONE/Delta),dFdT,1)
   dFDT(1:NVAR) = dFDT(1:NVAR) *(ONE/Delta)
  END SUBROUTINE ros_FunTimeDerivative


!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE ros_PrepareMatrix(H, Direction, gam, &
             Jac0, Ghimj, Pivot, Singular)
!   - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -
!    Prepares the LHS matrix for stage calculations
!    1.  Construct Ghimj = 1/(H*ham) -  Jac0
!        "(Gamma H) Inverse Minus Jacobian"
!    2.  Repeat LU decomposition of Ghimj until successful.
!         - half the step size if LU decomposition fails and retry
!         - exit after 5 consecutive fails
!   - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -

!  ~~~> Input arguments
# 12058

   REAL(kind=dp), INTENT(IN) ::  Jac0(LU_NONZERO)

   REAL(kind=dp), INTENT(IN) ::  gam
   INTEGER, INTENT(IN) ::  Direction
!  ~~~> Output arguments
# 12066

   REAL(kind=dp), INTENT(OUT) :: Ghimj(LU_NONZERO)

   LOGICAL, INTENT(OUT) ::  Singular
   INTEGER, INTENT(OUT) ::  Pivot(NVAR)
!  ~~~> Inout arguments
   REAL(kind=dp), INTENT(INOUT) :: H    !  step size is decreased when LU fails
!  ~~~> Local variables
   INTEGER  :: i, ising, Nconsecutive
   REAL(kind=dp) :: ghinv
   REAL(kind=dp), PARAMETER :: ONE  = 1.0_dp, HALF = 0.5_dp

   Nconsecutive = 0
   Singular = .TRUE.

   DO WHILE (Singular)

!  ~~~>    Construct Ghimj = 1/(H*gam) -  Jac0
# 12093

!       CALL WCOPY(LU_NONZERO,Jac0,1,Ghimj,1)
     Ghimj(1:LU_NONZERO) = JAC0(1:LU_NONZERO)
!       CALL WSCAL(LU_NONZERO,(- ONE),Ghimj,1)
     Ghimj(1:LU_NONZERO) = (- ONE) *Ghimj(1:LU_NONZERO) 
     ghinv = ONE/(Direction*H*gam)
     DO i=1,NVAR
       Ghimj(LU_DIAG(i))= Ghimj(LU_DIAG(i))+ ghinv
     END DO

!  ~~~>    Compute LU decomposition
     CALL ros_Decomp( Ghimj, Pivot, ising)
     IF (ising == 0) THEN
!  ~~~>    If successful done
        Singular = .FALSE.
     ELSE  !  ising .ne. 0
!  ~~~>    If unsuccessful half the step size; if 5 consecutive fails then return
        Nsng = Nsng+ 1
        Nconsecutive = Nconsecutive+1
        Singular = .TRUE.
        PRINT*,'Warning: LU Decomposition returned ising = ',ising
        IF (Nconsecutive <= 5) THEN  !  Less than 5 consecutive failed decompositions
           H = H*HALF
        ELSE   !  More than 5 consecutive failed decompositions
           RETURN
        END IF   !  Nconsecutive
      END IF     !  ising

   END DO  !  WHILE Singular

  END SUBROUTINE ros_PrepareMatrix


!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE ros_Decomp( A, Pivot, ising)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!    Template for the LU decomposition
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  ~~~> Inout variables
   REAL(kind=dp), INTENT(INOUT) :: A(LU_NONZERO)
!  ~~~> Output variables
   INTEGER, INTENT(OUT) :: Pivot(NVAR), ising

# 12138

   CALL KppDecomp(A, ising)
   Pivot(1) = 1

   Ndec = Ndec +  1

  END SUBROUTINE ros_Decomp


!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE ros_Solve( A, Pivot, b)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!    Template for the forward/backward substitution (using pre-computed LU decomposition)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  ~~~> Input variables
   REAL(kind=dp), INTENT(IN) :: A(LU_NONZERO)
   INTEGER, INTENT(IN) :: Pivot(NVAR)
!  ~~~> InOut variables
   REAL(kind=dp), INTENT(INOUT) :: b(NVAR)

# 12160

   CALL KppSolve( A, b)


   Nsol = Nsol+ 1

  END SUBROUTINE ros_Solve



!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE Ros2 (ros_S,ros_A,ros_C,ros_M,ros_E,ros_Alpha,&
            ros_Gamma,ros_NewF,ros_ELO,ros_Name)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!   - - -  AN L- STABLE METHOD, 2 stages, order 2
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   INTEGER, PARAMETER :: S=2
   INTEGER, INTENT(OUT) ::  ros_S
   REAL(kind=dp), DIMENSION(S), INTENT(OUT) :: ros_M,ros_E,ros_Alpha,ros_Gamma
   REAL(kind=dp), DIMENSION(S*(S- 1)/2), INTENT(OUT) :: ros_A, ros_C
   REAL(kind=dp), INTENT(OUT) :: ros_ELO
   LOGICAL, DIMENSION(S), INTENT(OUT) :: ros_NewF
   CHARACTER(LEN=12), INTENT(OUT) :: ros_Name
   DOUBLE PRECISION g

    g = 1.0_dp +  1.0_dp/SQRT(2.0_dp)

!  ~~~> Name of the method
    ros_Name = 'ROS-2'
!  ~~~> Number of stages
    ros_S = S

!  ~~~> The coefficient matrices A and C are strictly lower triangular.
!     The lower triangular (subdiagonal) elements are stored in row- wise order:
!     A(2,1) = ros_A(1), A(3,1)=ros_A(2), A(3,2)=ros_A(3), etc.
!     The general mapping formula is:
!         A(i,j) = ros_A( (i- 1)*(i- 2)/2 +  j)
!         C(i,j) = ros_C( (i- 1)*(i- 2)/2 +  j)

    ros_A(1) = (1.0_dp)/g
    ros_C(1) = (- 2.0_dp)/g
!  ~~~> Does the stage i require a new function evaluation (ros_NewF(i)=TRUE)
!     or does it re-use the function evaluation from stage i- 1 (ros_NewF(i)=FALSE)
    ros_NewF(1) = .TRUE.
    ros_NewF(2) = .TRUE.
!  ~~~> M_i = Coefficients for new step solution
    ros_M(1)= (3.0_dp)/(2.0_dp*g)
    ros_M(2)= (1.0_dp)/(2.0_dp*g)
!   E_i = Coefficients for error estimator
    ros_E(1) = 1.0_dp/(2.0_dp*g)
    ros_E(2) = 1.0_dp/(2.0_dp*g)
!  ~~~> ros_ELO = estimator of local order -  the minimum between the
!      main and the embedded scheme orders plus one
    ros_ELO = 2.0_dp
!  ~~~> Y_stage_i ~ Y( T +  H*Alpha_i)
    ros_Alpha(1) = 0.0_dp
    ros_Alpha(2) = 1.0_dp
!  ~~~> Gamma_i = \sum_j  gamma_{i,j}
    ros_Gamma(1) = g
    ros_Gamma(2) =- g

 END SUBROUTINE Ros2


!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE Ros3 (ros_S,ros_A,ros_C,ros_M,ros_E,ros_Alpha,&
           ros_Gamma,ros_NewF,ros_ELO,ros_Name)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!   - - -  AN L- STABLE METHOD, 3 stages, order 3, 2 function evaluations
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   INTEGER, PARAMETER :: S=3
   INTEGER, INTENT(OUT) ::  ros_S
   REAL(kind=dp), DIMENSION(S), INTENT(OUT) :: ros_M,ros_E,ros_Alpha,ros_Gamma
   REAL(kind=dp), DIMENSION(S*(S- 1)/2), INTENT(OUT) :: ros_A, ros_C
   REAL(kind=dp), INTENT(OUT) :: ros_ELO
   LOGICAL, DIMENSION(S), INTENT(OUT) :: ros_NewF
   CHARACTER(LEN=12), INTENT(OUT) :: ros_Name

!  ~~~> Name of the method
   ros_Name = 'ROS-3'
!  ~~~> Number of stages
   ros_S = S

!  ~~~> The coefficient matrices A and C are strictly lower triangular.
!     The lower triangular (subdiagonal) elements are stored in row- wise order:
!     A(2,1) = ros_A(1), A(3,1)=ros_A(2), A(3,2)=ros_A(3), etc.
!     The general mapping formula is:
!         A(i,j) = ros_A( (i- 1)*(i- 2)/2 +  j)
!         C(i,j) = ros_C( (i- 1)*(i- 2)/2 +  j)

   ros_A(1)= 1.0_dp
   ros_A(2)= 1.0_dp
   ros_A(3)= 0.0_dp

   ros_C(1) = - 0.10156171083877702091975600115545E+01_dp
   ros_C(2) =  0.40759956452537699824805835358067E+01_dp
   ros_C(3) =  0.92076794298330791242156818474003E+01_dp
!  ~~~> Does the stage i require a new function evaluation (ros_NewF(i)=TRUE)
!     or does it re-use the function evaluation from stage i- 1 (ros_NewF(i)=FALSE)
   ros_NewF(1) = .TRUE.
   ros_NewF(2) = .TRUE.
   ros_NewF(3) = .FALSE.
!  ~~~> M_i = Coefficients for new step solution
   ros_M(1) =  0.1E+01_dp
   ros_M(2) =  0.61697947043828245592553615689730E+01_dp
   ros_M(3) = - 0.42772256543218573326238373806514E+00_dp
!   E_i = Coefficients for error estimator
   ros_E(1) =  0.5E+00_dp
   ros_E(2) = - 0.29079558716805469821718236208017E+01_dp
   ros_E(3) =  0.22354069897811569627360909276199E+00_dp
!  ~~~> ros_ELO = estimator of local order -  the minimum between the
!      main and the embedded scheme orders plus 1
   ros_ELO = 3.0_dp
!  ~~~> Y_stage_i ~ Y( T +  H*Alpha_i)
   ros_Alpha(1)= 0.0E+00_dp
   ros_Alpha(2)= 0.43586652150845899941601945119356E+00_dp
   ros_Alpha(3)= 0.43586652150845899941601945119356E+00_dp
!  ~~~> Gamma_i = \sum_j  gamma_{i,j}
   ros_Gamma(1)= 0.43586652150845899941601945119356E+00_dp
   ros_Gamma(2)= 0.24291996454816804366592249683314E+00_dp
   ros_Gamma(3)= 0.21851380027664058511513169485832E+01_dp

  END SUBROUTINE Ros3

!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE Ros4 (ros_S,ros_A,ros_C,ros_M,ros_E,ros_Alpha,&
           ros_Gamma,ros_NewF,ros_ELO,ros_Name)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!       L- STABLE ROSENBROCK METHOD OF ORDER 4, WITH 4 STAGES
!       L- STABLE EMBEDDED ROSENBROCK METHOD OF ORDER 3
!
!        E. HAIRER AND G. WANNER, SOLVING ORDINARY DIFFERENTIAL
!        EQUATIONS II. STIFF AND DIFFERENTIAL- ALGEBRAIC PROBLEMS.
!        SPRINGER SERIES IN COMPUTATIONAL MATHEMATICS,
!        SPRINGER- VERLAG (1990)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   INTEGER, PARAMETER :: S=4
   INTEGER, INTENT(OUT) ::  ros_S
   REAL(kind=dp), DIMENSION(4), INTENT(OUT) :: ros_M,ros_E,ros_Alpha,ros_Gamma
   REAL(kind=dp), DIMENSION(6), INTENT(OUT) :: ros_A, ros_C
   REAL(kind=dp), INTENT(OUT) :: ros_ELO
   LOGICAL, DIMENSION(4), INTENT(OUT) :: ros_NewF
   CHARACTER(LEN=12), INTENT(OUT) :: ros_Name
   DOUBLE PRECISION g

!  ~~~> Name of the method
   ros_Name = 'ROS-4'
!  ~~~> Number of stages
   ros_S = S

!  ~~~> The coefficient matrices A and C are strictly lower triangular.
!     The lower triangular (subdiagonal) elements are stored in row- wise order:
!     A(2,1) = ros_A(1), A(3,1)=ros_A(2), A(3,2)=ros_A(3), etc.
!     The general mapping formula is:
!         A(i,j) = ros_A( (i- 1)*(i- 2)/2 +  j)
!         C(i,j) = ros_C( (i- 1)*(i- 2)/2 +  j)

   ros_A(1) = 0.2000000000000000E+01_dp
   ros_A(2) = 0.1867943637803922E+01_dp
   ros_A(3) = 0.2344449711399156E+00_dp
   ros_A(4) = ros_A(2)
   ros_A(5) = ros_A(3)
   ros_A(6) = 0.0_dp

   ros_C(1) =- 0.7137615036412310E+01_dp
   ros_C(2) = 0.2580708087951457E+01_dp
   ros_C(3) = 0.6515950076447975E+00_dp
   ros_C(4) =- 0.2137148994382534E+01_dp
   ros_C(5) =- 0.3214669691237626E+00_dp
   ros_C(6) =- 0.6949742501781779E+00_dp
!  ~~~> Does the stage i require a new function evaluation (ros_NewF(i)=TRUE)
!     or does it re-use the function evaluation from stage i- 1 (ros_NewF(i)=FALSE)
   ros_NewF(1)  = .TRUE.
   ros_NewF(2)  = .TRUE.
   ros_NewF(3)  = .TRUE.
   ros_NewF(4)  = .FALSE.
!  ~~~> M_i = Coefficients for new step solution
   ros_M(1) = 0.2255570073418735E+01_dp
   ros_M(2) = 0.2870493262186792E+00_dp
   ros_M(3) = 0.4353179431840180E+00_dp
   ros_M(4) = 0.1093502252409163E+01_dp
!  ~~~> E_i  = Coefficients for error estimator
   ros_E(1) =- 0.2815431932141155E+00_dp
   ros_E(2) =- 0.7276199124938920E-01_dp
   ros_E(3) =- 0.1082196201495311E+00_dp
   ros_E(4) =- 0.1093502252409163E+01_dp
!  ~~~> ros_ELO  = estimator of local order -  the minimum between the
!      main and the embedded scheme orders plus 1
   ros_ELO  = 4.0_dp
!  ~~~> Y_stage_i ~ Y( T +  H*Alpha_i)
   ros_Alpha(1) = 0.0_dp
   ros_Alpha(2) = 0.1145640000000000E+01_dp
   ros_Alpha(3) = 0.6552168638155900E+00_dp
   ros_Alpha(4) = ros_Alpha(3)
!  ~~~> Gamma_i = \sum_j  gamma_{i,j}
   ros_Gamma(1) = 0.5728200000000000E+00_dp
   ros_Gamma(2) =- 0.1769193891319233E+01_dp
   ros_Gamma(3) = 0.7592633437920482E+00_dp
   ros_Gamma(4) =- 0.1049021087100450E+00_dp

  END SUBROUTINE Ros4

!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE Rodas3 (ros_S,ros_A,ros_C,ros_M,ros_E,ros_Alpha,&
            ros_Gamma,ros_NewF,ros_ELO,ros_Name)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!   - - -  A STIFFLY- STABLE METHOD, 4 stages, order 3
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   INTEGER, PARAMETER :: S=4
   INTEGER, INTENT(OUT) ::  ros_S
   REAL(kind=dp), DIMENSION(S), INTENT(OUT) :: ros_M,ros_E,ros_Alpha,ros_Gamma
   REAL(kind=dp), DIMENSION(S*(S- 1)/2), INTENT(OUT) :: ros_A, ros_C
   REAL(kind=dp), INTENT(OUT) :: ros_ELO
   LOGICAL, DIMENSION(S), INTENT(OUT) :: ros_NewF
   CHARACTER(LEN=12), INTENT(OUT) :: ros_Name
   DOUBLE PRECISION g

!  ~~~> Name of the method
   ros_Name = 'RODAS-3'
!  ~~~> Number of stages
   ros_S = S

!  ~~~> The coefficient matrices A and C are strictly lower triangular.
!     The lower triangular (subdiagonal) elements are stored in row- wise order:
!     A(2,1) = ros_A(1), A(3,1)=ros_A(2), A(3,2)=ros_A(3), etc.
!     The general mapping formula is:
!         A(i,j) = ros_A( (i- 1)*(i- 2)/2 +  j)
!         C(i,j) = ros_C( (i- 1)*(i- 2)/2 +  j)

   ros_A(1) = 0.0E+00_dp
   ros_A(2) = 2.0E+00_dp
   ros_A(3) = 0.0E+00_dp
   ros_A(4) = 2.0E+00_dp
   ros_A(5) = 0.0E+00_dp
   ros_A(6) = 1.0E+00_dp

   ros_C(1) = 4.0E+00_dp
   ros_C(2) = 1.0E+00_dp
   ros_C(3) =- 1.0E+00_dp
   ros_C(4) = 1.0E+00_dp
   ros_C(5) =- 1.0E+00_dp
   ros_C(6) =- (8.0E+00_dp/3.0E+00_dp)

!  ~~~> Does the stage i require a new function evaluation (ros_NewF(i)=TRUE)
!     or does it re-use the function evaluation from stage i- 1 (ros_NewF(i)=FALSE)
   ros_NewF(1)  = .TRUE.
   ros_NewF(2)  = .FALSE.
   ros_NewF(3)  = .TRUE.
   ros_NewF(4)  = .TRUE.
!  ~~~> M_i = Coefficients for new step solution
   ros_M(1) = 2.0E+00_dp
   ros_M(2) = 0.0E+00_dp
   ros_M(3) = 1.0E+00_dp
   ros_M(4) = 1.0E+00_dp
!  ~~~> E_i  = Coefficients for error estimator
   ros_E(1) = 0.0E+00_dp
   ros_E(2) = 0.0E+00_dp
   ros_E(3) = 0.0E+00_dp
   ros_E(4) = 1.0E+00_dp
!  ~~~> ros_ELO  = estimator of local order -  the minimum between the
!      main and the embedded scheme orders plus 1
   ros_ELO  = 3.0E+00_dp
!  ~~~> Y_stage_i ~ Y( T +  H*Alpha_i)
   ros_Alpha(1) = 0.0E+00_dp
   ros_Alpha(2) = 0.0E+00_dp
   ros_Alpha(3) = 1.0E+00_dp
   ros_Alpha(4) = 1.0E+00_dp
!  ~~~> Gamma_i = \sum_j  gamma_{i,j}
   ros_Gamma(1) = 0.5E+00_dp
   ros_Gamma(2) = 1.5E+00_dp
   ros_Gamma(3) = 0.0E+00_dp
   ros_Gamma(4) = 0.0E+00_dp

  END SUBROUTINE Rodas3

!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  SUBROUTINE Rodas4 (ros_S,ros_A,ros_C,ros_M,ros_E,ros_Alpha,&
             ros_Gamma,ros_NewF,ros_ELO,ros_Name)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!       STIFFLY- STABLE ROSENBROCK METHOD OF ORDER 4, WITH 6 STAGES
!
!        E. HAIRER AND G. WANNER, SOLVING ORDINARY DIFFERENTIAL
!        EQUATIONS II. STIFF AND DIFFERENTIAL- ALGEBRAIC PROBLEMS.
!        SPRINGER SERIES IN COMPUTATIONAL MATHEMATICS,
!        SPRINGER- VERLAG (1996)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


   INTEGER, PARAMETER :: S=6
   INTEGER, INTENT(OUT) ::  ros_S
   REAL(kind=dp), DIMENSION(S), INTENT(OUT) :: ros_M,ros_E,ros_Alpha,ros_Gamma
   REAL(kind=dp), DIMENSION(S*(S- 1)/2), INTENT(OUT) :: ros_A, ros_C
   REAL(kind=dp), INTENT(OUT) :: ros_ELO
   LOGICAL, DIMENSION(S), INTENT(OUT) :: ros_NewF
   CHARACTER(LEN=12), INTENT(OUT) :: ros_Name
   DOUBLE PRECISION g

!  ~~~> Name of the method
    ros_Name = 'RODAS-4'
!  ~~~> Number of stages
    ros_S = 6

!  ~~~> Y_stage_i ~ Y( T +  H*Alpha_i)
    ros_Alpha(1) = 0.000_dp
    ros_Alpha(2) = 0.386_dp
    ros_Alpha(3) = 0.210_dp
    ros_Alpha(4) = 0.630_dp
    ros_Alpha(5) = 1.000_dp
    ros_Alpha(6) = 1.000_dp

!  ~~~> Gamma_i = \sum_j  gamma_{i,j}
    ros_Gamma(1) = 0.2500000000000000E+00_dp
    ros_Gamma(2) =- 0.1043000000000000E+00_dp
    ros_Gamma(3) = 0.1035000000000000E+00_dp
    ros_Gamma(4) =- 0.3620000000000023E-01_dp
    ros_Gamma(5) = 0.0_dp
    ros_Gamma(6) = 0.0_dp

!  ~~~> The coefficient matrices A and C are strictly lower triangular.
!     The lower triangular (subdiagonal) elements are stored in row- wise order:
!     A(2,1) = ros_A(1), A(3,1)=ros_A(2), A(3,2)=ros_A(3), etc.
!     The general mapping formula is:  A(i,j) = ros_A( (i- 1)*(i- 2)/2 +  j)
!                    C(i,j) = ros_C( (i- 1)*(i- 2)/2 +  j)

    ros_A(1) = 0.1544000000000000E+01_dp
    ros_A(2) = 0.9466785280815826E+00_dp
    ros_A(3) = 0.2557011698983284E+00_dp
    ros_A(4) = 0.3314825187068521E+01_dp
    ros_A(5) = 0.2896124015972201E+01_dp
    ros_A(6) = 0.9986419139977817E+00_dp
    ros_A(7) = 0.1221224509226641E+01_dp
    ros_A(8) = 0.6019134481288629E+01_dp
    ros_A(9) = 0.1253708332932087E+02_dp
    ros_A(10) =- 0.6878860361058950E+00_dp
    ros_A(11) = ros_A(7)
    ros_A(12) = ros_A(8)
    ros_A(13) = ros_A(9)
    ros_A(14) = ros_A(10)
    ros_A(15) = 1.0E+00_dp

    ros_C(1) =- 0.5668800000000000E+01_dp
    ros_C(2) =- 0.2430093356833875E+01_dp
    ros_C(3) =- 0.2063599157091915E+00_dp
    ros_C(4) =- 0.1073529058151375E+00_dp
    ros_C(5) =- 0.9594562251023355E+01_dp
    ros_C(6) =- 0.2047028614809616E+02_dp
    ros_C(7) = 0.7496443313967647E+01_dp
    ros_C(8) =- 0.1024680431464352E+02_dp
    ros_C(9) =- 0.3399990352819905E+02_dp
    ros_C(10) = 0.1170890893206160E+02_dp
    ros_C(11) = 0.8083246795921522E+01_dp
    ros_C(12) =- 0.7981132988064893E+01_dp
    ros_C(13) =- 0.3152159432874371E+02_dp
    ros_C(14) = 0.1631930543123136E+02_dp
    ros_C(15) =- 0.6058818238834054E+01_dp

!  ~~~> M_i = Coefficients for new step solution
    ros_M(1) = ros_A(7)
    ros_M(2) = ros_A(8)
    ros_M(3) = ros_A(9)
    ros_M(4) = ros_A(10)
    ros_M(5) = 1.0E+00_dp
    ros_M(6) = 1.0E+00_dp

!  ~~~> E_i  = Coefficients for error estimator
    ros_E(1) = 0.0E+00_dp
    ros_E(2) = 0.0E+00_dp
    ros_E(3) = 0.0E+00_dp
    ros_E(4) = 0.0E+00_dp
    ros_E(5) = 0.0E+00_dp
    ros_E(6) = 1.0E+00_dp

!  ~~~> Does the stage i require a new function evaluation (ros_NewF(i)=TRUE)
!     or does it re-use the function evaluation from stage i- 1 (ros_NewF(i)=FALSE)
    ros_NewF(1) = .TRUE.
    ros_NewF(2) = .TRUE.
    ros_NewF(3) = .TRUE.
    ros_NewF(4) = .TRUE.
    ros_NewF(5) = .TRUE.
    ros_NewF(6) = .TRUE.

!  ~~~> ros_ELO  = estimator of local order -  the minimum between the
!          main and the embedded scheme orders plus 1
    ros_ELO = 4.0_dp

  END SUBROUTINE Rodas4

!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!     End of the set of internal Rosenbrock subroutines
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
END SUBROUTINE Rosenbrock
 
SUBROUTINE FunTemplate( T, Y, Ydot)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!    Template for the ODE function call.
!    Updates the rate coefficients (and possibly the fixed species) at each call
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  ~~~> Input variables
   REAL(kind=dp) :: T, Y(NVAR)
!  ~~~> Output variables
   REAL(kind=dp) :: Ydot(NVAR)
!  ~~~> Local variables
   REAL(kind=dp) :: Told

   Told = TIME
   TIME = T
!     CALL Update_SUN()
!     CALL Update_RCONST()
   CALL Fun( Y, FIX, RCONST, Ydot)
   TIME = Told

   Nfun = Nfun+ 1

END SUBROUTINE FunTemplate
 
SUBROUTINE JacTemplate( T, Y, Jcb)
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!    Template for the ODE Jacobian call.
!    Updates the rate coefficients (and possibly the fixed species) at each call
!  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!  ~~~> Input variables
    REAL(kind=dp) :: T, Y(NVAR)
!  ~~~> Output variables
# 12596

    REAL(kind=dp) :: Jcb(LU_NONZERO)

!  ~~~> Local variables
    REAL(kind=dp) :: Told
# 12603


    Told = TIME
    TIME = T
!      CALL Update_SUN()
!      CALL Update_RCONST()
# 12619

    CALL Jac_SP( Y, FIX, RCONST, Jcb)

    TIME = Told

    Njac = Njac+ 1

END SUBROUTINE JacTemplate
 
  SUBROUTINE Update_SUN()
! USE messy_mecca_kpp_Parameters
! USE messy_mecca_kpp_Global


    REAL(kind=dp) :: SunRise, SunSet
    REAL(kind=dp) :: Thour, Tlocal, Ttmp 
!  PI -  Value of pi
    REAL(kind=dp), PARAMETER :: PI = 3.14159265358979d0
    
    SunRise = 4.5_dp 
    SunSet  = 19.5_dp 
    Thour = TIME/3600.0_dp 
    Tlocal = Thour -  (INT(Thour)/24)*24

    IF ((Tlocal>=SunRise).AND.(Tlocal<=SunSet))THEN
       Ttmp = (2.0*Tlocal- SunRise-SunSet)/(SunSet- SunRise)
       IF (Ttmp.GT.0) THEN
          Ttmp =  Ttmp*Ttmp
       ELSE
          Ttmp = - Ttmp*Ttmp
       END IF
       SUN =(1.0_dp +  COS(PI*Ttmp))/2.0_dp 
    ELSE
       SUN = 0.0_dp 
    END IF

 END SUBROUTINE Update_SUN
 
SUBROUTINE error_output(C,ierr,PE)

!  must be set in module header: USE messy_main_tools,      ONLY: str


  INTEGER, INTENT(IN) :: ierr
  INTEGER, INTENT(IN) :: PE
  REAL(dp), DIMENSION(:),INTENT(IN) :: C

  INTEGER,SAVE :: NUM =0
  INTEGER :: iou
  INTEGER :: i

  CHARACTER(LEN=250)  :: filename
  CHARACTER(LEN=1000) :: strnum
  CHARACTER(LEN=1000) :: strPE
  CHARACTER(256)      :: info

  LOGICAL             :: opened
  IF (ierr >= 0) RETURN

  NUM = NUM + 1

  strnum=str(NUM)
  strPE=str(PE)

  WRITE(filename,*) 'mecca_PE'//TRIM(STRPE)//'_'//TRIM(STRNUM)//'.txt'

  iou = 0
  DO i=100,200
     INQUIRE(unit=i,opened=opened)
     IF (.NOT.opened) THEN
        iou = i
        EXIT
     END IF
  END DO

  IF (iou==0) THEN
     WRITE(info,'(a,i2.2,a,i2.2,a)') &
          'No unit in range < 100 : 200 > free.'
     RETURN
  ENDIF

  OPEN(IOU,FILE =TRIM(ADJUSTL(filename))&
       ,STATUS='NEW',ACTION= 'WRITE')

!  ERROR STATUS
  WRITE(IOU,*) 'KPP ERRORSTATUS IERR:'
  WRITE(IOU,*)IERR

!  SPECIES NAME
  WRITE(IOU,*) 'SELECTED MECHANISM'
  WRITE(IOU,*)WANTED
  WRITE(IOU,*)

  WRITE(IOU,*) 'NUMBER OF SPECIES:'
  WRITE(IOU,*)NSPEC
  WRITE(IOU,*)
  WRITE(IOU,*)  'NAMES OF SPECIES:'
  DO i=1,NSPEC
  WRITE(IOU,*) SPC_NAMES(i)
  ENDDO
  WRITE(IOU,*)

!  CONCENTRATIONS
  WRITE(IOU,*) 'concentrations (molec/cm^3(air) before KPP'
  DO i=1,NSPEC
     WRITE(IOU,*)C(i)
  ENDDO
  WRITE(IOU,*)

!  rates
  WRITE(IOU,*) 'rate contants'
  DO i=1,NREACT
     WRITE(IOU,*)RCONST(i)
  ENDDO
  WRITE(IOU,*)
  CLOSE(IOU)

END SUBROUTINE error_output
 
  SUBROUTINE KppDecomp( JVS,IER)                                     
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!        Sparse LU factorization
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! Loop expansion generated by kp4
                                                                      
    INTEGER  :: IER                                                   
    REAL(kind=dp):: JVS(LU_NONZERO),W(NVAR),a             
    INTEGER  :: k,kk,j,jj                                          
                                                                      
    a = 0.                                                            
    IER = 0                                                           
                                                                      
!   k = 1     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (1 0)
!   k = 2     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (2 1)
!   k = 3     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (3 2)
!   k = 4     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (4 3)
!   k = 5     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (5 4)
!   k = 6     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (6 5)
!   k = 7
    W(2)= JVS(9)
    W(3)= JVS(10)
    W(7)= JVS(11)
    W(23)= JVS(12)
    W(24)= JVS(13)
    W(25)= JVS(14)
    W(26)= JVS(15)
    W(27)= JVS(16)
    W(28)= JVS(17)
    W(29)= JVS(18)
    W(33)= JVS(19)
    W(36)= JVS(20)
    W(37)= JVS(21)
    W(38)= JVS(22)
    W(39)= JVS(23)
    W(42)= JVS(24)
    W(43)= JVS(25)
    W(44)= JVS(26)
    W(45)= JVS(27)
    W(52)= JVS(28)
    W(56)= JVS(29)
    W(69)= JVS(30)
    W(70)= JVS(31)
    W(71)= JVS(32)
    W(72)= JVS(33)
    W(73)= JVS(34)
    W(74)= JVS(35)
    W(77)= JVS(36)
    W(120)= JVS(37)
    W(127)= JVS(38)
    W(137)= JVS(39)
    W(138)= JVS(40)
    a = - W(2)/ JVS(2)
    W(2)= -a
    a = - W(3)/ JVS(3)
    W(3)= -a
    JVS(9)= W(2)
    JVS(10)= W(3)
    JVS(11)= W(7)
    JVS(12)= W(23)
    JVS(13)= W(24)
    JVS(14)= W(25)
    JVS(15)= W(26)
    JVS(16)= W(27)
    JVS(17)= W(28)
    JVS(18)= W(29)
    JVS(19)= W(33)
    JVS(20)= W(36)
    JVS(21)= W(37)
    JVS(22)= W(38)
    JVS(23)= W(39)
    JVS(24)= W(42)
    JVS(25)= W(43)
    JVS(26)= W(44)
    JVS(27)= W(45)
    JVS(28)= W(52)
    JVS(29)= W(56)
    JVS(30)= W(69)
    JVS(31)= W(70)
    JVS(32)= W(71)
    JVS(33)= W(72)
    JVS(34)= W(73)
    JVS(35)= W(74)
    JVS(36)= W(77)
    JVS(37)= W(120)
    JVS(38)= W(127)
    JVS(39)= W(137)
    JVS(40)= W(138)
!   k = 8
    W(2)= JVS(41)
    W(3)= JVS(42)
    W(8)= JVS(43)
    W(24)= JVS(44)
    W(27)= JVS(45)
    W(77)= JVS(46)
    W(120)= JVS(47)
    a = - W(2)/ JVS(2)
    W(2)= -a
    a = - W(3)/ JVS(3)
    W(3)= -a
    JVS(41)= W(2)
    JVS(42)= W(3)
    JVS(43)= W(8)
    JVS(44)= W(24)
    JVS(45)= W(27)
    JVS(46)= W(77)
    JVS(47)= W(120)
!   k = 9     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (48 47)
!   k = 10     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (53 52)
!   k = 11     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (55 54)
!   k = 12
    W(5)= JVS(57)
    W(12)= JVS(58)
    a = - W(5)/ JVS(5)
    W(5)= -a
    JVS(57)= W(5)
    JVS(58)= W(12)
!   k = 13     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (59 58)
!   k = 14     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (64 63)
!   k = 15     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (67 66)
!   k = 16     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (70 69)
!   k = 17
    W(1)= JVS(118)
    W(17)= JVS(119)
    W(20)= JVS(120)
    W(34)= JVS(121)
    W(35)= JVS(122)
    W(48)= JVS(123)
    W(49)= JVS(124)
    W(59)= JVS(125)
    W(64)= JVS(126)
    W(66)= JVS(127)
    W(68)= JVS(128)
    W(92)= JVS(129)
    W(93)= JVS(130)
    W(97)= JVS(131)
    W(101)= JVS(132)
    W(102)= JVS(133)
    W(103)= JVS(134)
    W(105)= JVS(135)
    W(109)= JVS(136)
    W(112)= JVS(137)
    W(114)= JVS(138)
    W(115)= JVS(139)
    W(117)= JVS(140)
    W(121)= JVS(141)
    W(122)= JVS(142)
    W(127)= JVS(143)
    W(128)= JVS(144)
    W(132)= JVS(145)
    W(134)= JVS(146)
    W(137)= JVS(147)
    W(138)= JVS(148)
    a = - W(1)/ JVS(1)
    W(1)= -a
    JVS(118)= W(1)
    JVS(119)= W(17)
    JVS(120)= W(20)
    JVS(121)= W(34)
    JVS(122)= W(35)
    JVS(123)= W(48)
    JVS(124)= W(49)
    JVS(125)= W(59)
    JVS(126)= W(64)
    JVS(127)= W(66)
    JVS(128)= W(68)
    JVS(129)= W(92)
    JVS(130)= W(93)
    JVS(131)= W(97)
    JVS(132)= W(101)
    JVS(133)= W(102)
    JVS(134)= W(103)
    JVS(135)= W(105)
    JVS(136)= W(109)
    JVS(137)= W(112)
    JVS(138)= W(114)
    JVS(139)= W(115)
    JVS(140)= W(117)
    JVS(141)= W(121)
    JVS(142)= W(122)
    JVS(143)= W(127)
    JVS(144)= W(128)
    JVS(145)= W(132)
    JVS(146)= W(134)
    JVS(147)= W(137)
    JVS(148)= W(138)
!   k = 18     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (149 148)
!   k = 19     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (152 151)
!   k = 20     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (154 153)
!   k = 21     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (156 155)
!   k = 22     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (158 157)
!   k = 23     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (160 159)
!   k = 24     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (162 161)
!   k = 25     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (164 163)
!   k = 26     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (166 165)
!   k = 27     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (168 167)
!   k = 28     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (170 169)
!   k = 29     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (172 171)
!   k = 30     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (174 173)
!   k = 31     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (178 177)
!   k = 32     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (180 179)
!   k = 33     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (182 181)
!   k = 34     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (184 183)
!   k = 35     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (187 186)
!   k = 36     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (190 189)
!   k = 37     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (192 191)
!   k = 38     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (194 193)
!   k = 39     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (196 195)
!   k = 40     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (198 197)
!   k = 41     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (201 200)
!   k = 42     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (204 203)
!   k = 43     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (207 206)
!   k = 44     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (210 209)
!   k = 45     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (213 212)
!   k = 46     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (216 215)
!   k = 47     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (219 218)
!   k = 48     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (222 221)
!   k = 49
    W(48)= JVS(225)
    W(49)= JVS(226)
    W(90)= JVS(227)
    W(120)= JVS(228)
    W(134)= JVS(229)
    W(135)= JVS(230)
    a = - W(48)/ JVS(222)
    W(48)= -a
      W(134)= W(134)+ a *JVS(223)
      W(135)= W(135)+ a *JVS(224)
    JVS(225)= W(48)
    JVS(226)= W(49)
    JVS(227)= W(90)
    JVS(228)= W(120)
    JVS(229)= W(134)
    JVS(230)= W(135)
!   k = 50     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (231 230)
!   k = 51
    W(40)= JVS(235)
    W(51)= JVS(236)
    W(105)= JVS(237)
    W(127)= JVS(238)
    W(129)= JVS(239)
    a = - W(40)/ JVS(198)
    W(40)= -a
      W(51)= W(51)+ a *JVS(199)
      W(129)= W(129)+ a *JVS(200)
    JVS(235)= W(40)
    JVS(236)= W(51)
    JVS(237)= W(105)
    JVS(238)= W(127)
    JVS(239)= W(129)
!   k = 52     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (240 239)
!   k = 53
    W(50)= JVS(243)
    W(53)= JVS(244)
    W(84)= JVS(245)
    W(85)= JVS(246)
    W(127)= JVS(247)
    a = - W(50)/ JVS(231)
    W(50)= -a
      W(53)= W(53)+ a *JVS(232)
      W(85)= W(85)+ a *JVS(233)
      W(127)= W(127)+ a *JVS(234)
    JVS(243)= W(50)
    JVS(244)= W(53)
    JVS(245)= W(84)
    JVS(246)= W(85)
    JVS(247)= W(127)
!   k = 54     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (248 247)
!   k = 55     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (252 251)
!   k = 56     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (256 255)
!   k = 57     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (260 259)
!   k = 58     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (264 263)
!   k = 59
    W(20)= JVS(268)
    W(41)= JVS(269)
    W(46)= JVS(270)
    W(59)= JVS(271)
    W(105)= JVS(272)
    W(125)= JVS(273)
    W(126)= JVS(274)
    W(127)= JVS(275)
    a = - W(20)/ JVS(154)
    W(20)= -a
      W(46)= W(46)+ a *JVS(155)
    a = - W(41)/ JVS(201)
    W(41)= -a
      W(46)= W(46)+ a *JVS(202)
      W(127)= W(127)+ a *JVS(203)
    a = - W(46)/ JVS(216)
    W(46)= -a
      W(126)= W(126)+ a *JVS(217)
      W(127)= W(127)+ a *JVS(218)
    JVS(268)= W(20)
    JVS(269)= W(41)
    JVS(270)= W(46)
    JVS(271)= W(59)
    JVS(272)= W(105)
    JVS(273)= W(125)
    JVS(274)= W(126)
    JVS(275)= W(127)
!   k = 60     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (276 275)
!   k = 61     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (280 279)
!   k = 62     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (284 283)
!   k = 63     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (288 287)
!   k = 64     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (292 291)
!   k = 65     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (296 295)
!   k = 66     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (302 301)
!   k = 67     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (306 305)
!   k = 68     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (310 309)
!   k = 69     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (315 314)
!   k = 70     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (319 318)
!   k = 71     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (323 322)
!   k = 72     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (327 326)
!   k = 73     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (331 330)
!   k = 74     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (335 334)
!   k = 75     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (339 338)
!   k = 76     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (343 342)
!   k = 77     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (350 349)
!   k = 78     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (354 353)
!   k = 79     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (362 361)
!   k = 80     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (366 365)
!   k = 81
    W(79)= JVS(373)
    W(81)= JVS(374)
    W(103)= JVS(375)
    W(111)= JVS(376)
    W(127)= JVS(377)
    W(128)= JVS(378)
    W(132)= JVS(379)
    W(134)= JVS(380)
    a = - W(79)/ JVS(362)
    W(79)= -a
      W(103)= W(103)+ a *JVS(363)
      W(127)= W(127)+ a *JVS(364)
      W(128)= W(128)+ a *JVS(365)
    JVS(373)= W(79)
    JVS(374)= W(81)
    JVS(375)= W(103)
    JVS(376)= W(111)
    JVS(377)= W(127)
    JVS(378)= W(128)
    JVS(379)= W(132)
    JVS(380)= W(134)
!   k = 82     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (381 380)
!   k = 83     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (385 384)
!   k = 84     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (390 389)
!   k = 85
    W(53)= JVS(395)
    W(84)= JVS(396)
    W(85)= JVS(397)
    W(90)= JVS(398)
    W(125)= JVS(399)
    W(127)= JVS(400)
    W(128)= JVS(401)
    W(135)= JVS(402)
    a = - W(53)/ JVS(244)
    W(53)= -a
      W(84)= W(84)+ a *JVS(245)
      W(85)= W(85)+ a *JVS(246)
      W(127)= W(127)+ a *JVS(247)
    a = - W(84)/ JVS(390)
    W(84)= -a
      W(90)= W(90)+ a *JVS(391)
      W(125)= W(125)+ a *JVS(392)
      W(128)= W(128)+ a *JVS(393)
      W(135)= W(135)+ a *JVS(394)
    JVS(395)= W(53)
    JVS(396)= W(84)
    JVS(397)= W(85)
    JVS(398)= W(90)
    JVS(399)= W(125)
    JVS(400)= W(127)
    JVS(401)= W(128)
    JVS(402)= W(135)
!   k = 86
    W(60)= JVS(403)
    W(63)= JVS(404)
    W(86)= JVS(405)
    W(92)= JVS(406)
    W(127)= JVS(407)
    W(128)= JVS(408)
    W(132)= JVS(409)
    W(134)= JVS(410)
    a = - W(60)/ JVS(276)
    W(60)= -a
      W(92)= W(92)+ a *JVS(277)
      W(127)= W(127)+ a *JVS(278)
      W(134)= W(134)+ a *JVS(279)
    a = - W(63)/ JVS(288)
    W(63)= -a
      W(92)= W(92)+ a *JVS(289)
      W(127)= W(127)+ a *JVS(290)
      W(128)= W(128)+ a *JVS(291)
    JVS(403)= W(60)
    JVS(404)= W(63)
    JVS(405)= W(86)
    JVS(406)= W(92)
    JVS(407)= W(127)
    JVS(408)= W(128)
    JVS(409)= W(132)
    JVS(410)= W(134)
!   k = 87     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (411 410)
!   k = 88     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (418 417)
!   k = 89
    W(78)= JVS(429)
    W(89)= JVS(430)
    W(101)= JVS(431)
    W(104)= JVS(432)
    W(113)= JVS(433)
    W(116)= JVS(434)
    W(118)= JVS(435)
    W(123)= JVS(436)
    W(124)= JVS(437)
    W(130)= JVS(438)
    W(131)= JVS(439)
    W(137)= JVS(440)
    W(138)= JVS(441)
    a = - W(78)/ JVS(354)
    W(78)= -a
      W(89)= W(89)+ a *JVS(355)
      W(113)= W(113)+ a *JVS(356)
      W(116)= W(116)+ a *JVS(357)
      W(124)= W(124)+ a *JVS(358)
      W(130)= W(130)+ a *JVS(359)
      W(137)= W(137)+ a *JVS(360)
      W(138)= W(138)+ a *JVS(361)
    JVS(429)= W(78)
    JVS(430)= W(89)
    JVS(431)= W(101)
    JVS(432)= W(104)
    JVS(433)= W(113)
    JVS(434)= W(116)
    JVS(435)= W(118)
    JVS(436)= W(123)
    JVS(437)= W(124)
    JVS(438)= W(130)
    JVS(439)= W(131)
    JVS(440)= W(137)
    JVS(441)= W(138)
!   k = 90
    W(31)= JVS(442)
    W(84)= JVS(443)
    W(90)= JVS(444)
    W(125)= JVS(445)
    W(127)= JVS(446)
    W(128)= JVS(447)
    W(134)= JVS(448)
    W(135)= JVS(449)
    a = - W(31)/ JVS(178)
    W(31)= -a
      W(127)= W(127)+ a *JVS(179)
    a = - W(84)/ JVS(390)
    W(84)= -a
      W(90)= W(90)+ a *JVS(391)
      W(125)= W(125)+ a *JVS(392)
      W(128)= W(128)+ a *JVS(393)
      W(135)= W(135)+ a *JVS(394)
    JVS(442)= W(31)
    JVS(443)= W(84)
    JVS(444)= W(90)
    JVS(445)= W(125)
    JVS(446)= W(127)
    JVS(447)= W(128)
    JVS(448)= W(134)
    JVS(449)= W(135)
!   k = 91     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (450 449)
!   k = 92
    W(32)= JVS(456)
    W(63)= JVS(457)
    W(92)= JVS(458)
    W(127)= JVS(459)
    W(128)= JVS(460)
    W(132)= JVS(461)
    W(134)= JVS(462)
    a = - W(32)/ JVS(180)
    W(32)= -a
      W(127)= W(127)+ a *JVS(181)
    a = - W(63)/ JVS(288)
    W(63)= -a
      W(92)= W(92)+ a *JVS(289)
      W(127)= W(127)+ a *JVS(290)
      W(128)= W(128)+ a *JVS(291)
    JVS(456)= W(32)
    JVS(457)= W(63)
    JVS(458)= W(92)
    JVS(459)= W(127)
    JVS(460)= W(128)
    JVS(461)= W(132)
    JVS(462)= W(134)
!   k = 93
    W(67)= JVS(463)
    W(86)= JVS(464)
    W(92)= JVS(465)
    W(93)= JVS(466)
    W(127)= JVS(467)
    W(128)= JVS(468)
    W(132)= JVS(469)
    W(134)= JVS(470)
    a = - W(67)/ JVS(306)
    W(67)= -a
      W(93)= W(93)+ a *JVS(307)
      W(127)= W(127)+ a *JVS(308)
      W(128)= W(128)+ a *JVS(309)
    a = - W(86)/ JVS(405)
    W(86)= -a
      W(92)= W(92)+ a *JVS(406)
      W(127)= W(127)+ a *JVS(407)
      W(128)= W(128)+ a *JVS(408)
      W(132)= W(132)+ a *JVS(409)
      W(134)= W(134)+ a *JVS(410)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    JVS(463)= W(67)
    JVS(464)= W(86)
    JVS(465)= W(92)
    JVS(466)= W(93)
    JVS(467)= W(127)
    JVS(468)= W(128)
    JVS(469)= W(132)
    JVS(470)= W(134)
!   k = 94
    W(67)= JVS(471)
    W(82)= JVS(472)
    W(93)= JVS(473)
    W(94)= JVS(474)
    W(96)= JVS(475)
    W(108)= JVS(476)
    W(109)= JVS(477)
    W(110)= JVS(478)
    W(112)= JVS(479)
    W(125)= JVS(480)
    W(127)= JVS(481)
    W(128)= JVS(482)
    W(132)= JVS(483)
    W(134)= JVS(484)
    a = - W(67)/ JVS(306)
    W(67)= -a
      W(93)= W(93)+ a *JVS(307)
      W(127)= W(127)+ a *JVS(308)
      W(128)= W(128)+ a *JVS(309)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    JVS(471)= W(67)
    JVS(472)= W(82)
    JVS(473)= W(93)
    JVS(474)= W(94)
    JVS(475)= W(96)
    JVS(476)= W(108)
    JVS(477)= W(109)
    JVS(478)= W(110)
    JVS(479)= W(112)
    JVS(480)= W(125)
    JVS(481)= W(127)
    JVS(482)= W(128)
    JVS(483)= W(132)
    JVS(484)= W(134)
!   k = 95
    W(46)= JVS(485)
    W(47)= JVS(486)
    W(75)= JVS(487)
    W(82)= JVS(488)
    W(91)= JVS(489)
    W(94)= JVS(490)
    W(95)= JVS(491)
    W(96)= JVS(492)
    W(99)= JVS(493)
    W(100)= JVS(494)
    W(107)= JVS(495)
    W(108)= JVS(496)
    W(109)= JVS(497)
    W(110)= JVS(498)
    W(112)= JVS(499)
    W(119)= JVS(500)
    W(121)= JVS(501)
    W(125)= JVS(502)
    W(126)= JVS(503)
    W(127)= JVS(504)
    W(128)= JVS(505)
    W(132)= JVS(506)
    W(133)= JVS(507)
    W(134)= JVS(508)
    W(135)= JVS(509)
    W(136)= JVS(510)
    W(137)= JVS(511)
    W(138)= JVS(512)
    a = - W(46)/ JVS(216)
    W(46)= -a
      W(126)= W(126)+ a *JVS(217)
      W(127)= W(127)+ a *JVS(218)
    a = - W(47)/ JVS(219)
    W(47)= -a
      W(91)= W(91)+ a *JVS(220)
      W(127)= W(127)+ a *JVS(221)
    a = - W(75)/ JVS(339)
    W(75)= -a
      W(121)= W(121)+ a *JVS(340)
      W(127)= W(127)+ a *JVS(341)
      W(135)= W(135)+ a *JVS(342)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(91)/ JVS(450)
    W(91)= -a
      W(107)= W(107)+ a *JVS(451)
      W(109)= W(109)+ a *JVS(452)
      W(127)= W(127)+ a *JVS(453)
      W(134)= W(134)+ a *JVS(454)
      W(136)= W(136)+ a *JVS(455)
    a = - W(94)/ JVS(474)
    W(94)= -a
      W(96)= W(96)+ a *JVS(475)
      W(108)= W(108)+ a *JVS(476)
      W(109)= W(109)+ a *JVS(477)
      W(110)= W(110)+ a *JVS(478)
      W(112)= W(112)+ a *JVS(479)
      W(125)= W(125)+ a *JVS(480)
      W(127)= W(127)+ a *JVS(481)
      W(128)= W(128)+ a *JVS(482)
      W(132)= W(132)+ a *JVS(483)
      W(134)= W(134)+ a *JVS(484)
    JVS(485)= W(46)
    JVS(486)= W(47)
    JVS(487)= W(75)
    JVS(488)= W(82)
    JVS(489)= W(91)
    JVS(490)= W(94)
    JVS(491)= W(95)
    JVS(492)= W(96)
    JVS(493)= W(99)
    JVS(494)= W(100)
    JVS(495)= W(107)
    JVS(496)= W(108)
    JVS(497)= W(109)
    JVS(498)= W(110)
    JVS(499)= W(112)
    JVS(500)= W(119)
    JVS(501)= W(121)
    JVS(502)= W(125)
    JVS(503)= W(126)
    JVS(504)= W(127)
    JVS(505)= W(128)
    JVS(506)= W(132)
    JVS(507)= W(133)
    JVS(508)= W(134)
    JVS(509)= W(135)
    JVS(510)= W(136)
    JVS(511)= W(137)
    JVS(512)= W(138)
!   k = 96     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (513 512)
!   k = 97
    W(55)= JVS(517)
    W(81)= JVS(518)
    W(97)= JVS(519)
    W(103)= JVS(520)
    W(111)= JVS(521)
    W(127)= JVS(522)
    W(128)= JVS(523)
    W(132)= JVS(524)
    W(134)= JVS(525)
    a = - W(55)/ JVS(252)
    W(55)= -a
      W(97)= W(97)+ a *JVS(253)
      W(127)= W(127)+ a *JVS(254)
      W(128)= W(128)+ a *JVS(255)
    a = - W(81)/ JVS(374)
    W(81)= -a
      W(103)= W(103)+ a *JVS(375)
      W(111)= W(111)+ a *JVS(376)
      W(127)= W(127)+ a *JVS(377)
      W(128)= W(128)+ a *JVS(378)
      W(132)= W(132)+ a *JVS(379)
      W(134)= W(134)+ a *JVS(380)
    JVS(517)= W(55)
    JVS(518)= W(81)
    JVS(519)= W(97)
    JVS(520)= W(103)
    JVS(521)= W(111)
    JVS(522)= W(127)
    JVS(523)= W(128)
    JVS(524)= W(132)
    JVS(525)= W(134)
!   k = 98     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (526 525)
!   k = 99
    W(96)= JVS(534)
    W(99)= JVS(535)
    W(120)= JVS(536)
    W(125)= JVS(537)
    W(127)= JVS(538)
    W(136)= JVS(539)
    W(138)= JVS(540)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    JVS(534)= W(96)
    JVS(535)= W(99)
    JVS(536)= W(120)
    JVS(537)= W(125)
    JVS(538)= W(127)
    JVS(539)= W(136)
    JVS(540)= W(138)
!   k = 100     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (541 540)
!   k = 101
    W(89)= JVS(546)
    W(101)= JVS(547)
    W(104)= JVS(548)
    W(113)= JVS(549)
    W(116)= JVS(550)
    W(118)= JVS(551)
    W(123)= JVS(552)
    W(124)= JVS(553)
    W(127)= JVS(554)
    W(130)= JVS(555)
    W(131)= JVS(556)
    W(137)= JVS(557)
    W(138)= JVS(558)
    a = - W(89)/ JVS(430)
    W(89)= -a
      W(101)= W(101)+ a *JVS(431)
      W(104)= W(104)+ a *JVS(432)
      W(113)= W(113)+ a *JVS(433)
      W(116)= W(116)+ a *JVS(434)
      W(118)= W(118)+ a *JVS(435)
      W(123)= W(123)+ a *JVS(436)
      W(124)= W(124)+ a *JVS(437)
      W(130)= W(130)+ a *JVS(438)
      W(131)= W(131)+ a *JVS(439)
      W(137)= W(137)+ a *JVS(440)
      W(138)= W(138)+ a *JVS(441)
    JVS(546)= W(89)
    JVS(547)= W(101)
    JVS(548)= W(104)
    JVS(549)= W(113)
    JVS(550)= W(116)
    JVS(551)= W(118)
    JVS(552)= W(123)
    JVS(553)= W(124)
    JVS(554)= W(127)
    JVS(555)= W(130)
    JVS(556)= W(131)
    JVS(557)= W(137)
    JVS(558)= W(138)
!   k = 102
    W(83)= JVS(559)
    W(102)= JVS(560)
    W(104)= JVS(561)
    W(114)= JVS(562)
    W(116)= JVS(563)
    W(119)= JVS(564)
    W(123)= JVS(565)
    W(127)= JVS(566)
    W(129)= JVS(567)
    W(130)= JVS(568)
    W(133)= JVS(569)
    W(135)= JVS(570)
    W(136)= JVS(571)
    a = - W(83)/ JVS(385)
    W(83)= -a
      W(129)= W(129)+ a *JVS(386)
      W(130)= W(130)+ a *JVS(387)
      W(135)= W(135)+ a *JVS(388)
      W(136)= W(136)+ a *JVS(389)
    JVS(559)= W(83)
    JVS(560)= W(102)
    JVS(561)= W(104)
    JVS(562)= W(114)
    JVS(563)= W(116)
    JVS(564)= W(119)
    JVS(565)= W(123)
    JVS(566)= W(127)
    JVS(567)= W(129)
    JVS(568)= W(130)
    JVS(569)= W(133)
    JVS(570)= W(135)
    JVS(571)= W(136)
!   k = 103
    W(22)= JVS(572)
    W(79)= JVS(573)
    W(103)= JVS(574)
    W(127)= JVS(575)
    W(128)= JVS(576)
    W(132)= JVS(577)
    W(134)= JVS(578)
    a = - W(22)/ JVS(158)
    W(22)= -a
      W(127)= W(127)+ a *JVS(159)
    a = - W(79)/ JVS(362)
    W(79)= -a
      W(103)= W(103)+ a *JVS(363)
      W(127)= W(127)+ a *JVS(364)
      W(128)= W(128)+ a *JVS(365)
    JVS(572)= W(22)
    JVS(573)= W(79)
    JVS(574)= W(103)
    JVS(575)= W(127)
    JVS(576)= W(128)
    JVS(577)= W(132)
    JVS(578)= W(134)
!   k = 104     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (579 578)
!   k = 105
    W(51)= JVS(585)
    W(59)= JVS(586)
    W(66)= JVS(587)
    W(80)= JVS(588)
    W(105)= JVS(589)
    W(114)= JVS(590)
    W(125)= JVS(591)
    W(126)= JVS(592)
    W(127)= JVS(593)
    W(129)= JVS(594)
    W(131)= JVS(595)
    W(136)= JVS(596)
    W(137)= JVS(597)
    W(138)= JVS(598)
    a = - W(51)/ JVS(236)
    W(51)= -a
      W(105)= W(105)+ a *JVS(237)
      W(127)= W(127)+ a *JVS(238)
      W(129)= W(129)+ a *JVS(239)
    a = - W(59)/ JVS(271)
    W(59)= -a
      W(105)= W(105)+ a *JVS(272)
      W(125)= W(125)+ a *JVS(273)
      W(126)= W(126)+ a *JVS(274)
      W(127)= W(127)+ a *JVS(275)
    a = - W(66)/ JVS(302)
    W(66)= -a
      W(114)= W(114)+ a *JVS(303)
      W(127)= W(127)+ a *JVS(304)
      W(131)= W(131)+ a *JVS(305)
    a = - W(80)/ JVS(366)
    W(80)= -a
      W(114)= W(114)+ a *JVS(367)
      W(125)= W(125)+ a *JVS(368)
      W(127)= W(127)+ a *JVS(369)
      W(136)= W(136)+ a *JVS(370)
      W(137)= W(137)+ a *JVS(371)
      W(138)= W(138)+ a *JVS(372)
    JVS(585)= W(51)
    JVS(586)= W(59)
    JVS(587)= W(66)
    JVS(588)= W(80)
    JVS(589)= W(105)
    JVS(590)= W(114)
    JVS(591)= W(125)
    JVS(592)= W(126)
    JVS(593)= W(127)
    JVS(594)= W(129)
    JVS(595)= W(131)
    JVS(596)= W(136)
    JVS(597)= W(137)
    JVS(598)= W(138)
!   k = 106     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (599 598)
!   k = 107     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (605 604)
!   k = 108
    W(54)= JVS(609)
    W(62)= JVS(610)
    W(82)= JVS(611)
    W(91)= JVS(612)
    W(93)= JVS(613)
    W(107)= JVS(614)
    W(108)= JVS(615)
    W(109)= JVS(616)
    W(112)= JVS(617)
    W(115)= JVS(618)
    W(125)= JVS(619)
    W(127)= JVS(620)
    W(128)= JVS(621)
    W(132)= JVS(622)
    W(134)= JVS(623)
    W(135)= JVS(624)
    W(136)= JVS(625)
    a = - W(54)/ JVS(248)
    W(54)= -a
      W(112)= W(112)+ a *JVS(249)
      W(127)= W(127)+ a *JVS(250)
      W(135)= W(135)+ a *JVS(251)
    a = - W(62)/ JVS(284)
    W(62)= -a
      W(115)= W(115)+ a *JVS(285)
      W(127)= W(127)+ a *JVS(286)
      W(128)= W(128)+ a *JVS(287)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(91)/ JVS(450)
    W(91)= -a
      W(107)= W(107)+ a *JVS(451)
      W(109)= W(109)+ a *JVS(452)
      W(127)= W(127)+ a *JVS(453)
      W(134)= W(134)+ a *JVS(454)
      W(136)= W(136)+ a *JVS(455)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    JVS(609)= W(54)
    JVS(610)= W(62)
    JVS(611)= W(82)
    JVS(612)= W(91)
    JVS(613)= W(93)
    JVS(614)= W(107)
    JVS(615)= W(108)
    JVS(616)= W(109)
    JVS(617)= W(112)
    JVS(618)= W(115)
    JVS(619)= W(125)
    JVS(620)= W(127)
    JVS(621)= W(128)
    JVS(622)= W(132)
    JVS(623)= W(134)
    JVS(624)= W(135)
    JVS(625)= W(136)
!   k = 109
    W(107)= JVS(626)
    W(109)= JVS(627)
    W(125)= JVS(628)
    W(127)= JVS(629)
    W(128)= JVS(630)
    W(132)= JVS(631)
    W(134)= JVS(632)
    W(136)= JVS(633)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    JVS(626)= W(107)
    JVS(627)= W(109)
    JVS(628)= W(125)
    JVS(629)= W(127)
    JVS(630)= W(128)
    JVS(631)= W(132)
    JVS(632)= W(134)
    JVS(633)= W(136)
!   k = 110
    W(61)= JVS(634)
    W(91)= JVS(635)
    W(107)= JVS(636)
    W(109)= JVS(637)
    W(110)= JVS(638)
    W(125)= JVS(639)
    W(127)= JVS(640)
    W(128)= JVS(641)
    W(132)= JVS(642)
    W(134)= JVS(643)
    W(136)= JVS(644)
    a = - W(61)/ JVS(280)
    W(61)= -a
      W(109)= W(109)+ a *JVS(281)
      W(127)= W(127)+ a *JVS(282)
      W(128)= W(128)+ a *JVS(283)
    a = - W(91)/ JVS(450)
    W(91)= -a
      W(107)= W(107)+ a *JVS(451)
      W(109)= W(109)+ a *JVS(452)
      W(127)= W(127)+ a *JVS(453)
      W(134)= W(134)+ a *JVS(454)
      W(136)= W(136)+ a *JVS(455)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    JVS(634)= W(61)
    JVS(635)= W(91)
    JVS(636)= W(107)
    JVS(637)= W(109)
    JVS(638)= W(110)
    JVS(639)= W(125)
    JVS(640)= W(127)
    JVS(641)= W(128)
    JVS(642)= W(132)
    JVS(643)= W(134)
    JVS(644)= W(136)
!   k = 111
    W(96)= JVS(645)
    W(97)= JVS(646)
    W(103)= JVS(647)
    W(111)= JVS(648)
    W(115)= JVS(649)
    W(125)= JVS(650)
    W(127)= JVS(651)
    W(128)= JVS(652)
    W(132)= JVS(653)
    W(134)= JVS(654)
    W(136)= JVS(655)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(97)/ JVS(519)
    W(97)= -a
      W(103)= W(103)+ a *JVS(520)
      W(111)= W(111)+ a *JVS(521)
      W(127)= W(127)+ a *JVS(522)
      W(128)= W(128)+ a *JVS(523)
      W(132)= W(132)+ a *JVS(524)
      W(134)= W(134)+ a *JVS(525)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    JVS(645)= W(96)
    JVS(646)= W(97)
    JVS(647)= W(103)
    JVS(648)= W(111)
    JVS(649)= W(115)
    JVS(650)= W(125)
    JVS(651)= W(127)
    JVS(652)= W(128)
    JVS(653)= W(132)
    JVS(654)= W(134)
    JVS(655)= W(136)
!   k = 112
    W(54)= JVS(656)
    W(82)= JVS(657)
    W(107)= JVS(658)
    W(110)= JVS(659)
    W(112)= JVS(660)
    W(125)= JVS(661)
    W(127)= JVS(662)
    W(128)= JVS(663)
    W(132)= JVS(664)
    W(134)= JVS(665)
    W(135)= JVS(666)
    W(136)= JVS(667)
    a = - W(54)/ JVS(248)
    W(54)= -a
      W(112)= W(112)+ a *JVS(249)
      W(127)= W(127)+ a *JVS(250)
      W(135)= W(135)+ a *JVS(251)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    JVS(656)= W(54)
    JVS(657)= W(82)
    JVS(658)= W(107)
    JVS(659)= W(110)
    JVS(660)= W(112)
    JVS(661)= W(125)
    JVS(662)= W(127)
    JVS(663)= W(128)
    JVS(664)= W(132)
    JVS(665)= W(134)
    JVS(666)= W(135)
    JVS(667)= W(136)
!   k = 113     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (668 667)
!   k = 114     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (676 675)
!   k = 115
    W(62)= JVS(682)
    W(96)= JVS(683)
    W(100)= JVS(684)
    W(115)= JVS(685)
    W(125)= JVS(686)
    W(127)= JVS(687)
    W(128)= JVS(688)
    W(134)= JVS(689)
    W(136)= JVS(690)
    W(137)= JVS(691)
    W(138)= JVS(692)
    a = - W(62)/ JVS(284)
    W(62)= -a
      W(115)= W(115)+ a *JVS(285)
      W(127)= W(127)+ a *JVS(286)
      W(128)= W(128)+ a *JVS(287)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    JVS(682)= W(62)
    JVS(683)= W(96)
    JVS(684)= W(100)
    JVS(685)= W(115)
    JVS(686)= W(125)
    JVS(687)= W(127)
    JVS(688)= W(128)
    JVS(689)= W(134)
    JVS(690)= W(136)
    JVS(691)= W(137)
    JVS(692)= W(138)
!   k = 116     Nothing to do    LU_CROW[k] > LU_DIAG[k]-1   (693 692)
!   k = 117
    W(21)= JVS(701)
    W(32)= JVS(702)
    W(57)= JVS(703)
    W(79)= JVS(704)
    W(81)= JVS(705)
    W(96)= JVS(706)
    W(103)= JVS(707)
    W(111)= JVS(708)
    W(115)= JVS(709)
    W(117)= JVS(710)
    W(121)= JVS(711)
    W(125)= JVS(712)
    W(127)= JVS(713)
    W(128)= JVS(714)
    W(132)= JVS(715)
    W(134)= JVS(716)
    W(136)= JVS(717)
    W(137)= JVS(718)
    W(138)= JVS(719)
    a = - W(21)/ JVS(156)
    W(21)= -a
      W(127)= W(127)+ a *JVS(157)
    a = - W(32)/ JVS(180)
    W(32)= -a
      W(127)= W(127)+ a *JVS(181)
    a = - W(57)/ JVS(260)
    W(57)= -a
      W(117)= W(117)+ a *JVS(261)
      W(127)= W(127)+ a *JVS(262)
      W(128)= W(128)+ a *JVS(263)
    a = - W(79)/ JVS(362)
    W(79)= -a
      W(103)= W(103)+ a *JVS(363)
      W(127)= W(127)+ a *JVS(364)
      W(128)= W(128)+ a *JVS(365)
    a = - W(81)/ JVS(374)
    W(81)= -a
      W(103)= W(103)+ a *JVS(375)
      W(111)= W(111)+ a *JVS(376)
      W(127)= W(127)+ a *JVS(377)
      W(128)= W(128)+ a *JVS(378)
      W(132)= W(132)+ a *JVS(379)
      W(134)= W(134)+ a *JVS(380)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    JVS(701)= W(21)
    JVS(702)= W(32)
    JVS(703)= W(57)
    JVS(704)= W(79)
    JVS(705)= W(81)
    JVS(706)= W(96)
    JVS(707)= W(103)
    JVS(708)= W(111)
    JVS(709)= W(115)
    JVS(710)= W(117)
    JVS(711)= W(121)
    JVS(712)= W(125)
    JVS(713)= W(127)
    JVS(714)= W(128)
    JVS(715)= W(132)
    JVS(716)= W(134)
    JVS(717)= W(136)
    JVS(718)= W(137)
    JVS(719)= W(138)
!   k = 118
    W(101)= JVS(720)
    W(104)= JVS(721)
    W(113)= JVS(722)
    W(116)= JVS(723)
    W(118)= JVS(724)
    W(123)= JVS(725)
    W(124)= JVS(726)
    W(126)= JVS(727)
    W(127)= JVS(728)
    W(128)= JVS(729)
    W(129)= JVS(730)
    W(130)= JVS(731)
    W(131)= JVS(732)
    W(132)= JVS(733)
    W(135)= JVS(734)
    W(137)= JVS(735)
    W(138)= JVS(736)
    a = - W(101)/ JVS(547)
    W(101)= -a
      W(104)= W(104)+ a *JVS(548)
      W(113)= W(113)+ a *JVS(549)
      W(116)= W(116)+ a *JVS(550)
      W(118)= W(118)+ a *JVS(551)
      W(123)= W(123)+ a *JVS(552)
      W(124)= W(124)+ a *JVS(553)
      W(127)= W(127)+ a *JVS(554)
      W(130)= W(130)+ a *JVS(555)
      W(131)= W(131)+ a *JVS(556)
      W(137)= W(137)+ a *JVS(557)
      W(138)= W(138)+ a *JVS(558)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    JVS(720)= W(101)
    JVS(721)= W(104)
    JVS(722)= W(113)
    JVS(723)= W(116)
    JVS(724)= W(118)
    JVS(725)= W(123)
    JVS(726)= W(124)
    JVS(727)= W(126)
    JVS(728)= W(127)
    JVS(729)= W(128)
    JVS(730)= W(129)
    JVS(731)= W(130)
    JVS(732)= W(131)
    JVS(733)= W(132)
    JVS(734)= W(135)
    JVS(735)= W(137)
    JVS(736)= W(138)
!   k = 119
    W(55)= JVS(737)
    W(57)= JVS(738)
    W(79)= JVS(739)
    W(96)= JVS(740)
    W(97)= JVS(741)
    W(103)= JVS(742)
    W(111)= JVS(743)
    W(115)= JVS(744)
    W(117)= JVS(745)
    W(119)= JVS(746)
    W(121)= JVS(747)
    W(125)= JVS(748)
    W(127)= JVS(749)
    W(128)= JVS(750)
    W(132)= JVS(751)
    W(134)= JVS(752)
    W(136)= JVS(753)
    W(137)= JVS(754)
    W(138)= JVS(755)
    a = - W(55)/ JVS(252)
    W(55)= -a
      W(97)= W(97)+ a *JVS(253)
      W(127)= W(127)+ a *JVS(254)
      W(128)= W(128)+ a *JVS(255)
    a = - W(57)/ JVS(260)
    W(57)= -a
      W(117)= W(117)+ a *JVS(261)
      W(127)= W(127)+ a *JVS(262)
      W(128)= W(128)+ a *JVS(263)
    a = - W(79)/ JVS(362)
    W(79)= -a
      W(103)= W(103)+ a *JVS(363)
      W(127)= W(127)+ a *JVS(364)
      W(128)= W(128)+ a *JVS(365)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(97)/ JVS(519)
    W(97)= -a
      W(103)= W(103)+ a *JVS(520)
      W(111)= W(111)+ a *JVS(521)
      W(127)= W(127)+ a *JVS(522)
      W(128)= W(128)+ a *JVS(523)
      W(132)= W(132)+ a *JVS(524)
      W(134)= W(134)+ a *JVS(525)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    JVS(737)= W(55)
    JVS(738)= W(57)
    JVS(739)= W(79)
    JVS(740)= W(96)
    JVS(741)= W(97)
    JVS(742)= W(103)
    JVS(743)= W(111)
    JVS(744)= W(115)
    JVS(745)= W(117)
    JVS(746)= W(119)
    JVS(747)= W(121)
    JVS(748)= W(125)
    JVS(749)= W(127)
    JVS(750)= W(128)
    JVS(751)= W(132)
    JVS(752)= W(134)
    JVS(753)= W(136)
    JVS(754)= W(137)
    JVS(755)= W(138)
!   k = 120
    W(23)= JVS(756)
    W(24)= JVS(757)
    W(25)= JVS(758)
    W(26)= JVS(759)
    W(27)= JVS(760)
    W(33)= JVS(761)
    W(42)= JVS(762)
    W(44)= JVS(763)
    W(49)= JVS(764)
    W(52)= JVS(765)
    W(56)= JVS(766)
    W(69)= JVS(767)
    W(71)= JVS(768)
    W(72)= JVS(769)
    W(73)= JVS(770)
    W(74)= JVS(771)
    W(77)= JVS(772)
    W(90)= JVS(773)
    W(98)= JVS(774)
    W(99)= JVS(775)
    W(120)= JVS(776)
    W(122)= JVS(777)
    W(125)= JVS(778)
    W(127)= JVS(779)
    W(128)= JVS(780)
    W(129)= JVS(781)
    W(133)= JVS(782)
    W(134)= JVS(783)
    W(135)= JVS(784)
    W(136)= JVS(785)
    W(138)= JVS(786)
    a = - W(23)/ JVS(160)
    W(23)= -a
      W(120)= W(120)+ a *JVS(161)
    a = - W(24)/ JVS(162)
    W(24)= -a
      W(120)= W(120)+ a *JVS(163)
    a = - W(25)/ JVS(164)
    W(25)= -a
      W(120)= W(120)+ a *JVS(165)
    a = - W(26)/ JVS(166)
    W(26)= -a
      W(120)= W(120)+ a *JVS(167)
    a = - W(27)/ JVS(168)
    W(27)= -a
      W(120)= W(120)+ a *JVS(169)
    a = - W(33)/ JVS(182)
    W(33)= -a
      W(120)= W(120)+ a *JVS(183)
    a = - W(42)/ JVS(204)
    W(42)= -a
      W(120)= W(120)+ a *JVS(205)
      W(127)= W(127)+ a *JVS(206)
    a = - W(44)/ JVS(210)
    W(44)= -a
      W(120)= W(120)+ a *JVS(211)
      W(127)= W(127)+ a *JVS(212)
    a = - W(49)/ JVS(226)
    W(49)= -a
      W(90)= W(90)+ a *JVS(227)
      W(120)= W(120)+ a *JVS(228)
      W(134)= W(134)+ a *JVS(229)
      W(135)= W(135)+ a *JVS(230)
    a = - W(52)/ JVS(240)
    W(52)= -a
      W(120)= W(120)+ a *JVS(241)
      W(127)= W(127)+ a *JVS(242)
    a = - W(56)/ JVS(256)
    W(56)= -a
      W(120)= W(120)+ a *JVS(257)
      W(127)= W(127)+ a *JVS(258)
      W(138)= W(138)+ a *JVS(259)
    a = - W(69)/ JVS(315)
    W(69)= -a
      W(120)= W(120)+ a *JVS(316)
      W(127)= W(127)+ a *JVS(317)
      W(138)= W(138)+ a *JVS(318)
    a = - W(71)/ JVS(323)
    W(71)= -a
      W(120)= W(120)+ a *JVS(324)
      W(127)= W(127)+ a *JVS(325)
      W(138)= W(138)+ a *JVS(326)
    a = - W(72)/ JVS(327)
    W(72)= -a
      W(120)= W(120)+ a *JVS(328)
      W(127)= W(127)+ a *JVS(329)
      W(138)= W(138)+ a *JVS(330)
    a = - W(73)/ JVS(331)
    W(73)= -a
      W(120)= W(120)+ a *JVS(332)
      W(127)= W(127)+ a *JVS(333)
      W(138)= W(138)+ a *JVS(334)
    a = - W(74)/ JVS(335)
    W(74)= -a
      W(120)= W(120)+ a *JVS(336)
      W(127)= W(127)+ a *JVS(337)
      W(138)= W(138)+ a *JVS(338)
    a = - W(77)/ JVS(350)
    W(77)= -a
      W(120)= W(120)+ a *JVS(351)
      W(127)= W(127)+ a *JVS(352)
      W(138)= W(138)+ a *JVS(353)
    a = - W(90)/ JVS(444)
    W(90)= -a
      W(125)= W(125)+ a *JVS(445)
      W(127)= W(127)+ a *JVS(446)
      W(128)= W(128)+ a *JVS(447)
      W(134)= W(134)+ a *JVS(448)
      W(135)= W(135)+ a *JVS(449)
    a = - W(98)/ JVS(526)
    W(98)= -a
      W(99)= W(99)+ a *JVS(527)
      W(120)= W(120)+ a *JVS(528)
      W(122)= W(122)+ a *JVS(529)
      W(127)= W(127)+ a *JVS(530)
      W(128)= W(128)+ a *JVS(531)
      W(133)= W(133)+ a *JVS(532)
      W(138)= W(138)+ a *JVS(533)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    JVS(756)= W(23)
    JVS(757)= W(24)
    JVS(758)= W(25)
    JVS(759)= W(26)
    JVS(760)= W(27)
    JVS(761)= W(33)
    JVS(762)= W(42)
    JVS(763)= W(44)
    JVS(764)= W(49)
    JVS(765)= W(52)
    JVS(766)= W(56)
    JVS(767)= W(69)
    JVS(768)= W(71)
    JVS(769)= W(72)
    JVS(770)= W(73)
    JVS(771)= W(74)
    JVS(772)= W(77)
    JVS(773)= W(90)
    JVS(774)= W(98)
    JVS(775)= W(99)
    JVS(776)= W(120)
    JVS(777)= W(122)
    JVS(778)= W(125)
    JVS(779)= W(127)
    JVS(780)= W(128)
    JVS(781)= W(129)
    JVS(782)= W(133)
    JVS(783)= W(134)
    JVS(784)= W(135)
    JVS(785)= W(136)
    JVS(786)= W(138)
!   k = 121
    W(18)= JVS(787)
    W(55)= JVS(788)
    W(58)= JVS(789)
    W(67)= JVS(790)
    W(75)= JVS(791)
    W(81)= JVS(792)
    W(82)= JVS(793)
    W(86)= JVS(794)
    W(92)= JVS(795)
    W(93)= JVS(796)
    W(94)= JVS(797)
    W(96)= JVS(798)
    W(97)= JVS(799)
    W(103)= JVS(800)
    W(107)= JVS(801)
    W(108)= JVS(802)
    W(109)= JVS(803)
    W(110)= JVS(804)
    W(111)= JVS(805)
    W(112)= JVS(806)
    W(115)= JVS(807)
    W(117)= JVS(808)
    W(119)= JVS(809)
    W(121)= JVS(810)
    W(125)= JVS(811)
    W(127)= JVS(812)
    W(128)= JVS(813)
    W(132)= JVS(814)
    W(134)= JVS(815)
    W(135)= JVS(816)
    W(136)= JVS(817)
    W(137)= JVS(818)
    W(138)= JVS(819)
    a = - W(18)/ JVS(149)
    W(18)= -a
      W(55)= W(55)+ a *JVS(150)
      W(127)= W(127)+ a *JVS(151)
    a = - W(55)/ JVS(252)
    W(55)= -a
      W(97)= W(97)+ a *JVS(253)
      W(127)= W(127)+ a *JVS(254)
      W(128)= W(128)+ a *JVS(255)
    a = - W(58)/ JVS(264)
    W(58)= -a
      W(121)= W(121)+ a *JVS(265)
      W(127)= W(127)+ a *JVS(266)
      W(128)= W(128)+ a *JVS(267)
    a = - W(67)/ JVS(306)
    W(67)= -a
      W(93)= W(93)+ a *JVS(307)
      W(127)= W(127)+ a *JVS(308)
      W(128)= W(128)+ a *JVS(309)
    a = - W(75)/ JVS(339)
    W(75)= -a
      W(121)= W(121)+ a *JVS(340)
      W(127)= W(127)+ a *JVS(341)
      W(135)= W(135)+ a *JVS(342)
    a = - W(81)/ JVS(374)
    W(81)= -a
      W(103)= W(103)+ a *JVS(375)
      W(111)= W(111)+ a *JVS(376)
      W(127)= W(127)+ a *JVS(377)
      W(128)= W(128)+ a *JVS(378)
      W(132)= W(132)+ a *JVS(379)
      W(134)= W(134)+ a *JVS(380)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(86)/ JVS(405)
    W(86)= -a
      W(92)= W(92)+ a *JVS(406)
      W(127)= W(127)+ a *JVS(407)
      W(128)= W(128)+ a *JVS(408)
      W(132)= W(132)+ a *JVS(409)
      W(134)= W(134)+ a *JVS(410)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(94)/ JVS(474)
    W(94)= -a
      W(96)= W(96)+ a *JVS(475)
      W(108)= W(108)+ a *JVS(476)
      W(109)= W(109)+ a *JVS(477)
      W(110)= W(110)+ a *JVS(478)
      W(112)= W(112)+ a *JVS(479)
      W(125)= W(125)+ a *JVS(480)
      W(127)= W(127)+ a *JVS(481)
      W(128)= W(128)+ a *JVS(482)
      W(132)= W(132)+ a *JVS(483)
      W(134)= W(134)+ a *JVS(484)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(97)/ JVS(519)
    W(97)= -a
      W(103)= W(103)+ a *JVS(520)
      W(111)= W(111)+ a *JVS(521)
      W(127)= W(127)+ a *JVS(522)
      W(128)= W(128)+ a *JVS(523)
      W(132)= W(132)+ a *JVS(524)
      W(134)= W(134)+ a *JVS(525)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(108)/ JVS(615)
    W(108)= -a
      W(109)= W(109)+ a *JVS(616)
      W(112)= W(112)+ a *JVS(617)
      W(115)= W(115)+ a *JVS(618)
      W(125)= W(125)+ a *JVS(619)
      W(127)= W(127)+ a *JVS(620)
      W(128)= W(128)+ a *JVS(621)
      W(132)= W(132)+ a *JVS(622)
      W(134)= W(134)+ a *JVS(623)
      W(135)= W(135)+ a *JVS(624)
      W(136)= W(136)+ a *JVS(625)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    JVS(787)= W(18)
    JVS(788)= W(55)
    JVS(789)= W(58)
    JVS(790)= W(67)
    JVS(791)= W(75)
    JVS(792)= W(81)
    JVS(793)= W(82)
    JVS(794)= W(86)
    JVS(795)= W(92)
    JVS(796)= W(93)
    JVS(797)= W(94)
    JVS(798)= W(96)
    JVS(799)= W(97)
    JVS(800)= W(103)
    JVS(801)= W(107)
    JVS(802)= W(108)
    JVS(803)= W(109)
    JVS(804)= W(110)
    JVS(805)= W(111)
    JVS(806)= W(112)
    JVS(807)= W(115)
    JVS(808)= W(117)
    JVS(809)= W(119)
    JVS(810)= W(121)
    JVS(811)= W(125)
    JVS(812)= W(127)
    JVS(813)= W(128)
    JVS(814)= W(132)
    JVS(815)= W(134)
    JVS(816)= W(135)
    JVS(817)= W(136)
    JVS(818)= W(137)
    JVS(819)= W(138)
!   k = 122
    W(95)= JVS(820)
    W(96)= JVS(821)
    W(98)= JVS(822)
    W(99)= JVS(823)
    W(100)= JVS(824)
    W(107)= JVS(825)
    W(108)= JVS(826)
    W(109)= JVS(827)
    W(110)= JVS(828)
    W(112)= JVS(829)
    W(115)= JVS(830)
    W(119)= JVS(831)
    W(120)= JVS(832)
    W(121)= JVS(833)
    W(122)= JVS(834)
    W(125)= JVS(835)
    W(126)= JVS(836)
    W(127)= JVS(837)
    W(128)= JVS(838)
    W(129)= JVS(839)
    W(130)= JVS(840)
    W(132)= JVS(841)
    W(133)= JVS(842)
    W(134)= JVS(843)
    W(135)= JVS(844)
    W(136)= JVS(845)
    W(137)= JVS(846)
    W(138)= JVS(847)
    a = - W(95)/ JVS(491)
    W(95)= -a
      W(96)= W(96)+ a *JVS(492)
      W(99)= W(99)+ a *JVS(493)
      W(100)= W(100)+ a *JVS(494)
      W(107)= W(107)+ a *JVS(495)
      W(108)= W(108)+ a *JVS(496)
      W(109)= W(109)+ a *JVS(497)
      W(110)= W(110)+ a *JVS(498)
      W(112)= W(112)+ a *JVS(499)
      W(119)= W(119)+ a *JVS(500)
      W(121)= W(121)+ a *JVS(501)
      W(125)= W(125)+ a *JVS(502)
      W(126)= W(126)+ a *JVS(503)
      W(127)= W(127)+ a *JVS(504)
      W(128)= W(128)+ a *JVS(505)
      W(132)= W(132)+ a *JVS(506)
      W(133)= W(133)+ a *JVS(507)
      W(134)= W(134)+ a *JVS(508)
      W(135)= W(135)+ a *JVS(509)
      W(136)= W(136)+ a *JVS(510)
      W(137)= W(137)+ a *JVS(511)
      W(138)= W(138)+ a *JVS(512)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(98)/ JVS(526)
    W(98)= -a
      W(99)= W(99)+ a *JVS(527)
      W(120)= W(120)+ a *JVS(528)
      W(122)= W(122)+ a *JVS(529)
      W(127)= W(127)+ a *JVS(530)
      W(128)= W(128)+ a *JVS(531)
      W(133)= W(133)+ a *JVS(532)
      W(138)= W(138)+ a *JVS(533)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(108)/ JVS(615)
    W(108)= -a
      W(109)= W(109)+ a *JVS(616)
      W(112)= W(112)+ a *JVS(617)
      W(115)= W(115)+ a *JVS(618)
      W(125)= W(125)+ a *JVS(619)
      W(127)= W(127)+ a *JVS(620)
      W(128)= W(128)+ a *JVS(621)
      W(132)= W(132)+ a *JVS(622)
      W(134)= W(134)+ a *JVS(623)
      W(135)= W(135)+ a *JVS(624)
      W(136)= W(136)+ a *JVS(625)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    JVS(820)= W(95)
    JVS(821)= W(96)
    JVS(822)= W(98)
    JVS(823)= W(99)
    JVS(824)= W(100)
    JVS(825)= W(107)
    JVS(826)= W(108)
    JVS(827)= W(109)
    JVS(828)= W(110)
    JVS(829)= W(112)
    JVS(830)= W(115)
    JVS(831)= W(119)
    JVS(832)= W(120)
    JVS(833)= W(121)
    JVS(834)= W(122)
    JVS(835)= W(125)
    JVS(836)= W(126)
    JVS(837)= W(127)
    JVS(838)= W(128)
    JVS(839)= W(129)
    JVS(840)= W(130)
    JVS(841)= W(132)
    JVS(842)= W(133)
    JVS(843)= W(134)
    JVS(844)= W(135)
    JVS(845)= W(136)
    JVS(846)= W(137)
    JVS(847)= W(138)
!   k = 123
    W(70)= JVS(848)
    W(100)= JVS(849)
    W(106)= JVS(850)
    W(113)= JVS(851)
    W(114)= JVS(852)
    W(116)= JVS(853)
    W(118)= JVS(854)
    W(119)= JVS(855)
    W(121)= JVS(856)
    W(123)= JVS(857)
    W(124)= JVS(858)
    W(125)= JVS(859)
    W(126)= JVS(860)
    W(127)= JVS(861)
    W(128)= JVS(862)
    W(129)= JVS(863)
    W(130)= JVS(864)
    W(131)= JVS(865)
    W(132)= JVS(866)
    W(133)= JVS(867)
    W(134)= JVS(868)
    W(135)= JVS(869)
    W(136)= JVS(870)
    W(137)= JVS(871)
    W(138)= JVS(872)
    a = - W(70)/ JVS(319)
    W(70)= -a
      W(127)= W(127)+ a *JVS(320)
      W(137)= W(137)+ a *JVS(321)
      W(138)= W(138)+ a *JVS(322)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    JVS(848)= W(70)
    JVS(849)= W(100)
    JVS(850)= W(106)
    JVS(851)= W(113)
    JVS(852)= W(114)
    JVS(853)= W(116)
    JVS(854)= W(118)
    JVS(855)= W(119)
    JVS(856)= W(121)
    JVS(857)= W(123)
    JVS(858)= W(124)
    JVS(859)= W(125)
    JVS(860)= W(126)
    JVS(861)= W(127)
    JVS(862)= W(128)
    JVS(863)= W(129)
    JVS(864)= W(130)
    JVS(865)= W(131)
    JVS(866)= W(132)
    JVS(867)= W(133)
    JVS(868)= W(134)
    JVS(869)= W(135)
    JVS(870)= W(136)
    JVS(871)= W(137)
    JVS(872)= W(138)
!   k = 124
    W(19)= JVS(873)
    W(23)= JVS(874)
    W(24)= JVS(875)
    W(27)= JVS(876)
    W(33)= JVS(877)
    W(35)= JVS(878)
    W(77)= JVS(879)
    W(113)= JVS(880)
    W(116)= JVS(881)
    W(120)= JVS(882)
    W(122)= JVS(883)
    W(123)= JVS(884)
    W(124)= JVS(885)
    W(125)= JVS(886)
    W(126)= JVS(887)
    W(127)= JVS(888)
    W(128)= JVS(889)
    W(129)= JVS(890)
    W(130)= JVS(891)
    W(131)= JVS(892)
    W(132)= JVS(893)
    W(133)= JVS(894)
    W(134)= JVS(895)
    W(135)= JVS(896)
    W(136)= JVS(897)
    W(137)= JVS(898)
    W(138)= JVS(899)
    a = - W(19)/ JVS(152)
    W(19)= -a
      W(124)= W(124)+ a *JVS(153)
    a = - W(23)/ JVS(160)
    W(23)= -a
      W(120)= W(120)+ a *JVS(161)
    a = - W(24)/ JVS(162)
    W(24)= -a
      W(120)= W(120)+ a *JVS(163)
    a = - W(27)/ JVS(168)
    W(27)= -a
      W(120)= W(120)+ a *JVS(169)
    a = - W(33)/ JVS(182)
    W(33)= -a
      W(120)= W(120)+ a *JVS(183)
    a = - W(35)/ JVS(187)
    W(35)= -a
      W(124)= W(124)+ a *JVS(188)
      W(131)= W(131)+ a *JVS(189)
    a = - W(77)/ JVS(350)
    W(77)= -a
      W(120)= W(120)+ a *JVS(351)
      W(127)= W(127)+ a *JVS(352)
      W(138)= W(138)+ a *JVS(353)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    JVS(873)= W(19)
    JVS(874)= W(23)
    JVS(875)= W(24)
    JVS(876)= W(27)
    JVS(877)= W(33)
    JVS(878)= W(35)
    JVS(879)= W(77)
    JVS(880)= W(113)
    JVS(881)= W(116)
    JVS(882)= W(120)
    JVS(883)= W(122)
    JVS(884)= W(123)
    JVS(885)= W(124)
    JVS(886)= W(125)
    JVS(887)= W(126)
    JVS(888)= W(127)
    JVS(889)= W(128)
    JVS(890)= W(129)
    JVS(891)= W(130)
    JVS(892)= W(131)
    JVS(893)= W(132)
    JVS(894)= W(133)
    JVS(895)= W(134)
    JVS(896)= W(135)
    JVS(897)= W(136)
    JVS(898)= W(137)
    JVS(899)= W(138)
!   k = 125
    W(59)= JVS(900)
    W(80)= JVS(901)
    W(84)= JVS(902)
    W(90)= JVS(903)
    W(96)= JVS(904)
    W(100)= JVS(905)
    W(105)= JVS(906)
    W(107)= JVS(907)
    W(110)= JVS(908)
    W(114)= JVS(909)
    W(120)= JVS(910)
    W(121)= JVS(911)
    W(122)= JVS(912)
    W(125)= JVS(913)
    W(126)= JVS(914)
    W(127)= JVS(915)
    W(128)= JVS(916)
    W(129)= JVS(917)
    W(130)= JVS(918)
    W(131)= JVS(919)
    W(132)= JVS(920)
    W(133)= JVS(921)
    W(134)= JVS(922)
    W(135)= JVS(923)
    W(136)= JVS(924)
    W(137)= JVS(925)
    W(138)= JVS(926)
    a = - W(59)/ JVS(271)
    W(59)= -a
      W(105)= W(105)+ a *JVS(272)
      W(125)= W(125)+ a *JVS(273)
      W(126)= W(126)+ a *JVS(274)
      W(127)= W(127)+ a *JVS(275)
    a = - W(80)/ JVS(366)
    W(80)= -a
      W(114)= W(114)+ a *JVS(367)
      W(125)= W(125)+ a *JVS(368)
      W(127)= W(127)+ a *JVS(369)
      W(136)= W(136)+ a *JVS(370)
      W(137)= W(137)+ a *JVS(371)
      W(138)= W(138)+ a *JVS(372)
    a = - W(84)/ JVS(390)
    W(84)= -a
      W(90)= W(90)+ a *JVS(391)
      W(125)= W(125)+ a *JVS(392)
      W(128)= W(128)+ a *JVS(393)
      W(135)= W(135)+ a *JVS(394)
    a = - W(90)/ JVS(444)
    W(90)= -a
      W(125)= W(125)+ a *JVS(445)
      W(127)= W(127)+ a *JVS(446)
      W(128)= W(128)+ a *JVS(447)
      W(134)= W(134)+ a *JVS(448)
      W(135)= W(135)+ a *JVS(449)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(105)/ JVS(589)
    W(105)= -a
      W(114)= W(114)+ a *JVS(590)
      W(125)= W(125)+ a *JVS(591)
      W(126)= W(126)+ a *JVS(592)
      W(127)= W(127)+ a *JVS(593)
      W(129)= W(129)+ a *JVS(594)
      W(131)= W(131)+ a *JVS(595)
      W(136)= W(136)+ a *JVS(596)
      W(137)= W(137)+ a *JVS(597)
      W(138)= W(138)+ a *JVS(598)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    JVS(900)= W(59)
    JVS(901)= W(80)
    JVS(902)= W(84)
    JVS(903)= W(90)
    JVS(904)= W(96)
    JVS(905)= W(100)
    JVS(906)= W(105)
    JVS(907)= W(107)
    JVS(908)= W(110)
    JVS(909)= W(114)
    JVS(910)= W(120)
    JVS(911)= W(121)
    JVS(912)= W(122)
    JVS(913)= W(125)
    JVS(914)= W(126)
    JVS(915)= W(127)
    JVS(916)= W(128)
    JVS(917)= W(129)
    JVS(918)= W(130)
    JVS(919)= W(131)
    JVS(920)= W(132)
    JVS(921)= W(133)
    JVS(922)= W(134)
    JVS(923)= W(135)
    JVS(924)= W(136)
    JVS(925)= W(137)
    JVS(926)= W(138)
!   k = 126
    W(20)= JVS(927)
    W(25)= JVS(928)
    W(26)= JVS(929)
    W(33)= JVS(930)
    W(35)= JVS(931)
    W(42)= JVS(932)
    W(46)= JVS(933)
    W(48)= JVS(934)
    W(51)= JVS(935)
    W(59)= JVS(936)
    W(69)= JVS(937)
    W(71)= JVS(938)
    W(72)= JVS(939)
    W(73)= JVS(940)
    W(74)= JVS(941)
    W(77)= JVS(942)
    W(105)= JVS(943)
    W(114)= JVS(944)
    W(116)= JVS(945)
    W(118)= JVS(946)
    W(120)= JVS(947)
    W(122)= JVS(948)
    W(123)= JVS(949)
    W(124)= JVS(950)
    W(125)= JVS(951)
    W(126)= JVS(952)
    W(127)= JVS(953)
    W(128)= JVS(954)
    W(129)= JVS(955)
    W(130)= JVS(956)
    W(131)= JVS(957)
    W(132)= JVS(958)
    W(133)= JVS(959)
    W(134)= JVS(960)
    W(135)= JVS(961)
    W(136)= JVS(962)
    W(137)= JVS(963)
    W(138)= JVS(964)
    a = - W(20)/ JVS(154)
    W(20)= -a
      W(46)= W(46)+ a *JVS(155)
    a = - W(25)/ JVS(164)
    W(25)= -a
      W(120)= W(120)+ a *JVS(165)
    a = - W(26)/ JVS(166)
    W(26)= -a
      W(120)= W(120)+ a *JVS(167)
    a = - W(33)/ JVS(182)
    W(33)= -a
      W(120)= W(120)+ a *JVS(183)
    a = - W(35)/ JVS(187)
    W(35)= -a
      W(124)= W(124)+ a *JVS(188)
      W(131)= W(131)+ a *JVS(189)
    a = - W(42)/ JVS(204)
    W(42)= -a
      W(120)= W(120)+ a *JVS(205)
      W(127)= W(127)+ a *JVS(206)
    a = - W(46)/ JVS(216)
    W(46)= -a
      W(126)= W(126)+ a *JVS(217)
      W(127)= W(127)+ a *JVS(218)
    a = - W(48)/ JVS(222)
    W(48)= -a
      W(134)= W(134)+ a *JVS(223)
      W(135)= W(135)+ a *JVS(224)
    a = - W(51)/ JVS(236)
    W(51)= -a
      W(105)= W(105)+ a *JVS(237)
      W(127)= W(127)+ a *JVS(238)
      W(129)= W(129)+ a *JVS(239)
    a = - W(59)/ JVS(271)
    W(59)= -a
      W(105)= W(105)+ a *JVS(272)
      W(125)= W(125)+ a *JVS(273)
      W(126)= W(126)+ a *JVS(274)
      W(127)= W(127)+ a *JVS(275)
    a = - W(69)/ JVS(315)
    W(69)= -a
      W(120)= W(120)+ a *JVS(316)
      W(127)= W(127)+ a *JVS(317)
      W(138)= W(138)+ a *JVS(318)
    a = - W(71)/ JVS(323)
    W(71)= -a
      W(120)= W(120)+ a *JVS(324)
      W(127)= W(127)+ a *JVS(325)
      W(138)= W(138)+ a *JVS(326)
    a = - W(72)/ JVS(327)
    W(72)= -a
      W(120)= W(120)+ a *JVS(328)
      W(127)= W(127)+ a *JVS(329)
      W(138)= W(138)+ a *JVS(330)
    a = - W(73)/ JVS(331)
    W(73)= -a
      W(120)= W(120)+ a *JVS(332)
      W(127)= W(127)+ a *JVS(333)
      W(138)= W(138)+ a *JVS(334)
    a = - W(74)/ JVS(335)
    W(74)= -a
      W(120)= W(120)+ a *JVS(336)
      W(127)= W(127)+ a *JVS(337)
      W(138)= W(138)+ a *JVS(338)
    a = - W(77)/ JVS(350)
    W(77)= -a
      W(120)= W(120)+ a *JVS(351)
      W(127)= W(127)+ a *JVS(352)
      W(138)= W(138)+ a *JVS(353)
    a = - W(105)/ JVS(589)
    W(105)= -a
      W(114)= W(114)+ a *JVS(590)
      W(125)= W(125)+ a *JVS(591)
      W(126)= W(126)+ a *JVS(592)
      W(127)= W(127)+ a *JVS(593)
      W(129)= W(129)+ a *JVS(594)
      W(131)= W(131)+ a *JVS(595)
      W(136)= W(136)+ a *JVS(596)
      W(137)= W(137)+ a *JVS(597)
      W(138)= W(138)+ a *JVS(598)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    JVS(927)= W(20)
    JVS(928)= W(25)
    JVS(929)= W(26)
    JVS(930)= W(33)
    JVS(931)= W(35)
    JVS(932)= W(42)
    JVS(933)= W(46)
    JVS(934)= W(48)
    JVS(935)= W(51)
    JVS(936)= W(59)
    JVS(937)= W(69)
    JVS(938)= W(71)
    JVS(939)= W(72)
    JVS(940)= W(73)
    JVS(941)= W(74)
    JVS(942)= W(77)
    JVS(943)= W(105)
    JVS(944)= W(114)
    JVS(945)= W(116)
    JVS(946)= W(118)
    JVS(947)= W(120)
    JVS(948)= W(122)
    JVS(949)= W(123)
    JVS(950)= W(124)
    JVS(951)= W(125)
    JVS(952)= W(126)
    JVS(953)= W(127)
    JVS(954)= W(128)
    JVS(955)= W(129)
    JVS(956)= W(130)
    JVS(957)= W(131)
    JVS(958)= W(132)
    JVS(959)= W(133)
    JVS(960)= W(134)
    JVS(961)= W(135)
    JVS(962)= W(136)
    JVS(963)= W(137)
    JVS(964)= W(138)
!   k = 127
    W(21)= JVS(965)
    W(22)= JVS(966)
    W(28)= JVS(967)
    W(29)= JVS(968)
    W(31)= JVS(969)
    W(32)= JVS(970)
    W(36)= JVS(971)
    W(37)= JVS(972)
    W(38)= JVS(973)
    W(39)= JVS(974)
    W(41)= JVS(975)
    W(42)= JVS(976)
    W(43)= JVS(977)
    W(44)= JVS(978)
    W(45)= JVS(979)
    W(46)= JVS(980)
    W(47)= JVS(981)
    W(50)= JVS(982)
    W(52)= JVS(983)
    W(53)= JVS(984)
    W(54)= JVS(985)
    W(55)= JVS(986)
    W(56)= JVS(987)
    W(57)= JVS(988)
    W(58)= JVS(989)
    W(60)= JVS(990)
    W(61)= JVS(991)
    W(62)= JVS(992)
    W(63)= JVS(993)
    W(64)= JVS(994)
    W(65)= JVS(995)
    W(66)= JVS(996)
    W(67)= JVS(997)
    W(68)= JVS(998)
    W(69)= JVS(999)
    W(70)= JVS(1000)
    W(71)= JVS(1001)
    W(72)= JVS(1002)
    W(73)= JVS(1003)
    W(74)= JVS(1004)
    W(75)= JVS(1005)
    W(76)= JVS(1006)
    W(77)= JVS(1007)
    W(79)= JVS(1008)
    W(81)= JVS(1009)
    W(82)= JVS(1010)
    W(84)= JVS(1011)
    W(85)= JVS(1012)
    W(86)= JVS(1013)
    W(87)= JVS(1014)
    W(88)= JVS(1015)
    W(90)= JVS(1016)
    W(91)= JVS(1017)
    W(92)= JVS(1018)
    W(93)= JVS(1019)
    W(94)= JVS(1020)
    W(95)= JVS(1021)
    W(96)= JVS(1022)
    W(97)= JVS(1023)
    W(98)= JVS(1024)
    W(99)= JVS(1025)
    W(100)= JVS(1026)
    W(101)= JVS(1027)
    W(102)= JVS(1028)
    W(103)= JVS(1029)
    W(104)= JVS(1030)
    W(105)= JVS(1031)
    W(106)= JVS(1032)
    W(107)= JVS(1033)
    W(108)= JVS(1034)
    W(109)= JVS(1035)
    W(110)= JVS(1036)
    W(111)= JVS(1037)
    W(112)= JVS(1038)
    W(113)= JVS(1039)
    W(114)= JVS(1040)
    W(115)= JVS(1041)
    W(116)= JVS(1042)
    W(117)= JVS(1043)
    W(118)= JVS(1044)
    W(119)= JVS(1045)
    W(120)= JVS(1046)
    W(121)= JVS(1047)
    W(122)= JVS(1048)
    W(123)= JVS(1049)
    W(124)= JVS(1050)
    W(125)= JVS(1051)
    W(126)= JVS(1052)
    W(127)= JVS(1053)
    W(128)= JVS(1054)
    W(129)= JVS(1055)
    W(130)= JVS(1056)
    W(131)= JVS(1057)
    W(132)= JVS(1058)
    W(133)= JVS(1059)
    W(134)= JVS(1060)
    W(135)= JVS(1061)
    W(136)= JVS(1062)
    W(137)= JVS(1063)
    W(138)= JVS(1064)
    a = - W(21)/ JVS(156)
    W(21)= -a
      W(127)= W(127)+ a *JVS(157)
    a = - W(22)/ JVS(158)
    W(22)= -a
      W(127)= W(127)+ a *JVS(159)
    a = - W(28)/ JVS(170)
    W(28)= -a
      W(127)= W(127)+ a *JVS(171)
    a = - W(29)/ JVS(172)
    W(29)= -a
      W(127)= W(127)+ a *JVS(173)
    a = - W(31)/ JVS(178)
    W(31)= -a
      W(127)= W(127)+ a *JVS(179)
    a = - W(32)/ JVS(180)
    W(32)= -a
      W(127)= W(127)+ a *JVS(181)
    a = - W(36)/ JVS(190)
    W(36)= -a
      W(127)= W(127)+ a *JVS(191)
    a = - W(37)/ JVS(192)
    W(37)= -a
      W(127)= W(127)+ a *JVS(193)
    a = - W(38)/ JVS(194)
    W(38)= -a
      W(127)= W(127)+ a *JVS(195)
    a = - W(39)/ JVS(196)
    W(39)= -a
      W(127)= W(127)+ a *JVS(197)
    a = - W(41)/ JVS(201)
    W(41)= -a
      W(46)= W(46)+ a *JVS(202)
      W(127)= W(127)+ a *JVS(203)
    a = - W(42)/ JVS(204)
    W(42)= -a
      W(120)= W(120)+ a *JVS(205)
      W(127)= W(127)+ a *JVS(206)
    a = - W(43)/ JVS(207)
    W(43)= -a
      W(127)= W(127)+ a *JVS(208)
      W(138)= W(138)+ a *JVS(209)
    a = - W(44)/ JVS(210)
    W(44)= -a
      W(120)= W(120)+ a *JVS(211)
      W(127)= W(127)+ a *JVS(212)
    a = - W(45)/ JVS(213)
    W(45)= -a
      W(127)= W(127)+ a *JVS(214)
      W(138)= W(138)+ a *JVS(215)
    a = - W(46)/ JVS(216)
    W(46)= -a
      W(126)= W(126)+ a *JVS(217)
      W(127)= W(127)+ a *JVS(218)
    a = - W(47)/ JVS(219)
    W(47)= -a
      W(91)= W(91)+ a *JVS(220)
      W(127)= W(127)+ a *JVS(221)
    a = - W(50)/ JVS(231)
    W(50)= -a
      W(53)= W(53)+ a *JVS(232)
      W(85)= W(85)+ a *JVS(233)
      W(127)= W(127)+ a *JVS(234)
    a = - W(52)/ JVS(240)
    W(52)= -a
      W(120)= W(120)+ a *JVS(241)
      W(127)= W(127)+ a *JVS(242)
    a = - W(53)/ JVS(244)
    W(53)= -a
      W(84)= W(84)+ a *JVS(245)
      W(85)= W(85)+ a *JVS(246)
      W(127)= W(127)+ a *JVS(247)
    a = - W(54)/ JVS(248)
    W(54)= -a
      W(112)= W(112)+ a *JVS(249)
      W(127)= W(127)+ a *JVS(250)
      W(135)= W(135)+ a *JVS(251)
    a = - W(55)/ JVS(252)
    W(55)= -a
      W(97)= W(97)+ a *JVS(253)
      W(127)= W(127)+ a *JVS(254)
      W(128)= W(128)+ a *JVS(255)
    a = - W(56)/ JVS(256)
    W(56)= -a
      W(120)= W(120)+ a *JVS(257)
      W(127)= W(127)+ a *JVS(258)
      W(138)= W(138)+ a *JVS(259)
    a = - W(57)/ JVS(260)
    W(57)= -a
      W(117)= W(117)+ a *JVS(261)
      W(127)= W(127)+ a *JVS(262)
      W(128)= W(128)+ a *JVS(263)
    a = - W(58)/ JVS(264)
    W(58)= -a
      W(121)= W(121)+ a *JVS(265)
      W(127)= W(127)+ a *JVS(266)
      W(128)= W(128)+ a *JVS(267)
    a = - W(60)/ JVS(276)
    W(60)= -a
      W(92)= W(92)+ a *JVS(277)
      W(127)= W(127)+ a *JVS(278)
      W(134)= W(134)+ a *JVS(279)
    a = - W(61)/ JVS(280)
    W(61)= -a
      W(109)= W(109)+ a *JVS(281)
      W(127)= W(127)+ a *JVS(282)
      W(128)= W(128)+ a *JVS(283)
    a = - W(62)/ JVS(284)
    W(62)= -a
      W(115)= W(115)+ a *JVS(285)
      W(127)= W(127)+ a *JVS(286)
      W(128)= W(128)+ a *JVS(287)
    a = - W(63)/ JVS(288)
    W(63)= -a
      W(92)= W(92)+ a *JVS(289)
      W(127)= W(127)+ a *JVS(290)
      W(128)= W(128)+ a *JVS(291)
    a = - W(64)/ JVS(292)
    W(64)= -a
      W(127)= W(127)+ a *JVS(293)
      W(128)= W(128)+ a *JVS(294)
      W(135)= W(135)+ a *JVS(295)
    a = - W(65)/ JVS(296)
    W(65)= -a
      W(117)= W(117)+ a *JVS(297)
      W(121)= W(121)+ a *JVS(298)
      W(127)= W(127)+ a *JVS(299)
      W(128)= W(128)+ a *JVS(300)
      W(132)= W(132)+ a *JVS(301)
    a = - W(66)/ JVS(302)
    W(66)= -a
      W(114)= W(114)+ a *JVS(303)
      W(127)= W(127)+ a *JVS(304)
      W(131)= W(131)+ a *JVS(305)
    a = - W(67)/ JVS(306)
    W(67)= -a
      W(93)= W(93)+ a *JVS(307)
      W(127)= W(127)+ a *JVS(308)
      W(128)= W(128)+ a *JVS(309)
    a = - W(68)/ JVS(310)
    W(68)= -a
      W(85)= W(85)+ a *JVS(311)
      W(127)= W(127)+ a *JVS(312)
      W(134)= W(134)+ a *JVS(313)
      W(135)= W(135)+ a *JVS(314)
    a = - W(69)/ JVS(315)
    W(69)= -a
      W(120)= W(120)+ a *JVS(316)
      W(127)= W(127)+ a *JVS(317)
      W(138)= W(138)+ a *JVS(318)
    a = - W(70)/ JVS(319)
    W(70)= -a
      W(127)= W(127)+ a *JVS(320)
      W(137)= W(137)+ a *JVS(321)
      W(138)= W(138)+ a *JVS(322)
    a = - W(71)/ JVS(323)
    W(71)= -a
      W(120)= W(120)+ a *JVS(324)
      W(127)= W(127)+ a *JVS(325)
      W(138)= W(138)+ a *JVS(326)
    a = - W(72)/ JVS(327)
    W(72)= -a
      W(120)= W(120)+ a *JVS(328)
      W(127)= W(127)+ a *JVS(329)
      W(138)= W(138)+ a *JVS(330)
    a = - W(73)/ JVS(331)
    W(73)= -a
      W(120)= W(120)+ a *JVS(332)
      W(127)= W(127)+ a *JVS(333)
      W(138)= W(138)+ a *JVS(334)
    a = - W(74)/ JVS(335)
    W(74)= -a
      W(120)= W(120)+ a *JVS(336)
      W(127)= W(127)+ a *JVS(337)
      W(138)= W(138)+ a *JVS(338)
    a = - W(75)/ JVS(339)
    W(75)= -a
      W(121)= W(121)+ a *JVS(340)
      W(127)= W(127)+ a *JVS(341)
      W(135)= W(135)+ a *JVS(342)
    a = - W(76)/ JVS(343)
    W(76)= -a
      W(96)= W(96)+ a *JVS(344)
      W(100)= W(100)+ a *JVS(345)
      W(107)= W(107)+ a *JVS(346)
      W(110)= W(110)+ a *JVS(347)
      W(125)= W(125)+ a *JVS(348)
      W(127)= W(127)+ a *JVS(349)
    a = - W(77)/ JVS(350)
    W(77)= -a
      W(120)= W(120)+ a *JVS(351)
      W(127)= W(127)+ a *JVS(352)
      W(138)= W(138)+ a *JVS(353)
    a = - W(79)/ JVS(362)
    W(79)= -a
      W(103)= W(103)+ a *JVS(363)
      W(127)= W(127)+ a *JVS(364)
      W(128)= W(128)+ a *JVS(365)
    a = - W(81)/ JVS(374)
    W(81)= -a
      W(103)= W(103)+ a *JVS(375)
      W(111)= W(111)+ a *JVS(376)
      W(127)= W(127)+ a *JVS(377)
      W(128)= W(128)+ a *JVS(378)
      W(132)= W(132)+ a *JVS(379)
      W(134)= W(134)+ a *JVS(380)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(84)/ JVS(390)
    W(84)= -a
      W(90)= W(90)+ a *JVS(391)
      W(125)= W(125)+ a *JVS(392)
      W(128)= W(128)+ a *JVS(393)
      W(135)= W(135)+ a *JVS(394)
    a = - W(85)/ JVS(397)
    W(85)= -a
      W(90)= W(90)+ a *JVS(398)
      W(125)= W(125)+ a *JVS(399)
      W(127)= W(127)+ a *JVS(400)
      W(128)= W(128)+ a *JVS(401)
      W(135)= W(135)+ a *JVS(402)
    a = - W(86)/ JVS(405)
    W(86)= -a
      W(92)= W(92)+ a *JVS(406)
      W(127)= W(127)+ a *JVS(407)
      W(128)= W(128)+ a *JVS(408)
      W(132)= W(132)+ a *JVS(409)
      W(134)= W(134)+ a *JVS(410)
    a = - W(87)/ JVS(411)
    W(87)= -a
      W(100)= W(100)+ a *JVS(412)
      W(107)= W(107)+ a *JVS(413)
      W(125)= W(125)+ a *JVS(414)
      W(127)= W(127)+ a *JVS(415)
      W(128)= W(128)+ a *JVS(416)
      W(138)= W(138)+ a *JVS(417)
    a = - W(88)/ JVS(418)
    W(88)= -a
      W(92)= W(92)+ a *JVS(419)
      W(93)= W(93)+ a *JVS(420)
      W(96)= W(96)+ a *JVS(421)
      W(103)= W(103)+ a *JVS(422)
      W(109)= W(109)+ a *JVS(423)
      W(112)= W(112)+ a *JVS(424)
      W(117)= W(117)+ a *JVS(425)
      W(125)= W(125)+ a *JVS(426)
      W(127)= W(127)+ a *JVS(427)
      W(132)= W(132)+ a *JVS(428)
    a = - W(90)/ JVS(444)
    W(90)= -a
      W(125)= W(125)+ a *JVS(445)
      W(127)= W(127)+ a *JVS(446)
      W(128)= W(128)+ a *JVS(447)
      W(134)= W(134)+ a *JVS(448)
      W(135)= W(135)+ a *JVS(449)
    a = - W(91)/ JVS(450)
    W(91)= -a
      W(107)= W(107)+ a *JVS(451)
      W(109)= W(109)+ a *JVS(452)
      W(127)= W(127)+ a *JVS(453)
      W(134)= W(134)+ a *JVS(454)
      W(136)= W(136)+ a *JVS(455)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(94)/ JVS(474)
    W(94)= -a
      W(96)= W(96)+ a *JVS(475)
      W(108)= W(108)+ a *JVS(476)
      W(109)= W(109)+ a *JVS(477)
      W(110)= W(110)+ a *JVS(478)
      W(112)= W(112)+ a *JVS(479)
      W(125)= W(125)+ a *JVS(480)
      W(127)= W(127)+ a *JVS(481)
      W(128)= W(128)+ a *JVS(482)
      W(132)= W(132)+ a *JVS(483)
      W(134)= W(134)+ a *JVS(484)
    a = - W(95)/ JVS(491)
    W(95)= -a
      W(96)= W(96)+ a *JVS(492)
      W(99)= W(99)+ a *JVS(493)
      W(100)= W(100)+ a *JVS(494)
      W(107)= W(107)+ a *JVS(495)
      W(108)= W(108)+ a *JVS(496)
      W(109)= W(109)+ a *JVS(497)
      W(110)= W(110)+ a *JVS(498)
      W(112)= W(112)+ a *JVS(499)
      W(119)= W(119)+ a *JVS(500)
      W(121)= W(121)+ a *JVS(501)
      W(125)= W(125)+ a *JVS(502)
      W(126)= W(126)+ a *JVS(503)
      W(127)= W(127)+ a *JVS(504)
      W(128)= W(128)+ a *JVS(505)
      W(132)= W(132)+ a *JVS(506)
      W(133)= W(133)+ a *JVS(507)
      W(134)= W(134)+ a *JVS(508)
      W(135)= W(135)+ a *JVS(509)
      W(136)= W(136)+ a *JVS(510)
      W(137)= W(137)+ a *JVS(511)
      W(138)= W(138)+ a *JVS(512)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(97)/ JVS(519)
    W(97)= -a
      W(103)= W(103)+ a *JVS(520)
      W(111)= W(111)+ a *JVS(521)
      W(127)= W(127)+ a *JVS(522)
      W(128)= W(128)+ a *JVS(523)
      W(132)= W(132)+ a *JVS(524)
      W(134)= W(134)+ a *JVS(525)
    a = - W(98)/ JVS(526)
    W(98)= -a
      W(99)= W(99)+ a *JVS(527)
      W(120)= W(120)+ a *JVS(528)
      W(122)= W(122)+ a *JVS(529)
      W(127)= W(127)+ a *JVS(530)
      W(128)= W(128)+ a *JVS(531)
      W(133)= W(133)+ a *JVS(532)
      W(138)= W(138)+ a *JVS(533)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(101)/ JVS(547)
    W(101)= -a
      W(104)= W(104)+ a *JVS(548)
      W(113)= W(113)+ a *JVS(549)
      W(116)= W(116)+ a *JVS(550)
      W(118)= W(118)+ a *JVS(551)
      W(123)= W(123)+ a *JVS(552)
      W(124)= W(124)+ a *JVS(553)
      W(127)= W(127)+ a *JVS(554)
      W(130)= W(130)+ a *JVS(555)
      W(131)= W(131)+ a *JVS(556)
      W(137)= W(137)+ a *JVS(557)
      W(138)= W(138)+ a *JVS(558)
    a = - W(102)/ JVS(560)
    W(102)= -a
      W(104)= W(104)+ a *JVS(561)
      W(114)= W(114)+ a *JVS(562)
      W(116)= W(116)+ a *JVS(563)
      W(119)= W(119)+ a *JVS(564)
      W(123)= W(123)+ a *JVS(565)
      W(127)= W(127)+ a *JVS(566)
      W(129)= W(129)+ a *JVS(567)
      W(130)= W(130)+ a *JVS(568)
      W(133)= W(133)+ a *JVS(569)
      W(135)= W(135)+ a *JVS(570)
      W(136)= W(136)+ a *JVS(571)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(105)/ JVS(589)
    W(105)= -a
      W(114)= W(114)+ a *JVS(590)
      W(125)= W(125)+ a *JVS(591)
      W(126)= W(126)+ a *JVS(592)
      W(127)= W(127)+ a *JVS(593)
      W(129)= W(129)+ a *JVS(594)
      W(131)= W(131)+ a *JVS(595)
      W(136)= W(136)+ a *JVS(596)
      W(137)= W(137)+ a *JVS(597)
      W(138)= W(138)+ a *JVS(598)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(108)/ JVS(615)
    W(108)= -a
      W(109)= W(109)+ a *JVS(616)
      W(112)= W(112)+ a *JVS(617)
      W(115)= W(115)+ a *JVS(618)
      W(125)= W(125)+ a *JVS(619)
      W(127)= W(127)+ a *JVS(620)
      W(128)= W(128)+ a *JVS(621)
      W(132)= W(132)+ a *JVS(622)
      W(134)= W(134)+ a *JVS(623)
      W(135)= W(135)+ a *JVS(624)
      W(136)= W(136)+ a *JVS(625)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    JVS(965)= W(21)
    JVS(966)= W(22)
    JVS(967)= W(28)
    JVS(968)= W(29)
    JVS(969)= W(31)
    JVS(970)= W(32)
    JVS(971)= W(36)
    JVS(972)= W(37)
    JVS(973)= W(38)
    JVS(974)= W(39)
    JVS(975)= W(41)
    JVS(976)= W(42)
    JVS(977)= W(43)
    JVS(978)= W(44)
    JVS(979)= W(45)
    JVS(980)= W(46)
    JVS(981)= W(47)
    JVS(982)= W(50)
    JVS(983)= W(52)
    JVS(984)= W(53)
    JVS(985)= W(54)
    JVS(986)= W(55)
    JVS(987)= W(56)
    JVS(988)= W(57)
    JVS(989)= W(58)
    JVS(990)= W(60)
    JVS(991)= W(61)
    JVS(992)= W(62)
    JVS(993)= W(63)
    JVS(994)= W(64)
    JVS(995)= W(65)
    JVS(996)= W(66)
    JVS(997)= W(67)
    JVS(998)= W(68)
    JVS(999)= W(69)
    JVS(1000)= W(70)
    JVS(1001)= W(71)
    JVS(1002)= W(72)
    JVS(1003)= W(73)
    JVS(1004)= W(74)
    JVS(1005)= W(75)
    JVS(1006)= W(76)
    JVS(1007)= W(77)
    JVS(1008)= W(79)
    JVS(1009)= W(81)
    JVS(1010)= W(82)
    JVS(1011)= W(84)
    JVS(1012)= W(85)
    JVS(1013)= W(86)
    JVS(1014)= W(87)
    JVS(1015)= W(88)
    JVS(1016)= W(90)
    JVS(1017)= W(91)
    JVS(1018)= W(92)
    JVS(1019)= W(93)
    JVS(1020)= W(94)
    JVS(1021)= W(95)
    JVS(1022)= W(96)
    JVS(1023)= W(97)
    JVS(1024)= W(98)
    JVS(1025)= W(99)
    JVS(1026)= W(100)
    JVS(1027)= W(101)
    JVS(1028)= W(102)
    JVS(1029)= W(103)
    JVS(1030)= W(104)
    JVS(1031)= W(105)
    JVS(1032)= W(106)
    JVS(1033)= W(107)
    JVS(1034)= W(108)
    JVS(1035)= W(109)
    JVS(1036)= W(110)
    JVS(1037)= W(111)
    JVS(1038)= W(112)
    JVS(1039)= W(113)
    JVS(1040)= W(114)
    JVS(1041)= W(115)
    JVS(1042)= W(116)
    JVS(1043)= W(117)
    JVS(1044)= W(118)
    JVS(1045)= W(119)
    JVS(1046)= W(120)
    JVS(1047)= W(121)
    JVS(1048)= W(122)
    JVS(1049)= W(123)
    JVS(1050)= W(124)
    JVS(1051)= W(125)
    JVS(1052)= W(126)
    JVS(1053)= W(127)
    JVS(1054)= W(128)
    JVS(1055)= W(129)
    JVS(1056)= W(130)
    JVS(1057)= W(131)
    JVS(1058)= W(132)
    JVS(1059)= W(133)
    JVS(1060)= W(134)
    JVS(1061)= W(135)
    JVS(1062)= W(136)
    JVS(1063)= W(137)
    JVS(1064)= W(138)
!   k = 128
    W(30)= JVS(1065)
    W(57)= JVS(1066)
    W(60)= JVS(1067)
    W(61)= JVS(1068)
    W(63)= JVS(1069)
    W(64)= JVS(1070)
    W(66)= JVS(1071)
    W(76)= JVS(1072)
    W(79)= JVS(1073)
    W(80)= JVS(1074)
    W(82)= JVS(1075)
    W(85)= JVS(1076)
    W(87)= JVS(1077)
    W(88)= JVS(1078)
    W(90)= JVS(1079)
    W(91)= JVS(1080)
    W(92)= JVS(1081)
    W(93)= JVS(1082)
    W(94)= JVS(1083)
    W(96)= JVS(1084)
    W(97)= JVS(1085)
    W(100)= JVS(1086)
    W(103)= JVS(1087)
    W(105)= JVS(1088)
    W(106)= JVS(1089)
    W(107)= JVS(1090)
    W(108)= JVS(1091)
    W(109)= JVS(1092)
    W(110)= JVS(1093)
    W(111)= JVS(1094)
    W(112)= JVS(1095)
    W(114)= JVS(1096)
    W(115)= JVS(1097)
    W(117)= JVS(1098)
    W(119)= JVS(1099)
    W(121)= JVS(1100)
    W(122)= JVS(1101)
    W(124)= JVS(1102)
    W(125)= JVS(1103)
    W(126)= JVS(1104)
    W(127)= JVS(1105)
    W(128)= JVS(1106)
    W(129)= JVS(1107)
    W(130)= JVS(1108)
    W(131)= JVS(1109)
    W(132)= JVS(1110)
    W(133)= JVS(1111)
    W(134)= JVS(1112)
    W(135)= JVS(1113)
    W(136)= JVS(1114)
    W(137)= JVS(1115)
    W(138)= JVS(1116)
    a = - W(30)/ JVS(174)
    W(30)= -a
      W(80)= W(80)+ a *JVS(175)
      W(125)= W(125)+ a *JVS(176)
      W(128)= W(128)+ a *JVS(177)
    a = - W(57)/ JVS(260)
    W(57)= -a
      W(117)= W(117)+ a *JVS(261)
      W(127)= W(127)+ a *JVS(262)
      W(128)= W(128)+ a *JVS(263)
    a = - W(60)/ JVS(276)
    W(60)= -a
      W(92)= W(92)+ a *JVS(277)
      W(127)= W(127)+ a *JVS(278)
      W(134)= W(134)+ a *JVS(279)
    a = - W(61)/ JVS(280)
    W(61)= -a
      W(109)= W(109)+ a *JVS(281)
      W(127)= W(127)+ a *JVS(282)
      W(128)= W(128)+ a *JVS(283)
    a = - W(63)/ JVS(288)
    W(63)= -a
      W(92)= W(92)+ a *JVS(289)
      W(127)= W(127)+ a *JVS(290)
      W(128)= W(128)+ a *JVS(291)
    a = - W(64)/ JVS(292)
    W(64)= -a
      W(127)= W(127)+ a *JVS(293)
      W(128)= W(128)+ a *JVS(294)
      W(135)= W(135)+ a *JVS(295)
    a = - W(66)/ JVS(302)
    W(66)= -a
      W(114)= W(114)+ a *JVS(303)
      W(127)= W(127)+ a *JVS(304)
      W(131)= W(131)+ a *JVS(305)
    a = - W(76)/ JVS(343)
    W(76)= -a
      W(96)= W(96)+ a *JVS(344)
      W(100)= W(100)+ a *JVS(345)
      W(107)= W(107)+ a *JVS(346)
      W(110)= W(110)+ a *JVS(347)
      W(125)= W(125)+ a *JVS(348)
      W(127)= W(127)+ a *JVS(349)
    a = - W(79)/ JVS(362)
    W(79)= -a
      W(103)= W(103)+ a *JVS(363)
      W(127)= W(127)+ a *JVS(364)
      W(128)= W(128)+ a *JVS(365)
    a = - W(80)/ JVS(366)
    W(80)= -a
      W(114)= W(114)+ a *JVS(367)
      W(125)= W(125)+ a *JVS(368)
      W(127)= W(127)+ a *JVS(369)
      W(136)= W(136)+ a *JVS(370)
      W(137)= W(137)+ a *JVS(371)
      W(138)= W(138)+ a *JVS(372)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(85)/ JVS(397)
    W(85)= -a
      W(90)= W(90)+ a *JVS(398)
      W(125)= W(125)+ a *JVS(399)
      W(127)= W(127)+ a *JVS(400)
      W(128)= W(128)+ a *JVS(401)
      W(135)= W(135)+ a *JVS(402)
    a = - W(87)/ JVS(411)
    W(87)= -a
      W(100)= W(100)+ a *JVS(412)
      W(107)= W(107)+ a *JVS(413)
      W(125)= W(125)+ a *JVS(414)
      W(127)= W(127)+ a *JVS(415)
      W(128)= W(128)+ a *JVS(416)
      W(138)= W(138)+ a *JVS(417)
    a = - W(88)/ JVS(418)
    W(88)= -a
      W(92)= W(92)+ a *JVS(419)
      W(93)= W(93)+ a *JVS(420)
      W(96)= W(96)+ a *JVS(421)
      W(103)= W(103)+ a *JVS(422)
      W(109)= W(109)+ a *JVS(423)
      W(112)= W(112)+ a *JVS(424)
      W(117)= W(117)+ a *JVS(425)
      W(125)= W(125)+ a *JVS(426)
      W(127)= W(127)+ a *JVS(427)
      W(132)= W(132)+ a *JVS(428)
    a = - W(90)/ JVS(444)
    W(90)= -a
      W(125)= W(125)+ a *JVS(445)
      W(127)= W(127)+ a *JVS(446)
      W(128)= W(128)+ a *JVS(447)
      W(134)= W(134)+ a *JVS(448)
      W(135)= W(135)+ a *JVS(449)
    a = - W(91)/ JVS(450)
    W(91)= -a
      W(107)= W(107)+ a *JVS(451)
      W(109)= W(109)+ a *JVS(452)
      W(127)= W(127)+ a *JVS(453)
      W(134)= W(134)+ a *JVS(454)
      W(136)= W(136)+ a *JVS(455)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(94)/ JVS(474)
    W(94)= -a
      W(96)= W(96)+ a *JVS(475)
      W(108)= W(108)+ a *JVS(476)
      W(109)= W(109)+ a *JVS(477)
      W(110)= W(110)+ a *JVS(478)
      W(112)= W(112)+ a *JVS(479)
      W(125)= W(125)+ a *JVS(480)
      W(127)= W(127)+ a *JVS(481)
      W(128)= W(128)+ a *JVS(482)
      W(132)= W(132)+ a *JVS(483)
      W(134)= W(134)+ a *JVS(484)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(97)/ JVS(519)
    W(97)= -a
      W(103)= W(103)+ a *JVS(520)
      W(111)= W(111)+ a *JVS(521)
      W(127)= W(127)+ a *JVS(522)
      W(128)= W(128)+ a *JVS(523)
      W(132)= W(132)+ a *JVS(524)
      W(134)= W(134)+ a *JVS(525)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(105)/ JVS(589)
    W(105)= -a
      W(114)= W(114)+ a *JVS(590)
      W(125)= W(125)+ a *JVS(591)
      W(126)= W(126)+ a *JVS(592)
      W(127)= W(127)+ a *JVS(593)
      W(129)= W(129)+ a *JVS(594)
      W(131)= W(131)+ a *JVS(595)
      W(136)= W(136)+ a *JVS(596)
      W(137)= W(137)+ a *JVS(597)
      W(138)= W(138)+ a *JVS(598)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(108)/ JVS(615)
    W(108)= -a
      W(109)= W(109)+ a *JVS(616)
      W(112)= W(112)+ a *JVS(617)
      W(115)= W(115)+ a *JVS(618)
      W(125)= W(125)+ a *JVS(619)
      W(127)= W(127)+ a *JVS(620)
      W(128)= W(128)+ a *JVS(621)
      W(132)= W(132)+ a *JVS(622)
      W(134)= W(134)+ a *JVS(623)
      W(135)= W(135)+ a *JVS(624)
      W(136)= W(136)+ a *JVS(625)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    JVS(1065)= W(30)
    JVS(1066)= W(57)
    JVS(1067)= W(60)
    JVS(1068)= W(61)
    JVS(1069)= W(63)
    JVS(1070)= W(64)
    JVS(1071)= W(66)
    JVS(1072)= W(76)
    JVS(1073)= W(79)
    JVS(1074)= W(80)
    JVS(1075)= W(82)
    JVS(1076)= W(85)
    JVS(1077)= W(87)
    JVS(1078)= W(88)
    JVS(1079)= W(90)
    JVS(1080)= W(91)
    JVS(1081)= W(92)
    JVS(1082)= W(93)
    JVS(1083)= W(94)
    JVS(1084)= W(96)
    JVS(1085)= W(97)
    JVS(1086)= W(100)
    JVS(1087)= W(103)
    JVS(1088)= W(105)
    JVS(1089)= W(106)
    JVS(1090)= W(107)
    JVS(1091)= W(108)
    JVS(1092)= W(109)
    JVS(1093)= W(110)
    JVS(1094)= W(111)
    JVS(1095)= W(112)
    JVS(1096)= W(114)
    JVS(1097)= W(115)
    JVS(1098)= W(117)
    JVS(1099)= W(119)
    JVS(1100)= W(121)
    JVS(1101)= W(122)
    JVS(1102)= W(124)
    JVS(1103)= W(125)
    JVS(1104)= W(126)
    JVS(1105)= W(127)
    JVS(1106)= W(128)
    JVS(1107)= W(129)
    JVS(1108)= W(130)
    JVS(1109)= W(131)
    JVS(1110)= W(132)
    JVS(1111)= W(133)
    JVS(1112)= W(134)
    JVS(1113)= W(135)
    JVS(1114)= W(136)
    JVS(1115)= W(137)
    JVS(1116)= W(138)
!   k = 129
    W(21)= JVS(1117)
    W(22)= JVS(1118)
    W(28)= JVS(1119)
    W(29)= JVS(1120)
    W(31)= JVS(1121)
    W(32)= JVS(1122)
    W(36)= JVS(1123)
    W(37)= JVS(1124)
    W(38)= JVS(1125)
    W(39)= JVS(1126)
    W(40)= JVS(1127)
    W(42)= JVS(1128)
    W(43)= JVS(1129)
    W(44)= JVS(1130)
    W(45)= JVS(1131)
    W(50)= JVS(1132)
    W(51)= JVS(1133)
    W(52)= JVS(1134)
    W(53)= JVS(1135)
    W(58)= JVS(1136)
    W(62)= JVS(1137)
    W(64)= JVS(1138)
    W(65)= JVS(1139)
    W(68)= JVS(1140)
    W(69)= JVS(1141)
    W(71)= JVS(1142)
    W(72)= JVS(1143)
    W(73)= JVS(1144)
    W(74)= JVS(1145)
    W(75)= JVS(1146)
    W(76)= JVS(1147)
    W(77)= JVS(1148)
    W(79)= JVS(1149)
    W(83)= JVS(1150)
    W(84)= JVS(1151)
    W(85)= JVS(1152)
    W(86)= JVS(1153)
    W(87)= JVS(1154)
    W(90)= JVS(1155)
    W(92)= JVS(1156)
    W(96)= JVS(1157)
    W(98)= JVS(1158)
    W(99)= JVS(1159)
    W(100)= JVS(1160)
    W(102)= JVS(1161)
    W(103)= JVS(1162)
    W(104)= JVS(1163)
    W(105)= JVS(1164)
    W(106)= JVS(1165)
    W(107)= JVS(1166)
    W(110)= JVS(1167)
    W(111)= JVS(1168)
    W(113)= JVS(1169)
    W(114)= JVS(1170)
    W(115)= JVS(1171)
    W(116)= JVS(1172)
    W(117)= JVS(1173)
    W(118)= JVS(1174)
    W(119)= JVS(1175)
    W(120)= JVS(1176)
    W(121)= JVS(1177)
    W(122)= JVS(1178)
    W(123)= JVS(1179)
    W(124)= JVS(1180)
    W(125)= JVS(1181)
    W(126)= JVS(1182)
    W(127)= JVS(1183)
    W(128)= JVS(1184)
    W(129)= JVS(1185)
    W(130)= JVS(1186)
    W(131)= JVS(1187)
    W(132)= JVS(1188)
    W(133)= JVS(1189)
    W(134)= JVS(1190)
    W(135)= JVS(1191)
    W(136)= JVS(1192)
    W(137)= JVS(1193)
    W(138)= JVS(1194)
    a = - W(21)/ JVS(156)
    W(21)= -a
      W(127)= W(127)+ a *JVS(157)
    a = - W(22)/ JVS(158)
    W(22)= -a
      W(127)= W(127)+ a *JVS(159)
    a = - W(28)/ JVS(170)
    W(28)= -a
      W(127)= W(127)+ a *JVS(171)
    a = - W(29)/ JVS(172)
    W(29)= -a
      W(127)= W(127)+ a *JVS(173)
    a = - W(31)/ JVS(178)
    W(31)= -a
      W(127)= W(127)+ a *JVS(179)
    a = - W(32)/ JVS(180)
    W(32)= -a
      W(127)= W(127)+ a *JVS(181)
    a = - W(36)/ JVS(190)
    W(36)= -a
      W(127)= W(127)+ a *JVS(191)
    a = - W(37)/ JVS(192)
    W(37)= -a
      W(127)= W(127)+ a *JVS(193)
    a = - W(38)/ JVS(194)
    W(38)= -a
      W(127)= W(127)+ a *JVS(195)
    a = - W(39)/ JVS(196)
    W(39)= -a
      W(127)= W(127)+ a *JVS(197)
    a = - W(40)/ JVS(198)
    W(40)= -a
      W(51)= W(51)+ a *JVS(199)
      W(129)= W(129)+ a *JVS(200)
    a = - W(42)/ JVS(204)
    W(42)= -a
      W(120)= W(120)+ a *JVS(205)
      W(127)= W(127)+ a *JVS(206)
    a = - W(43)/ JVS(207)
    W(43)= -a
      W(127)= W(127)+ a *JVS(208)
      W(138)= W(138)+ a *JVS(209)
    a = - W(44)/ JVS(210)
    W(44)= -a
      W(120)= W(120)+ a *JVS(211)
      W(127)= W(127)+ a *JVS(212)
    a = - W(45)/ JVS(213)
    W(45)= -a
      W(127)= W(127)+ a *JVS(214)
      W(138)= W(138)+ a *JVS(215)
    a = - W(50)/ JVS(231)
    W(50)= -a
      W(53)= W(53)+ a *JVS(232)
      W(85)= W(85)+ a *JVS(233)
      W(127)= W(127)+ a *JVS(234)
    a = - W(51)/ JVS(236)
    W(51)= -a
      W(105)= W(105)+ a *JVS(237)
      W(127)= W(127)+ a *JVS(238)
      W(129)= W(129)+ a *JVS(239)
    a = - W(52)/ JVS(240)
    W(52)= -a
      W(120)= W(120)+ a *JVS(241)
      W(127)= W(127)+ a *JVS(242)
    a = - W(53)/ JVS(244)
    W(53)= -a
      W(84)= W(84)+ a *JVS(245)
      W(85)= W(85)+ a *JVS(246)
      W(127)= W(127)+ a *JVS(247)
    a = - W(58)/ JVS(264)
    W(58)= -a
      W(121)= W(121)+ a *JVS(265)
      W(127)= W(127)+ a *JVS(266)
      W(128)= W(128)+ a *JVS(267)
    a = - W(62)/ JVS(284)
    W(62)= -a
      W(115)= W(115)+ a *JVS(285)
      W(127)= W(127)+ a *JVS(286)
      W(128)= W(128)+ a *JVS(287)
    a = - W(64)/ JVS(292)
    W(64)= -a
      W(127)= W(127)+ a *JVS(293)
      W(128)= W(128)+ a *JVS(294)
      W(135)= W(135)+ a *JVS(295)
    a = - W(65)/ JVS(296)
    W(65)= -a
      W(117)= W(117)+ a *JVS(297)
      W(121)= W(121)+ a *JVS(298)
      W(127)= W(127)+ a *JVS(299)
      W(128)= W(128)+ a *JVS(300)
      W(132)= W(132)+ a *JVS(301)
    a = - W(68)/ JVS(310)
    W(68)= -a
      W(85)= W(85)+ a *JVS(311)
      W(127)= W(127)+ a *JVS(312)
      W(134)= W(134)+ a *JVS(313)
      W(135)= W(135)+ a *JVS(314)
    a = - W(69)/ JVS(315)
    W(69)= -a
      W(120)= W(120)+ a *JVS(316)
      W(127)= W(127)+ a *JVS(317)
      W(138)= W(138)+ a *JVS(318)
    a = - W(71)/ JVS(323)
    W(71)= -a
      W(120)= W(120)+ a *JVS(324)
      W(127)= W(127)+ a *JVS(325)
      W(138)= W(138)+ a *JVS(326)
    a = - W(72)/ JVS(327)
    W(72)= -a
      W(120)= W(120)+ a *JVS(328)
      W(127)= W(127)+ a *JVS(329)
      W(138)= W(138)+ a *JVS(330)
    a = - W(73)/ JVS(331)
    W(73)= -a
      W(120)= W(120)+ a *JVS(332)
      W(127)= W(127)+ a *JVS(333)
      W(138)= W(138)+ a *JVS(334)
    a = - W(74)/ JVS(335)
    W(74)= -a
      W(120)= W(120)+ a *JVS(336)
      W(127)= W(127)+ a *JVS(337)
      W(138)= W(138)+ a *JVS(338)
    a = - W(75)/ JVS(339)
    W(75)= -a
      W(121)= W(121)+ a *JVS(340)
      W(127)= W(127)+ a *JVS(341)
      W(135)= W(135)+ a *JVS(342)
    a = - W(76)/ JVS(343)
    W(76)= -a
      W(96)= W(96)+ a *JVS(344)
      W(100)= W(100)+ a *JVS(345)
      W(107)= W(107)+ a *JVS(346)
      W(110)= W(110)+ a *JVS(347)
      W(125)= W(125)+ a *JVS(348)
      W(127)= W(127)+ a *JVS(349)
    a = - W(77)/ JVS(350)
    W(77)= -a
      W(120)= W(120)+ a *JVS(351)
      W(127)= W(127)+ a *JVS(352)
      W(138)= W(138)+ a *JVS(353)
    a = - W(79)/ JVS(362)
    W(79)= -a
      W(103)= W(103)+ a *JVS(363)
      W(127)= W(127)+ a *JVS(364)
      W(128)= W(128)+ a *JVS(365)
    a = - W(83)/ JVS(385)
    W(83)= -a
      W(129)= W(129)+ a *JVS(386)
      W(130)= W(130)+ a *JVS(387)
      W(135)= W(135)+ a *JVS(388)
      W(136)= W(136)+ a *JVS(389)
    a = - W(84)/ JVS(390)
    W(84)= -a
      W(90)= W(90)+ a *JVS(391)
      W(125)= W(125)+ a *JVS(392)
      W(128)= W(128)+ a *JVS(393)
      W(135)= W(135)+ a *JVS(394)
    a = - W(85)/ JVS(397)
    W(85)= -a
      W(90)= W(90)+ a *JVS(398)
      W(125)= W(125)+ a *JVS(399)
      W(127)= W(127)+ a *JVS(400)
      W(128)= W(128)+ a *JVS(401)
      W(135)= W(135)+ a *JVS(402)
    a = - W(86)/ JVS(405)
    W(86)= -a
      W(92)= W(92)+ a *JVS(406)
      W(127)= W(127)+ a *JVS(407)
      W(128)= W(128)+ a *JVS(408)
      W(132)= W(132)+ a *JVS(409)
      W(134)= W(134)+ a *JVS(410)
    a = - W(87)/ JVS(411)
    W(87)= -a
      W(100)= W(100)+ a *JVS(412)
      W(107)= W(107)+ a *JVS(413)
      W(125)= W(125)+ a *JVS(414)
      W(127)= W(127)+ a *JVS(415)
      W(128)= W(128)+ a *JVS(416)
      W(138)= W(138)+ a *JVS(417)
    a = - W(90)/ JVS(444)
    W(90)= -a
      W(125)= W(125)+ a *JVS(445)
      W(127)= W(127)+ a *JVS(446)
      W(128)= W(128)+ a *JVS(447)
      W(134)= W(134)+ a *JVS(448)
      W(135)= W(135)+ a *JVS(449)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(98)/ JVS(526)
    W(98)= -a
      W(99)= W(99)+ a *JVS(527)
      W(120)= W(120)+ a *JVS(528)
      W(122)= W(122)+ a *JVS(529)
      W(127)= W(127)+ a *JVS(530)
      W(128)= W(128)+ a *JVS(531)
      W(133)= W(133)+ a *JVS(532)
      W(138)= W(138)+ a *JVS(533)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(102)/ JVS(560)
    W(102)= -a
      W(104)= W(104)+ a *JVS(561)
      W(114)= W(114)+ a *JVS(562)
      W(116)= W(116)+ a *JVS(563)
      W(119)= W(119)+ a *JVS(564)
      W(123)= W(123)+ a *JVS(565)
      W(127)= W(127)+ a *JVS(566)
      W(129)= W(129)+ a *JVS(567)
      W(130)= W(130)+ a *JVS(568)
      W(133)= W(133)+ a *JVS(569)
      W(135)= W(135)+ a *JVS(570)
      W(136)= W(136)+ a *JVS(571)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(105)/ JVS(589)
    W(105)= -a
      W(114)= W(114)+ a *JVS(590)
      W(125)= W(125)+ a *JVS(591)
      W(126)= W(126)+ a *JVS(592)
      W(127)= W(127)+ a *JVS(593)
      W(129)= W(129)+ a *JVS(594)
      W(131)= W(131)+ a *JVS(595)
      W(136)= W(136)+ a *JVS(596)
      W(137)= W(137)+ a *JVS(597)
      W(138)= W(138)+ a *JVS(598)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    JVS(1117)= W(21)
    JVS(1118)= W(22)
    JVS(1119)= W(28)
    JVS(1120)= W(29)
    JVS(1121)= W(31)
    JVS(1122)= W(32)
    JVS(1123)= W(36)
    JVS(1124)= W(37)
    JVS(1125)= W(38)
    JVS(1126)= W(39)
    JVS(1127)= W(40)
    JVS(1128)= W(42)
    JVS(1129)= W(43)
    JVS(1130)= W(44)
    JVS(1131)= W(45)
    JVS(1132)= W(50)
    JVS(1133)= W(51)
    JVS(1134)= W(52)
    JVS(1135)= W(53)
    JVS(1136)= W(58)
    JVS(1137)= W(62)
    JVS(1138)= W(64)
    JVS(1139)= W(65)
    JVS(1140)= W(68)
    JVS(1141)= W(69)
    JVS(1142)= W(71)
    JVS(1143)= W(72)
    JVS(1144)= W(73)
    JVS(1145)= W(74)
    JVS(1146)= W(75)
    JVS(1147)= W(76)
    JVS(1148)= W(77)
    JVS(1149)= W(79)
    JVS(1150)= W(83)
    JVS(1151)= W(84)
    JVS(1152)= W(85)
    JVS(1153)= W(86)
    JVS(1154)= W(87)
    JVS(1155)= W(90)
    JVS(1156)= W(92)
    JVS(1157)= W(96)
    JVS(1158)= W(98)
    JVS(1159)= W(99)
    JVS(1160)= W(100)
    JVS(1161)= W(102)
    JVS(1162)= W(103)
    JVS(1163)= W(104)
    JVS(1164)= W(105)
    JVS(1165)= W(106)
    JVS(1166)= W(107)
    JVS(1167)= W(110)
    JVS(1168)= W(111)
    JVS(1169)= W(113)
    JVS(1170)= W(114)
    JVS(1171)= W(115)
    JVS(1172)= W(116)
    JVS(1173)= W(117)
    JVS(1174)= W(118)
    JVS(1175)= W(119)
    JVS(1176)= W(120)
    JVS(1177)= W(121)
    JVS(1178)= W(122)
    JVS(1179)= W(123)
    JVS(1180)= W(124)
    JVS(1181)= W(125)
    JVS(1182)= W(126)
    JVS(1183)= W(127)
    JVS(1184)= W(128)
    JVS(1185)= W(129)
    JVS(1186)= W(130)
    JVS(1187)= W(131)
    JVS(1188)= W(132)
    JVS(1189)= W(133)
    JVS(1190)= W(134)
    JVS(1191)= W(135)
    JVS(1192)= W(136)
    JVS(1193)= W(137)
    JVS(1194)= W(138)
!   k = 130
    W(43)= JVS(1195)
    W(45)= JVS(1196)
    W(56)= JVS(1197)
    W(69)= JVS(1198)
    W(70)= JVS(1199)
    W(71)= JVS(1200)
    W(72)= JVS(1201)
    W(73)= JVS(1202)
    W(74)= JVS(1203)
    W(77)= JVS(1204)
    W(83)= JVS(1205)
    W(87)= JVS(1206)
    W(98)= JVS(1207)
    W(99)= JVS(1208)
    W(100)= JVS(1209)
    W(104)= JVS(1210)
    W(106)= JVS(1211)
    W(107)= JVS(1212)
    W(113)= JVS(1213)
    W(114)= JVS(1214)
    W(116)= JVS(1215)
    W(118)= JVS(1216)
    W(119)= JVS(1217)
    W(120)= JVS(1218)
    W(121)= JVS(1219)
    W(122)= JVS(1220)
    W(123)= JVS(1221)
    W(124)= JVS(1222)
    W(125)= JVS(1223)
    W(126)= JVS(1224)
    W(127)= JVS(1225)
    W(128)= JVS(1226)
    W(129)= JVS(1227)
    W(130)= JVS(1228)
    W(131)= JVS(1229)
    W(132)= JVS(1230)
    W(133)= JVS(1231)
    W(134)= JVS(1232)
    W(135)= JVS(1233)
    W(136)= JVS(1234)
    W(137)= JVS(1235)
    W(138)= JVS(1236)
    a = - W(43)/ JVS(207)
    W(43)= -a
      W(127)= W(127)+ a *JVS(208)
      W(138)= W(138)+ a *JVS(209)
    a = - W(45)/ JVS(213)
    W(45)= -a
      W(127)= W(127)+ a *JVS(214)
      W(138)= W(138)+ a *JVS(215)
    a = - W(56)/ JVS(256)
    W(56)= -a
      W(120)= W(120)+ a *JVS(257)
      W(127)= W(127)+ a *JVS(258)
      W(138)= W(138)+ a *JVS(259)
    a = - W(69)/ JVS(315)
    W(69)= -a
      W(120)= W(120)+ a *JVS(316)
      W(127)= W(127)+ a *JVS(317)
      W(138)= W(138)+ a *JVS(318)
    a = - W(70)/ JVS(319)
    W(70)= -a
      W(127)= W(127)+ a *JVS(320)
      W(137)= W(137)+ a *JVS(321)
      W(138)= W(138)+ a *JVS(322)
    a = - W(71)/ JVS(323)
    W(71)= -a
      W(120)= W(120)+ a *JVS(324)
      W(127)= W(127)+ a *JVS(325)
      W(138)= W(138)+ a *JVS(326)
    a = - W(72)/ JVS(327)
    W(72)= -a
      W(120)= W(120)+ a *JVS(328)
      W(127)= W(127)+ a *JVS(329)
      W(138)= W(138)+ a *JVS(330)
    a = - W(73)/ JVS(331)
    W(73)= -a
      W(120)= W(120)+ a *JVS(332)
      W(127)= W(127)+ a *JVS(333)
      W(138)= W(138)+ a *JVS(334)
    a = - W(74)/ JVS(335)
    W(74)= -a
      W(120)= W(120)+ a *JVS(336)
      W(127)= W(127)+ a *JVS(337)
      W(138)= W(138)+ a *JVS(338)
    a = - W(77)/ JVS(350)
    W(77)= -a
      W(120)= W(120)+ a *JVS(351)
      W(127)= W(127)+ a *JVS(352)
      W(138)= W(138)+ a *JVS(353)
    a = - W(83)/ JVS(385)
    W(83)= -a
      W(129)= W(129)+ a *JVS(386)
      W(130)= W(130)+ a *JVS(387)
      W(135)= W(135)+ a *JVS(388)
      W(136)= W(136)+ a *JVS(389)
    a = - W(87)/ JVS(411)
    W(87)= -a
      W(100)= W(100)+ a *JVS(412)
      W(107)= W(107)+ a *JVS(413)
      W(125)= W(125)+ a *JVS(414)
      W(127)= W(127)+ a *JVS(415)
      W(128)= W(128)+ a *JVS(416)
      W(138)= W(138)+ a *JVS(417)
    a = - W(98)/ JVS(526)
    W(98)= -a
      W(99)= W(99)+ a *JVS(527)
      W(120)= W(120)+ a *JVS(528)
      W(122)= W(122)+ a *JVS(529)
      W(127)= W(127)+ a *JVS(530)
      W(128)= W(128)+ a *JVS(531)
      W(133)= W(133)+ a *JVS(532)
      W(138)= W(138)+ a *JVS(533)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    JVS(1195)= W(43)
    JVS(1196)= W(45)
    JVS(1197)= W(56)
    JVS(1198)= W(69)
    JVS(1199)= W(70)
    JVS(1200)= W(71)
    JVS(1201)= W(72)
    JVS(1202)= W(73)
    JVS(1203)= W(74)
    JVS(1204)= W(77)
    JVS(1205)= W(83)
    JVS(1206)= W(87)
    JVS(1207)= W(98)
    JVS(1208)= W(99)
    JVS(1209)= W(100)
    JVS(1210)= W(104)
    JVS(1211)= W(106)
    JVS(1212)= W(107)
    JVS(1213)= W(113)
    JVS(1214)= W(114)
    JVS(1215)= W(116)
    JVS(1216)= W(118)
    JVS(1217)= W(119)
    JVS(1218)= W(120)
    JVS(1219)= W(121)
    JVS(1220)= W(122)
    JVS(1221)= W(123)
    JVS(1222)= W(124)
    JVS(1223)= W(125)
    JVS(1224)= W(126)
    JVS(1225)= W(127)
    JVS(1226)= W(128)
    JVS(1227)= W(129)
    JVS(1228)= W(130)
    JVS(1229)= W(131)
    JVS(1230)= W(132)
    JVS(1231)= W(133)
    JVS(1232)= W(134)
    JVS(1233)= W(135)
    JVS(1234)= W(136)
    JVS(1235)= W(137)
    JVS(1236)= W(138)
!   k = 131
    W(104)= JVS(1237)
    W(114)= JVS(1238)
    W(118)= JVS(1239)
    W(123)= JVS(1240)
    W(124)= JVS(1241)
    W(125)= JVS(1242)
    W(126)= JVS(1243)
    W(127)= JVS(1244)
    W(128)= JVS(1245)
    W(129)= JVS(1246)
    W(130)= JVS(1247)
    W(131)= JVS(1248)
    W(132)= JVS(1249)
    W(133)= JVS(1250)
    W(134)= JVS(1251)
    W(135)= JVS(1252)
    W(136)= JVS(1253)
    W(137)= JVS(1254)
    W(138)= JVS(1255)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    JVS(1237)= W(104)
    JVS(1238)= W(114)
    JVS(1239)= W(118)
    JVS(1240)= W(123)
    JVS(1241)= W(124)
    JVS(1242)= W(125)
    JVS(1243)= W(126)
    JVS(1244)= W(127)
    JVS(1245)= W(128)
    JVS(1246)= W(129)
    JVS(1247)= W(130)
    JVS(1248)= W(131)
    JVS(1249)= W(132)
    JVS(1250)= W(133)
    JVS(1251)= W(134)
    JVS(1252)= W(135)
    JVS(1253)= W(136)
    JVS(1254)= W(137)
    JVS(1255)= W(138)
!   k = 132
    W(4)= JVS(1256)
    W(37)= JVS(1257)
    W(52)= JVS(1258)
    W(58)= JVS(1259)
    W(65)= JVS(1260)
    W(66)= JVS(1261)
    W(70)= JVS(1262)
    W(80)= JVS(1263)
    W(86)= JVS(1264)
    W(92)= JVS(1265)
    W(93)= JVS(1266)
    W(96)= JVS(1267)
    W(99)= JVS(1268)
    W(103)= JVS(1269)
    W(106)= JVS(1270)
    W(107)= JVS(1271)
    W(109)= JVS(1272)
    W(112)= JVS(1273)
    W(114)= JVS(1274)
    W(117)= JVS(1275)
    W(119)= JVS(1276)
    W(120)= JVS(1277)
    W(121)= JVS(1278)
    W(122)= JVS(1279)
    W(124)= JVS(1280)
    W(125)= JVS(1281)
    W(126)= JVS(1282)
    W(127)= JVS(1283)
    W(128)= JVS(1284)
    W(129)= JVS(1285)
    W(130)= JVS(1286)
    W(131)= JVS(1287)
    W(132)= JVS(1288)
    W(133)= JVS(1289)
    W(134)= JVS(1290)
    W(135)= JVS(1291)
    W(136)= JVS(1292)
    W(137)= JVS(1293)
    W(138)= JVS(1294)
    a = - W(4)/ JVS(4)
    W(4)= -a
    a = - W(37)/ JVS(192)
    W(37)= -a
      W(127)= W(127)+ a *JVS(193)
    a = - W(52)/ JVS(240)
    W(52)= -a
      W(120)= W(120)+ a *JVS(241)
      W(127)= W(127)+ a *JVS(242)
    a = - W(58)/ JVS(264)
    W(58)= -a
      W(121)= W(121)+ a *JVS(265)
      W(127)= W(127)+ a *JVS(266)
      W(128)= W(128)+ a *JVS(267)
    a = - W(65)/ JVS(296)
    W(65)= -a
      W(117)= W(117)+ a *JVS(297)
      W(121)= W(121)+ a *JVS(298)
      W(127)= W(127)+ a *JVS(299)
      W(128)= W(128)+ a *JVS(300)
      W(132)= W(132)+ a *JVS(301)
    a = - W(66)/ JVS(302)
    W(66)= -a
      W(114)= W(114)+ a *JVS(303)
      W(127)= W(127)+ a *JVS(304)
      W(131)= W(131)+ a *JVS(305)
    a = - W(70)/ JVS(319)
    W(70)= -a
      W(127)= W(127)+ a *JVS(320)
      W(137)= W(137)+ a *JVS(321)
      W(138)= W(138)+ a *JVS(322)
    a = - W(80)/ JVS(366)
    W(80)= -a
      W(114)= W(114)+ a *JVS(367)
      W(125)= W(125)+ a *JVS(368)
      W(127)= W(127)+ a *JVS(369)
      W(136)= W(136)+ a *JVS(370)
      W(137)= W(137)+ a *JVS(371)
      W(138)= W(138)+ a *JVS(372)
    a = - W(86)/ JVS(405)
    W(86)= -a
      W(92)= W(92)+ a *JVS(406)
      W(127)= W(127)+ a *JVS(407)
      W(128)= W(128)+ a *JVS(408)
      W(132)= W(132)+ a *JVS(409)
      W(134)= W(134)+ a *JVS(410)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    a = - W(131)/ JVS(1248)
    W(131)= -a
      W(132)= W(132)+ a *JVS(1249)
      W(133)= W(133)+ a *JVS(1250)
      W(134)= W(134)+ a *JVS(1251)
      W(135)= W(135)+ a *JVS(1252)
      W(136)= W(136)+ a *JVS(1253)
      W(137)= W(137)+ a *JVS(1254)
      W(138)= W(138)+ a *JVS(1255)
    JVS(1256)= W(4)
    JVS(1257)= W(37)
    JVS(1258)= W(52)
    JVS(1259)= W(58)
    JVS(1260)= W(65)
    JVS(1261)= W(66)
    JVS(1262)= W(70)
    JVS(1263)= W(80)
    JVS(1264)= W(86)
    JVS(1265)= W(92)
    JVS(1266)= W(93)
    JVS(1267)= W(96)
    JVS(1268)= W(99)
    JVS(1269)= W(103)
    JVS(1270)= W(106)
    JVS(1271)= W(107)
    JVS(1272)= W(109)
    JVS(1273)= W(112)
    JVS(1274)= W(114)
    JVS(1275)= W(117)
    JVS(1276)= W(119)
    JVS(1277)= W(120)
    JVS(1278)= W(121)
    JVS(1279)= W(122)
    JVS(1280)= W(124)
    JVS(1281)= W(125)
    JVS(1282)= W(126)
    JVS(1283)= W(127)
    JVS(1284)= W(128)
    JVS(1285)= W(129)
    JVS(1286)= W(130)
    JVS(1287)= W(131)
    JVS(1288)= W(132)
    JVS(1289)= W(133)
    JVS(1290)= W(134)
    JVS(1291)= W(135)
    JVS(1292)= W(136)
    JVS(1293)= W(137)
    JVS(1294)= W(138)
!   k = 133
    W(47)= JVS(1295)
    W(61)= JVS(1296)
    W(66)= JVS(1297)
    W(67)= JVS(1298)
    W(75)= JVS(1299)
    W(82)= JVS(1300)
    W(88)= JVS(1301)
    W(91)= JVS(1302)
    W(92)= JVS(1303)
    W(93)= JVS(1304)
    W(96)= JVS(1305)
    W(99)= JVS(1306)
    W(100)= JVS(1307)
    W(103)= JVS(1308)
    W(106)= JVS(1309)
    W(107)= JVS(1310)
    W(108)= JVS(1311)
    W(109)= JVS(1312)
    W(110)= JVS(1313)
    W(112)= JVS(1314)
    W(114)= JVS(1315)
    W(115)= JVS(1316)
    W(117)= JVS(1317)
    W(120)= JVS(1318)
    W(121)= JVS(1319)
    W(122)= JVS(1320)
    W(124)= JVS(1321)
    W(125)= JVS(1322)
    W(126)= JVS(1323)
    W(127)= JVS(1324)
    W(128)= JVS(1325)
    W(129)= JVS(1326)
    W(130)= JVS(1327)
    W(131)= JVS(1328)
    W(132)= JVS(1329)
    W(133)= JVS(1330)
    W(134)= JVS(1331)
    W(135)= JVS(1332)
    W(136)= JVS(1333)
    W(137)= JVS(1334)
    W(138)= JVS(1335)
    a = - W(47)/ JVS(219)
    W(47)= -a
      W(91)= W(91)+ a *JVS(220)
      W(127)= W(127)+ a *JVS(221)
    a = - W(61)/ JVS(280)
    W(61)= -a
      W(109)= W(109)+ a *JVS(281)
      W(127)= W(127)+ a *JVS(282)
      W(128)= W(128)+ a *JVS(283)
    a = - W(66)/ JVS(302)
    W(66)= -a
      W(114)= W(114)+ a *JVS(303)
      W(127)= W(127)+ a *JVS(304)
      W(131)= W(131)+ a *JVS(305)
    a = - W(67)/ JVS(306)
    W(67)= -a
      W(93)= W(93)+ a *JVS(307)
      W(127)= W(127)+ a *JVS(308)
      W(128)= W(128)+ a *JVS(309)
    a = - W(75)/ JVS(339)
    W(75)= -a
      W(121)= W(121)+ a *JVS(340)
      W(127)= W(127)+ a *JVS(341)
      W(135)= W(135)+ a *JVS(342)
    a = - W(82)/ JVS(381)
    W(82)= -a
      W(112)= W(112)+ a *JVS(382)
      W(127)= W(127)+ a *JVS(383)
      W(128)= W(128)+ a *JVS(384)
    a = - W(88)/ JVS(418)
    W(88)= -a
      W(92)= W(92)+ a *JVS(419)
      W(93)= W(93)+ a *JVS(420)
      W(96)= W(96)+ a *JVS(421)
      W(103)= W(103)+ a *JVS(422)
      W(109)= W(109)+ a *JVS(423)
      W(112)= W(112)+ a *JVS(424)
      W(117)= W(117)+ a *JVS(425)
      W(125)= W(125)+ a *JVS(426)
      W(127)= W(127)+ a *JVS(427)
      W(132)= W(132)+ a *JVS(428)
    a = - W(91)/ JVS(450)
    W(91)= -a
      W(107)= W(107)+ a *JVS(451)
      W(109)= W(109)+ a *JVS(452)
      W(127)= W(127)+ a *JVS(453)
      W(134)= W(134)+ a *JVS(454)
      W(136)= W(136)+ a *JVS(455)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(108)/ JVS(615)
    W(108)= -a
      W(109)= W(109)+ a *JVS(616)
      W(112)= W(112)+ a *JVS(617)
      W(115)= W(115)+ a *JVS(618)
      W(125)= W(125)+ a *JVS(619)
      W(127)= W(127)+ a *JVS(620)
      W(128)= W(128)+ a *JVS(621)
      W(132)= W(132)+ a *JVS(622)
      W(134)= W(134)+ a *JVS(623)
      W(135)= W(135)+ a *JVS(624)
      W(136)= W(136)+ a *JVS(625)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(110)/ JVS(638)
    W(110)= -a
      W(125)= W(125)+ a *JVS(639)
      W(127)= W(127)+ a *JVS(640)
      W(128)= W(128)+ a *JVS(641)
      W(132)= W(132)+ a *JVS(642)
      W(134)= W(134)+ a *JVS(643)
      W(136)= W(136)+ a *JVS(644)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    a = - W(131)/ JVS(1248)
    W(131)= -a
      W(132)= W(132)+ a *JVS(1249)
      W(133)= W(133)+ a *JVS(1250)
      W(134)= W(134)+ a *JVS(1251)
      W(135)= W(135)+ a *JVS(1252)
      W(136)= W(136)+ a *JVS(1253)
      W(137)= W(137)+ a *JVS(1254)
      W(138)= W(138)+ a *JVS(1255)
    a = - W(132)/ JVS(1288)
    W(132)= -a
      W(133)= W(133)+ a *JVS(1289)
      W(134)= W(134)+ a *JVS(1290)
      W(135)= W(135)+ a *JVS(1291)
      W(136)= W(136)+ a *JVS(1292)
      W(137)= W(137)+ a *JVS(1293)
      W(138)= W(138)+ a *JVS(1294)
    JVS(1295)= W(47)
    JVS(1296)= W(61)
    JVS(1297)= W(66)
    JVS(1298)= W(67)
    JVS(1299)= W(75)
    JVS(1300)= W(82)
    JVS(1301)= W(88)
    JVS(1302)= W(91)
    JVS(1303)= W(92)
    JVS(1304)= W(93)
    JVS(1305)= W(96)
    JVS(1306)= W(99)
    JVS(1307)= W(100)
    JVS(1308)= W(103)
    JVS(1309)= W(106)
    JVS(1310)= W(107)
    JVS(1311)= W(108)
    JVS(1312)= W(109)
    JVS(1313)= W(110)
    JVS(1314)= W(112)
    JVS(1315)= W(114)
    JVS(1316)= W(115)
    JVS(1317)= W(117)
    JVS(1318)= W(120)
    JVS(1319)= W(121)
    JVS(1320)= W(122)
    JVS(1321)= W(124)
    JVS(1322)= W(125)
    JVS(1323)= W(126)
    JVS(1324)= W(127)
    JVS(1325)= W(128)
    JVS(1326)= W(129)
    JVS(1327)= W(130)
    JVS(1328)= W(131)
    JVS(1329)= W(132)
    JVS(1330)= W(133)
    JVS(1331)= W(134)
    JVS(1332)= W(135)
    JVS(1333)= W(136)
    JVS(1334)= W(137)
    JVS(1335)= W(138)
!   k = 134
    W(48)= JVS(1336)
    W(49)= JVS(1337)
    W(53)= JVS(1338)
    W(68)= JVS(1339)
    W(84)= JVS(1340)
    W(85)= JVS(1341)
    W(90)= JVS(1342)
    W(92)= JVS(1343)
    W(93)= JVS(1344)
    W(97)= JVS(1345)
    W(103)= JVS(1346)
    W(109)= JVS(1347)
    W(111)= JVS(1348)
    W(112)= JVS(1349)
    W(115)= JVS(1350)
    W(117)= JVS(1351)
    W(120)= JVS(1352)
    W(121)= JVS(1353)
    W(122)= JVS(1354)
    W(124)= JVS(1355)
    W(125)= JVS(1356)
    W(126)= JVS(1357)
    W(127)= JVS(1358)
    W(128)= JVS(1359)
    W(129)= JVS(1360)
    W(130)= JVS(1361)
    W(131)= JVS(1362)
    W(132)= JVS(1363)
    W(133)= JVS(1364)
    W(134)= JVS(1365)
    W(135)= JVS(1366)
    W(136)= JVS(1367)
    W(137)= JVS(1368)
    W(138)= JVS(1369)
    a = - W(48)/ JVS(222)
    W(48)= -a
      W(134)= W(134)+ a *JVS(223)
      W(135)= W(135)+ a *JVS(224)
    a = - W(49)/ JVS(226)
    W(49)= -a
      W(90)= W(90)+ a *JVS(227)
      W(120)= W(120)+ a *JVS(228)
      W(134)= W(134)+ a *JVS(229)
      W(135)= W(135)+ a *JVS(230)
    a = - W(53)/ JVS(244)
    W(53)= -a
      W(84)= W(84)+ a *JVS(245)
      W(85)= W(85)+ a *JVS(246)
      W(127)= W(127)+ a *JVS(247)
    a = - W(68)/ JVS(310)
    W(68)= -a
      W(85)= W(85)+ a *JVS(311)
      W(127)= W(127)+ a *JVS(312)
      W(134)= W(134)+ a *JVS(313)
      W(135)= W(135)+ a *JVS(314)
    a = - W(84)/ JVS(390)
    W(84)= -a
      W(90)= W(90)+ a *JVS(391)
      W(125)= W(125)+ a *JVS(392)
      W(128)= W(128)+ a *JVS(393)
      W(135)= W(135)+ a *JVS(394)
    a = - W(85)/ JVS(397)
    W(85)= -a
      W(90)= W(90)+ a *JVS(398)
      W(125)= W(125)+ a *JVS(399)
      W(127)= W(127)+ a *JVS(400)
      W(128)= W(128)+ a *JVS(401)
      W(135)= W(135)+ a *JVS(402)
    a = - W(90)/ JVS(444)
    W(90)= -a
      W(125)= W(125)+ a *JVS(445)
      W(127)= W(127)+ a *JVS(446)
      W(128)= W(128)+ a *JVS(447)
      W(134)= W(134)+ a *JVS(448)
      W(135)= W(135)+ a *JVS(449)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(97)/ JVS(519)
    W(97)= -a
      W(103)= W(103)+ a *JVS(520)
      W(111)= W(111)+ a *JVS(521)
      W(127)= W(127)+ a *JVS(522)
      W(128)= W(128)+ a *JVS(523)
      W(132)= W(132)+ a *JVS(524)
      W(134)= W(134)+ a *JVS(525)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    a = - W(131)/ JVS(1248)
    W(131)= -a
      W(132)= W(132)+ a *JVS(1249)
      W(133)= W(133)+ a *JVS(1250)
      W(134)= W(134)+ a *JVS(1251)
      W(135)= W(135)+ a *JVS(1252)
      W(136)= W(136)+ a *JVS(1253)
      W(137)= W(137)+ a *JVS(1254)
      W(138)= W(138)+ a *JVS(1255)
    a = - W(132)/ JVS(1288)
    W(132)= -a
      W(133)= W(133)+ a *JVS(1289)
      W(134)= W(134)+ a *JVS(1290)
      W(135)= W(135)+ a *JVS(1291)
      W(136)= W(136)+ a *JVS(1292)
      W(137)= W(137)+ a *JVS(1293)
      W(138)= W(138)+ a *JVS(1294)
    a = - W(133)/ JVS(1330)
    W(133)= -a
      W(134)= W(134)+ a *JVS(1331)
      W(135)= W(135)+ a *JVS(1332)
      W(136)= W(136)+ a *JVS(1333)
      W(137)= W(137)+ a *JVS(1334)
      W(138)= W(138)+ a *JVS(1335)
    JVS(1336)= W(48)
    JVS(1337)= W(49)
    JVS(1338)= W(53)
    JVS(1339)= W(68)
    JVS(1340)= W(84)
    JVS(1341)= W(85)
    JVS(1342)= W(90)
    JVS(1343)= W(92)
    JVS(1344)= W(93)
    JVS(1345)= W(97)
    JVS(1346)= W(103)
    JVS(1347)= W(109)
    JVS(1348)= W(111)
    JVS(1349)= W(112)
    JVS(1350)= W(115)
    JVS(1351)= W(117)
    JVS(1352)= W(120)
    JVS(1353)= W(121)
    JVS(1354)= W(122)
    JVS(1355)= W(124)
    JVS(1356)= W(125)
    JVS(1357)= W(126)
    JVS(1358)= W(127)
    JVS(1359)= W(128)
    JVS(1360)= W(129)
    JVS(1361)= W(130)
    JVS(1362)= W(131)
    JVS(1363)= W(132)
    JVS(1364)= W(133)
    JVS(1365)= W(134)
    JVS(1366)= W(135)
    JVS(1367)= W(136)
    JVS(1368)= W(137)
    JVS(1369)= W(138)
!   k = 135
    W(1)= JVS(1370)
    W(34)= JVS(1371)
    W(47)= JVS(1372)
    W(48)= JVS(1373)
    W(54)= JVS(1374)
    W(60)= JVS(1375)
    W(64)= JVS(1376)
    W(68)= JVS(1377)
    W(75)= JVS(1378)
    W(83)= JVS(1379)
    W(85)= JVS(1380)
    W(90)= JVS(1381)
    W(91)= JVS(1382)
    W(92)= JVS(1383)
    W(93)= JVS(1384)
    W(97)= JVS(1385)
    W(102)= JVS(1386)
    W(103)= JVS(1387)
    W(104)= JVS(1388)
    W(107)= JVS(1389)
    W(109)= JVS(1390)
    W(111)= JVS(1391)
    W(112)= JVS(1392)
    W(114)= JVS(1393)
    W(115)= JVS(1394)
    W(116)= JVS(1395)
    W(117)= JVS(1396)
    W(119)= JVS(1397)
    W(121)= JVS(1398)
    W(123)= JVS(1399)
    W(124)= JVS(1400)
    W(125)= JVS(1401)
    W(126)= JVS(1402)
    W(127)= JVS(1403)
    W(128)= JVS(1404)
    W(129)= JVS(1405)
    W(130)= JVS(1406)
    W(131)= JVS(1407)
    W(132)= JVS(1408)
    W(133)= JVS(1409)
    W(134)= JVS(1410)
    W(135)= JVS(1411)
    W(136)= JVS(1412)
    W(137)= JVS(1413)
    W(138)= JVS(1414)
    a = - W(1)/ JVS(1)
    W(1)= -a
    a = - W(34)/ JVS(184)
    W(34)= -a
      W(83)= W(83)+ a *JVS(185)
      W(130)= W(130)+ a *JVS(186)
    a = - W(47)/ JVS(219)
    W(47)= -a
      W(91)= W(91)+ a *JVS(220)
      W(127)= W(127)+ a *JVS(221)
    a = - W(48)/ JVS(222)
    W(48)= -a
      W(134)= W(134)+ a *JVS(223)
      W(135)= W(135)+ a *JVS(224)
    a = - W(54)/ JVS(248)
    W(54)= -a
      W(112)= W(112)+ a *JVS(249)
      W(127)= W(127)+ a *JVS(250)
      W(135)= W(135)+ a *JVS(251)
    a = - W(60)/ JVS(276)
    W(60)= -a
      W(92)= W(92)+ a *JVS(277)
      W(127)= W(127)+ a *JVS(278)
      W(134)= W(134)+ a *JVS(279)
    a = - W(64)/ JVS(292)
    W(64)= -a
      W(127)= W(127)+ a *JVS(293)
      W(128)= W(128)+ a *JVS(294)
      W(135)= W(135)+ a *JVS(295)
    a = - W(68)/ JVS(310)
    W(68)= -a
      W(85)= W(85)+ a *JVS(311)
      W(127)= W(127)+ a *JVS(312)
      W(134)= W(134)+ a *JVS(313)
      W(135)= W(135)+ a *JVS(314)
    a = - W(75)/ JVS(339)
    W(75)= -a
      W(121)= W(121)+ a *JVS(340)
      W(127)= W(127)+ a *JVS(341)
      W(135)= W(135)+ a *JVS(342)
    a = - W(83)/ JVS(385)
    W(83)= -a
      W(129)= W(129)+ a *JVS(386)
      W(130)= W(130)+ a *JVS(387)
      W(135)= W(135)+ a *JVS(388)
      W(136)= W(136)+ a *JVS(389)
    a = - W(85)/ JVS(397)
    W(85)= -a
      W(90)= W(90)+ a *JVS(398)
      W(125)= W(125)+ a *JVS(399)
      W(127)= W(127)+ a *JVS(400)
      W(128)= W(128)+ a *JVS(401)
      W(135)= W(135)+ a *JVS(402)
    a = - W(90)/ JVS(444)
    W(90)= -a
      W(125)= W(125)+ a *JVS(445)
      W(127)= W(127)+ a *JVS(446)
      W(128)= W(128)+ a *JVS(447)
      W(134)= W(134)+ a *JVS(448)
      W(135)= W(135)+ a *JVS(449)
    a = - W(91)/ JVS(450)
    W(91)= -a
      W(107)= W(107)+ a *JVS(451)
      W(109)= W(109)+ a *JVS(452)
      W(127)= W(127)+ a *JVS(453)
      W(134)= W(134)+ a *JVS(454)
      W(136)= W(136)+ a *JVS(455)
    a = - W(92)/ JVS(458)
    W(92)= -a
      W(127)= W(127)+ a *JVS(459)
      W(128)= W(128)+ a *JVS(460)
      W(132)= W(132)+ a *JVS(461)
      W(134)= W(134)+ a *JVS(462)
    a = - W(93)/ JVS(466)
    W(93)= -a
      W(127)= W(127)+ a *JVS(467)
      W(128)= W(128)+ a *JVS(468)
      W(132)= W(132)+ a *JVS(469)
      W(134)= W(134)+ a *JVS(470)
    a = - W(97)/ JVS(519)
    W(97)= -a
      W(103)= W(103)+ a *JVS(520)
      W(111)= W(111)+ a *JVS(521)
      W(127)= W(127)+ a *JVS(522)
      W(128)= W(128)+ a *JVS(523)
      W(132)= W(132)+ a *JVS(524)
      W(134)= W(134)+ a *JVS(525)
    a = - W(102)/ JVS(560)
    W(102)= -a
      W(104)= W(104)+ a *JVS(561)
      W(114)= W(114)+ a *JVS(562)
      W(116)= W(116)+ a *JVS(563)
      W(119)= W(119)+ a *JVS(564)
      W(123)= W(123)+ a *JVS(565)
      W(127)= W(127)+ a *JVS(566)
      W(129)= W(129)+ a *JVS(567)
      W(130)= W(130)+ a *JVS(568)
      W(133)= W(133)+ a *JVS(569)
      W(135)= W(135)+ a *JVS(570)
      W(136)= W(136)+ a *JVS(571)
    a = - W(103)/ JVS(574)
    W(103)= -a
      W(127)= W(127)+ a *JVS(575)
      W(128)= W(128)+ a *JVS(576)
      W(132)= W(132)+ a *JVS(577)
      W(134)= W(134)+ a *JVS(578)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(109)/ JVS(627)
    W(109)= -a
      W(125)= W(125)+ a *JVS(628)
      W(127)= W(127)+ a *JVS(629)
      W(128)= W(128)+ a *JVS(630)
      W(132)= W(132)+ a *JVS(631)
      W(134)= W(134)+ a *JVS(632)
      W(136)= W(136)+ a *JVS(633)
    a = - W(111)/ JVS(648)
    W(111)= -a
      W(115)= W(115)+ a *JVS(649)
      W(125)= W(125)+ a *JVS(650)
      W(127)= W(127)+ a *JVS(651)
      W(128)= W(128)+ a *JVS(652)
      W(132)= W(132)+ a *JVS(653)
      W(134)= W(134)+ a *JVS(654)
      W(136)= W(136)+ a *JVS(655)
    a = - W(112)/ JVS(660)
    W(112)= -a
      W(125)= W(125)+ a *JVS(661)
      W(127)= W(127)+ a *JVS(662)
      W(128)= W(128)+ a *JVS(663)
      W(132)= W(132)+ a *JVS(664)
      W(134)= W(134)+ a *JVS(665)
      W(135)= W(135)+ a *JVS(666)
      W(136)= W(136)+ a *JVS(667)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(115)/ JVS(685)
    W(115)= -a
      W(125)= W(125)+ a *JVS(686)
      W(127)= W(127)+ a *JVS(687)
      W(128)= W(128)+ a *JVS(688)
      W(134)= W(134)+ a *JVS(689)
      W(136)= W(136)+ a *JVS(690)
      W(137)= W(137)+ a *JVS(691)
      W(138)= W(138)+ a *JVS(692)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    a = - W(131)/ JVS(1248)
    W(131)= -a
      W(132)= W(132)+ a *JVS(1249)
      W(133)= W(133)+ a *JVS(1250)
      W(134)= W(134)+ a *JVS(1251)
      W(135)= W(135)+ a *JVS(1252)
      W(136)= W(136)+ a *JVS(1253)
      W(137)= W(137)+ a *JVS(1254)
      W(138)= W(138)+ a *JVS(1255)
    a = - W(132)/ JVS(1288)
    W(132)= -a
      W(133)= W(133)+ a *JVS(1289)
      W(134)= W(134)+ a *JVS(1290)
      W(135)= W(135)+ a *JVS(1291)
      W(136)= W(136)+ a *JVS(1292)
      W(137)= W(137)+ a *JVS(1293)
      W(138)= W(138)+ a *JVS(1294)
    a = - W(133)/ JVS(1330)
    W(133)= -a
      W(134)= W(134)+ a *JVS(1331)
      W(135)= W(135)+ a *JVS(1332)
      W(136)= W(136)+ a *JVS(1333)
      W(137)= W(137)+ a *JVS(1334)
      W(138)= W(138)+ a *JVS(1335)
    a = - W(134)/ JVS(1365)
    W(134)= -a
      W(135)= W(135)+ a *JVS(1366)
      W(136)= W(136)+ a *JVS(1367)
      W(137)= W(137)+ a *JVS(1368)
      W(138)= W(138)+ a *JVS(1369)
    JVS(1370)= W(1)
    JVS(1371)= W(34)
    JVS(1372)= W(47)
    JVS(1373)= W(48)
    JVS(1374)= W(54)
    JVS(1375)= W(60)
    JVS(1376)= W(64)
    JVS(1377)= W(68)
    JVS(1378)= W(75)
    JVS(1379)= W(83)
    JVS(1380)= W(85)
    JVS(1381)= W(90)
    JVS(1382)= W(91)
    JVS(1383)= W(92)
    JVS(1384)= W(93)
    JVS(1385)= W(97)
    JVS(1386)= W(102)
    JVS(1387)= W(103)
    JVS(1388)= W(104)
    JVS(1389)= W(107)
    JVS(1390)= W(109)
    JVS(1391)= W(111)
    JVS(1392)= W(112)
    JVS(1393)= W(114)
    JVS(1394)= W(115)
    JVS(1395)= W(116)
    JVS(1396)= W(117)
    JVS(1397)= W(119)
    JVS(1398)= W(121)
    JVS(1399)= W(123)
    JVS(1400)= W(124)
    JVS(1401)= W(125)
    JVS(1402)= W(126)
    JVS(1403)= W(127)
    JVS(1404)= W(128)
    JVS(1405)= W(129)
    JVS(1406)= W(130)
    JVS(1407)= W(131)
    JVS(1408)= W(132)
    JVS(1409)= W(133)
    JVS(1410)= W(134)
    JVS(1411)= W(135)
    JVS(1412)= W(136)
    JVS(1413)= W(137)
    JVS(1414)= W(138)
!   k = 136
    W(64)= JVS(1415)
    W(83)= JVS(1416)
    W(96)= JVS(1417)
    W(102)= JVS(1418)
    W(104)= JVS(1419)
    W(107)= JVS(1420)
    W(114)= JVS(1421)
    W(116)= JVS(1422)
    W(117)= JVS(1423)
    W(119)= JVS(1424)
    W(121)= JVS(1425)
    W(123)= JVS(1426)
    W(124)= JVS(1427)
    W(125)= JVS(1428)
    W(126)= JVS(1429)
    W(127)= JVS(1430)
    W(128)= JVS(1431)
    W(129)= JVS(1432)
    W(130)= JVS(1433)
    W(131)= JVS(1434)
    W(132)= JVS(1435)
    W(133)= JVS(1436)
    W(134)= JVS(1437)
    W(135)= JVS(1438)
    W(136)= JVS(1439)
    W(137)= JVS(1440)
    W(138)= JVS(1441)
    a = - W(64)/ JVS(292)
    W(64)= -a
      W(127)= W(127)+ a *JVS(293)
      W(128)= W(128)+ a *JVS(294)
      W(135)= W(135)+ a *JVS(295)
    a = - W(83)/ JVS(385)
    W(83)= -a
      W(129)= W(129)+ a *JVS(386)
      W(130)= W(130)+ a *JVS(387)
      W(135)= W(135)+ a *JVS(388)
      W(136)= W(136)+ a *JVS(389)
    a = - W(96)/ JVS(513)
    W(96)= -a
      W(125)= W(125)+ a *JVS(514)
      W(127)= W(127)+ a *JVS(515)
      W(136)= W(136)+ a *JVS(516)
    a = - W(102)/ JVS(560)
    W(102)= -a
      W(104)= W(104)+ a *JVS(561)
      W(114)= W(114)+ a *JVS(562)
      W(116)= W(116)+ a *JVS(563)
      W(119)= W(119)+ a *JVS(564)
      W(123)= W(123)+ a *JVS(565)
      W(127)= W(127)+ a *JVS(566)
      W(129)= W(129)+ a *JVS(567)
      W(130)= W(130)+ a *JVS(568)
      W(133)= W(133)+ a *JVS(569)
      W(135)= W(135)+ a *JVS(570)
      W(136)= W(136)+ a *JVS(571)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(117)/ JVS(710)
    W(117)= -a
      W(121)= W(121)+ a *JVS(711)
      W(125)= W(125)+ a *JVS(712)
      W(127)= W(127)+ a *JVS(713)
      W(128)= W(128)+ a *JVS(714)
      W(132)= W(132)+ a *JVS(715)
      W(134)= W(134)+ a *JVS(716)
      W(136)= W(136)+ a *JVS(717)
      W(137)= W(137)+ a *JVS(718)
      W(138)= W(138)+ a *JVS(719)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    a = - W(131)/ JVS(1248)
    W(131)= -a
      W(132)= W(132)+ a *JVS(1249)
      W(133)= W(133)+ a *JVS(1250)
      W(134)= W(134)+ a *JVS(1251)
      W(135)= W(135)+ a *JVS(1252)
      W(136)= W(136)+ a *JVS(1253)
      W(137)= W(137)+ a *JVS(1254)
      W(138)= W(138)+ a *JVS(1255)
    a = - W(132)/ JVS(1288)
    W(132)= -a
      W(133)= W(133)+ a *JVS(1289)
      W(134)= W(134)+ a *JVS(1290)
      W(135)= W(135)+ a *JVS(1291)
      W(136)= W(136)+ a *JVS(1292)
      W(137)= W(137)+ a *JVS(1293)
      W(138)= W(138)+ a *JVS(1294)
    a = - W(133)/ JVS(1330)
    W(133)= -a
      W(134)= W(134)+ a *JVS(1331)
      W(135)= W(135)+ a *JVS(1332)
      W(136)= W(136)+ a *JVS(1333)
      W(137)= W(137)+ a *JVS(1334)
      W(138)= W(138)+ a *JVS(1335)
    a = - W(134)/ JVS(1365)
    W(134)= -a
      W(135)= W(135)+ a *JVS(1366)
      W(136)= W(136)+ a *JVS(1367)
      W(137)= W(137)+ a *JVS(1368)
      W(138)= W(138)+ a *JVS(1369)
    a = - W(135)/ JVS(1411)
    W(135)= -a
      W(136)= W(136)+ a *JVS(1412)
      W(137)= W(137)+ a *JVS(1413)
      W(138)= W(138)+ a *JVS(1414)
    JVS(1415)= W(64)
    JVS(1416)= W(83)
    JVS(1417)= W(96)
    JVS(1418)= W(102)
    JVS(1419)= W(104)
    JVS(1420)= W(107)
    JVS(1421)= W(114)
    JVS(1422)= W(116)
    JVS(1423)= W(117)
    JVS(1424)= W(119)
    JVS(1425)= W(121)
    JVS(1426)= W(123)
    JVS(1427)= W(124)
    JVS(1428)= W(125)
    JVS(1429)= W(126)
    JVS(1430)= W(127)
    JVS(1431)= W(128)
    JVS(1432)= W(129)
    JVS(1433)= W(130)
    JVS(1434)= W(131)
    JVS(1435)= W(132)
    JVS(1436)= W(133)
    JVS(1437)= W(134)
    JVS(1438)= W(135)
    JVS(1439)= W(136)
    JVS(1440)= W(137)
    JVS(1441)= W(138)
!   k = 137
    W(1)= JVS(1442)
    W(2)= JVS(1443)
    W(3)= JVS(1444)
    W(28)= JVS(1445)
    W(29)= JVS(1446)
    W(36)= JVS(1447)
    W(37)= JVS(1448)
    W(38)= JVS(1449)
    W(39)= JVS(1450)
    W(70)= JVS(1451)
    W(78)= JVS(1452)
    W(89)= JVS(1453)
    W(100)= JVS(1454)
    W(101)= JVS(1455)
    W(104)= JVS(1456)
    W(106)= JVS(1457)
    W(113)= JVS(1458)
    W(114)= JVS(1459)
    W(116)= JVS(1460)
    W(118)= JVS(1461)
    W(119)= JVS(1462)
    W(121)= JVS(1463)
    W(123)= JVS(1464)
    W(124)= JVS(1465)
    W(125)= JVS(1466)
    W(126)= JVS(1467)
    W(127)= JVS(1468)
    W(128)= JVS(1469)
    W(129)= JVS(1470)
    W(130)= JVS(1471)
    W(131)= JVS(1472)
    W(132)= JVS(1473)
    W(133)= JVS(1474)
    W(134)= JVS(1475)
    W(135)= JVS(1476)
    W(136)= JVS(1477)
    W(137)= JVS(1478)
    W(138)= JVS(1479)
    a = - W(1)/ JVS(1)
    W(1)= -a
    a = - W(2)/ JVS(2)
    W(2)= -a
    a = - W(3)/ JVS(3)
    W(3)= -a
    a = - W(28)/ JVS(170)
    W(28)= -a
      W(127)= W(127)+ a *JVS(171)
    a = - W(29)/ JVS(172)
    W(29)= -a
      W(127)= W(127)+ a *JVS(173)
    a = - W(36)/ JVS(190)
    W(36)= -a
      W(127)= W(127)+ a *JVS(191)
    a = - W(37)/ JVS(192)
    W(37)= -a
      W(127)= W(127)+ a *JVS(193)
    a = - W(38)/ JVS(194)
    W(38)= -a
      W(127)= W(127)+ a *JVS(195)
    a = - W(39)/ JVS(196)
    W(39)= -a
      W(127)= W(127)+ a *JVS(197)
    a = - W(70)/ JVS(319)
    W(70)= -a
      W(127)= W(127)+ a *JVS(320)
      W(137)= W(137)+ a *JVS(321)
      W(138)= W(138)+ a *JVS(322)
    a = - W(78)/ JVS(354)
    W(78)= -a
      W(89)= W(89)+ a *JVS(355)
      W(113)= W(113)+ a *JVS(356)
      W(116)= W(116)+ a *JVS(357)
      W(124)= W(124)+ a *JVS(358)
      W(130)= W(130)+ a *JVS(359)
      W(137)= W(137)+ a *JVS(360)
      W(138)= W(138)+ a *JVS(361)
    a = - W(89)/ JVS(430)
    W(89)= -a
      W(101)= W(101)+ a *JVS(431)
      W(104)= W(104)+ a *JVS(432)
      W(113)= W(113)+ a *JVS(433)
      W(116)= W(116)+ a *JVS(434)
      W(118)= W(118)+ a *JVS(435)
      W(123)= W(123)+ a *JVS(436)
      W(124)= W(124)+ a *JVS(437)
      W(130)= W(130)+ a *JVS(438)
      W(131)= W(131)+ a *JVS(439)
      W(137)= W(137)+ a *JVS(440)
      W(138)= W(138)+ a *JVS(441)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(101)/ JVS(547)
    W(101)= -a
      W(104)= W(104)+ a *JVS(548)
      W(113)= W(113)+ a *JVS(549)
      W(116)= W(116)+ a *JVS(550)
      W(118)= W(118)+ a *JVS(551)
      W(123)= W(123)+ a *JVS(552)
      W(124)= W(124)+ a *JVS(553)
      W(127)= W(127)+ a *JVS(554)
      W(130)= W(130)+ a *JVS(555)
      W(131)= W(131)+ a *JVS(556)
      W(137)= W(137)+ a *JVS(557)
      W(138)= W(138)+ a *JVS(558)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    a = - W(131)/ JVS(1248)
    W(131)= -a
      W(132)= W(132)+ a *JVS(1249)
      W(133)= W(133)+ a *JVS(1250)
      W(134)= W(134)+ a *JVS(1251)
      W(135)= W(135)+ a *JVS(1252)
      W(136)= W(136)+ a *JVS(1253)
      W(137)= W(137)+ a *JVS(1254)
      W(138)= W(138)+ a *JVS(1255)
    a = - W(132)/ JVS(1288)
    W(132)= -a
      W(133)= W(133)+ a *JVS(1289)
      W(134)= W(134)+ a *JVS(1290)
      W(135)= W(135)+ a *JVS(1291)
      W(136)= W(136)+ a *JVS(1292)
      W(137)= W(137)+ a *JVS(1293)
      W(138)= W(138)+ a *JVS(1294)
    a = - W(133)/ JVS(1330)
    W(133)= -a
      W(134)= W(134)+ a *JVS(1331)
      W(135)= W(135)+ a *JVS(1332)
      W(136)= W(136)+ a *JVS(1333)
      W(137)= W(137)+ a *JVS(1334)
      W(138)= W(138)+ a *JVS(1335)
    a = - W(134)/ JVS(1365)
    W(134)= -a
      W(135)= W(135)+ a *JVS(1366)
      W(136)= W(136)+ a *JVS(1367)
      W(137)= W(137)+ a *JVS(1368)
      W(138)= W(138)+ a *JVS(1369)
    a = - W(135)/ JVS(1411)
    W(135)= -a
      W(136)= W(136)+ a *JVS(1412)
      W(137)= W(137)+ a *JVS(1413)
      W(138)= W(138)+ a *JVS(1414)
    a = - W(136)/ JVS(1439)
    W(136)= -a
      W(137)= W(137)+ a *JVS(1440)
      W(138)= W(138)+ a *JVS(1441)
    JVS(1442)= W(1)
    JVS(1443)= W(2)
    JVS(1444)= W(3)
    JVS(1445)= W(28)
    JVS(1446)= W(29)
    JVS(1447)= W(36)
    JVS(1448)= W(37)
    JVS(1449)= W(38)
    JVS(1450)= W(39)
    JVS(1451)= W(70)
    JVS(1452)= W(78)
    JVS(1453)= W(89)
    JVS(1454)= W(100)
    JVS(1455)= W(101)
    JVS(1456)= W(104)
    JVS(1457)= W(106)
    JVS(1458)= W(113)
    JVS(1459)= W(114)
    JVS(1460)= W(116)
    JVS(1461)= W(118)
    JVS(1462)= W(119)
    JVS(1463)= W(121)
    JVS(1464)= W(123)
    JVS(1465)= W(124)
    JVS(1466)= W(125)
    JVS(1467)= W(126)
    JVS(1468)= W(127)
    JVS(1469)= W(128)
    JVS(1470)= W(129)
    JVS(1471)= W(130)
    JVS(1472)= W(131)
    JVS(1473)= W(132)
    JVS(1474)= W(133)
    JVS(1475)= W(134)
    JVS(1476)= W(135)
    JVS(1477)= W(136)
    JVS(1478)= W(137)
    JVS(1479)= W(138)
!   k = 138
    W(2)= JVS(1480)
    W(19)= JVS(1481)
    W(23)= JVS(1482)
    W(24)= JVS(1483)
    W(25)= JVS(1484)
    W(26)= JVS(1485)
    W(27)= JVS(1486)
    W(33)= JVS(1487)
    W(34)= JVS(1488)
    W(36)= JVS(1489)
    W(38)= JVS(1490)
    W(39)= JVS(1491)
    W(43)= JVS(1492)
    W(44)= JVS(1493)
    W(45)= JVS(1494)
    W(52)= JVS(1495)
    W(56)= JVS(1496)
    W(69)= JVS(1497)
    W(70)= JVS(1498)
    W(71)= JVS(1499)
    W(72)= JVS(1500)
    W(73)= JVS(1501)
    W(74)= JVS(1502)
    W(77)= JVS(1503)
    W(78)= JVS(1504)
    W(83)= JVS(1505)
    W(87)= JVS(1506)
    W(89)= JVS(1507)
    W(98)= JVS(1508)
    W(99)= JVS(1509)
    W(100)= JVS(1510)
    W(101)= JVS(1511)
    W(104)= JVS(1512)
    W(106)= JVS(1513)
    W(107)= JVS(1514)
    W(113)= JVS(1515)
    W(114)= JVS(1516)
    W(116)= JVS(1517)
    W(118)= JVS(1518)
    W(119)= JVS(1519)
    W(120)= JVS(1520)
    W(121)= JVS(1521)
    W(122)= JVS(1522)
    W(123)= JVS(1523)
    W(124)= JVS(1524)
    W(125)= JVS(1525)
    W(126)= JVS(1526)
    W(127)= JVS(1527)
    W(128)= JVS(1528)
    W(129)= JVS(1529)
    W(130)= JVS(1530)
    W(131)= JVS(1531)
    W(132)= JVS(1532)
    W(133)= JVS(1533)
    W(134)= JVS(1534)
    W(135)= JVS(1535)
    W(136)= JVS(1536)
    W(137)= JVS(1537)
    W(138)= JVS(1538)
    a = - W(2)/ JVS(2)
    W(2)= -a
    a = - W(19)/ JVS(152)
    W(19)= -a
      W(124)= W(124)+ a *JVS(153)
    a = - W(23)/ JVS(160)
    W(23)= -a
      W(120)= W(120)+ a *JVS(161)
    a = - W(24)/ JVS(162)
    W(24)= -a
      W(120)= W(120)+ a *JVS(163)
    a = - W(25)/ JVS(164)
    W(25)= -a
      W(120)= W(120)+ a *JVS(165)
    a = - W(26)/ JVS(166)
    W(26)= -a
      W(120)= W(120)+ a *JVS(167)
    a = - W(27)/ JVS(168)
    W(27)= -a
      W(120)= W(120)+ a *JVS(169)
    a = - W(33)/ JVS(182)
    W(33)= -a
      W(120)= W(120)+ a *JVS(183)
    a = - W(34)/ JVS(184)
    W(34)= -a
      W(83)= W(83)+ a *JVS(185)
      W(130)= W(130)+ a *JVS(186)
    a = - W(36)/ JVS(190)
    W(36)= -a
      W(127)= W(127)+ a *JVS(191)
    a = - W(38)/ JVS(194)
    W(38)= -a
      W(127)= W(127)+ a *JVS(195)
    a = - W(39)/ JVS(196)
    W(39)= -a
      W(127)= W(127)+ a *JVS(197)
    a = - W(43)/ JVS(207)
    W(43)= -a
      W(127)= W(127)+ a *JVS(208)
      W(138)= W(138)+ a *JVS(209)
    a = - W(44)/ JVS(210)
    W(44)= -a
      W(120)= W(120)+ a *JVS(211)
      W(127)= W(127)+ a *JVS(212)
    a = - W(45)/ JVS(213)
    W(45)= -a
      W(127)= W(127)+ a *JVS(214)
      W(138)= W(138)+ a *JVS(215)
    a = - W(52)/ JVS(240)
    W(52)= -a
      W(120)= W(120)+ a *JVS(241)
      W(127)= W(127)+ a *JVS(242)
    a = - W(56)/ JVS(256)
    W(56)= -a
      W(120)= W(120)+ a *JVS(257)
      W(127)= W(127)+ a *JVS(258)
      W(138)= W(138)+ a *JVS(259)
    a = - W(69)/ JVS(315)
    W(69)= -a
      W(120)= W(120)+ a *JVS(316)
      W(127)= W(127)+ a *JVS(317)
      W(138)= W(138)+ a *JVS(318)
    a = - W(70)/ JVS(319)
    W(70)= -a
      W(127)= W(127)+ a *JVS(320)
      W(137)= W(137)+ a *JVS(321)
      W(138)= W(138)+ a *JVS(322)
    a = - W(71)/ JVS(323)
    W(71)= -a
      W(120)= W(120)+ a *JVS(324)
      W(127)= W(127)+ a *JVS(325)
      W(138)= W(138)+ a *JVS(326)
    a = - W(72)/ JVS(327)
    W(72)= -a
      W(120)= W(120)+ a *JVS(328)
      W(127)= W(127)+ a *JVS(329)
      W(138)= W(138)+ a *JVS(330)
    a = - W(73)/ JVS(331)
    W(73)= -a
      W(120)= W(120)+ a *JVS(332)
      W(127)= W(127)+ a *JVS(333)
      W(138)= W(138)+ a *JVS(334)
    a = - W(74)/ JVS(335)
    W(74)= -a
      W(120)= W(120)+ a *JVS(336)
      W(127)= W(127)+ a *JVS(337)
      W(138)= W(138)+ a *JVS(338)
    a = - W(77)/ JVS(350)
    W(77)= -a
      W(120)= W(120)+ a *JVS(351)
      W(127)= W(127)+ a *JVS(352)
      W(138)= W(138)+ a *JVS(353)
    a = - W(78)/ JVS(354)
    W(78)= -a
      W(89)= W(89)+ a *JVS(355)
      W(113)= W(113)+ a *JVS(356)
      W(116)= W(116)+ a *JVS(357)
      W(124)= W(124)+ a *JVS(358)
      W(130)= W(130)+ a *JVS(359)
      W(137)= W(137)+ a *JVS(360)
      W(138)= W(138)+ a *JVS(361)
    a = - W(83)/ JVS(385)
    W(83)= -a
      W(129)= W(129)+ a *JVS(386)
      W(130)= W(130)+ a *JVS(387)
      W(135)= W(135)+ a *JVS(388)
      W(136)= W(136)+ a *JVS(389)
    a = - W(87)/ JVS(411)
    W(87)= -a
      W(100)= W(100)+ a *JVS(412)
      W(107)= W(107)+ a *JVS(413)
      W(125)= W(125)+ a *JVS(414)
      W(127)= W(127)+ a *JVS(415)
      W(128)= W(128)+ a *JVS(416)
      W(138)= W(138)+ a *JVS(417)
    a = - W(89)/ JVS(430)
    W(89)= -a
      W(101)= W(101)+ a *JVS(431)
      W(104)= W(104)+ a *JVS(432)
      W(113)= W(113)+ a *JVS(433)
      W(116)= W(116)+ a *JVS(434)
      W(118)= W(118)+ a *JVS(435)
      W(123)= W(123)+ a *JVS(436)
      W(124)= W(124)+ a *JVS(437)
      W(130)= W(130)+ a *JVS(438)
      W(131)= W(131)+ a *JVS(439)
      W(137)= W(137)+ a *JVS(440)
      W(138)= W(138)+ a *JVS(441)
    a = - W(98)/ JVS(526)
    W(98)= -a
      W(99)= W(99)+ a *JVS(527)
      W(120)= W(120)+ a *JVS(528)
      W(122)= W(122)+ a *JVS(529)
      W(127)= W(127)+ a *JVS(530)
      W(128)= W(128)+ a *JVS(531)
      W(133)= W(133)+ a *JVS(532)
      W(138)= W(138)+ a *JVS(533)
    a = - W(99)/ JVS(535)
    W(99)= -a
      W(120)= W(120)+ a *JVS(536)
      W(125)= W(125)+ a *JVS(537)
      W(127)= W(127)+ a *JVS(538)
      W(136)= W(136)+ a *JVS(539)
      W(138)= W(138)+ a *JVS(540)
    a = - W(100)/ JVS(541)
    W(100)= -a
      W(125)= W(125)+ a *JVS(542)
      W(127)= W(127)+ a *JVS(543)
      W(137)= W(137)+ a *JVS(544)
      W(138)= W(138)+ a *JVS(545)
    a = - W(101)/ JVS(547)
    W(101)= -a
      W(104)= W(104)+ a *JVS(548)
      W(113)= W(113)+ a *JVS(549)
      W(116)= W(116)+ a *JVS(550)
      W(118)= W(118)+ a *JVS(551)
      W(123)= W(123)+ a *JVS(552)
      W(124)= W(124)+ a *JVS(553)
      W(127)= W(127)+ a *JVS(554)
      W(130)= W(130)+ a *JVS(555)
      W(131)= W(131)+ a *JVS(556)
      W(137)= W(137)+ a *JVS(557)
      W(138)= W(138)+ a *JVS(558)
    a = - W(104)/ JVS(579)
    W(104)= -a
      W(129)= W(129)+ a *JVS(580)
      W(130)= W(130)+ a *JVS(581)
      W(131)= W(131)+ a *JVS(582)
      W(135)= W(135)+ a *JVS(583)
      W(137)= W(137)+ a *JVS(584)
    a = - W(106)/ JVS(599)
    W(106)= -a
      W(127)= W(127)+ a *JVS(600)
      W(128)= W(128)+ a *JVS(601)
      W(132)= W(132)+ a *JVS(602)
      W(137)= W(137)+ a *JVS(603)
      W(138)= W(138)+ a *JVS(604)
    a = - W(107)/ JVS(605)
    W(107)= -a
      W(125)= W(125)+ a *JVS(606)
      W(127)= W(127)+ a *JVS(607)
      W(136)= W(136)+ a *JVS(608)
    a = - W(113)/ JVS(668)
    W(113)= -a
      W(116)= W(116)+ a *JVS(669)
      W(123)= W(123)+ a *JVS(670)
      W(124)= W(124)+ a *JVS(671)
      W(127)= W(127)+ a *JVS(672)
      W(128)= W(128)+ a *JVS(673)
      W(129)= W(129)+ a *JVS(674)
      W(130)= W(130)+ a *JVS(675)
    a = - W(114)/ JVS(676)
    W(114)= -a
      W(127)= W(127)+ a *JVS(677)
      W(131)= W(131)+ a *JVS(678)
      W(136)= W(136)+ a *JVS(679)
      W(137)= W(137)+ a *JVS(680)
      W(138)= W(138)+ a *JVS(681)
    a = - W(116)/ JVS(693)
    W(116)= -a
      W(123)= W(123)+ a *JVS(694)
      W(124)= W(124)+ a *JVS(695)
      W(126)= W(126)+ a *JVS(696)
      W(129)= W(129)+ a *JVS(697)
      W(130)= W(130)+ a *JVS(698)
      W(135)= W(135)+ a *JVS(699)
      W(138)= W(138)+ a *JVS(700)
    a = - W(118)/ JVS(724)
    W(118)= -a
      W(123)= W(123)+ a *JVS(725)
      W(124)= W(124)+ a *JVS(726)
      W(126)= W(126)+ a *JVS(727)
      W(127)= W(127)+ a *JVS(728)
      W(128)= W(128)+ a *JVS(729)
      W(129)= W(129)+ a *JVS(730)
      W(130)= W(130)+ a *JVS(731)
      W(131)= W(131)+ a *JVS(732)
      W(132)= W(132)+ a *JVS(733)
      W(135)= W(135)+ a *JVS(734)
      W(137)= W(137)+ a *JVS(735)
      W(138)= W(138)+ a *JVS(736)
    a = - W(119)/ JVS(746)
    W(119)= -a
      W(121)= W(121)+ a *JVS(747)
      W(125)= W(125)+ a *JVS(748)
      W(127)= W(127)+ a *JVS(749)
      W(128)= W(128)+ a *JVS(750)
      W(132)= W(132)+ a *JVS(751)
      W(134)= W(134)+ a *JVS(752)
      W(136)= W(136)+ a *JVS(753)
      W(137)= W(137)+ a *JVS(754)
      W(138)= W(138)+ a *JVS(755)
    a = - W(120)/ JVS(776)
    W(120)= -a
      W(122)= W(122)+ a *JVS(777)
      W(125)= W(125)+ a *JVS(778)
      W(127)= W(127)+ a *JVS(779)
      W(128)= W(128)+ a *JVS(780)
      W(129)= W(129)+ a *JVS(781)
      W(133)= W(133)+ a *JVS(782)
      W(134)= W(134)+ a *JVS(783)
      W(135)= W(135)+ a *JVS(784)
      W(136)= W(136)+ a *JVS(785)
      W(138)= W(138)+ a *JVS(786)
    a = - W(121)/ JVS(810)
    W(121)= -a
      W(125)= W(125)+ a *JVS(811)
      W(127)= W(127)+ a *JVS(812)
      W(128)= W(128)+ a *JVS(813)
      W(132)= W(132)+ a *JVS(814)
      W(134)= W(134)+ a *JVS(815)
      W(135)= W(135)+ a *JVS(816)
      W(136)= W(136)+ a *JVS(817)
      W(137)= W(137)+ a *JVS(818)
      W(138)= W(138)+ a *JVS(819)
    a = - W(122)/ JVS(834)
    W(122)= -a
      W(125)= W(125)+ a *JVS(835)
      W(126)= W(126)+ a *JVS(836)
      W(127)= W(127)+ a *JVS(837)
      W(128)= W(128)+ a *JVS(838)
      W(129)= W(129)+ a *JVS(839)
      W(130)= W(130)+ a *JVS(840)
      W(132)= W(132)+ a *JVS(841)
      W(133)= W(133)+ a *JVS(842)
      W(134)= W(134)+ a *JVS(843)
      W(135)= W(135)+ a *JVS(844)
      W(136)= W(136)+ a *JVS(845)
      W(137)= W(137)+ a *JVS(846)
      W(138)= W(138)+ a *JVS(847)
    a = - W(123)/ JVS(857)
    W(123)= -a
      W(124)= W(124)+ a *JVS(858)
      W(125)= W(125)+ a *JVS(859)
      W(126)= W(126)+ a *JVS(860)
      W(127)= W(127)+ a *JVS(861)
      W(128)= W(128)+ a *JVS(862)
      W(129)= W(129)+ a *JVS(863)
      W(130)= W(130)+ a *JVS(864)
      W(131)= W(131)+ a *JVS(865)
      W(132)= W(132)+ a *JVS(866)
      W(133)= W(133)+ a *JVS(867)
      W(134)= W(134)+ a *JVS(868)
      W(135)= W(135)+ a *JVS(869)
      W(136)= W(136)+ a *JVS(870)
      W(137)= W(137)+ a *JVS(871)
      W(138)= W(138)+ a *JVS(872)
    a = - W(124)/ JVS(885)
    W(124)= -a
      W(125)= W(125)+ a *JVS(886)
      W(126)= W(126)+ a *JVS(887)
      W(127)= W(127)+ a *JVS(888)
      W(128)= W(128)+ a *JVS(889)
      W(129)= W(129)+ a *JVS(890)
      W(130)= W(130)+ a *JVS(891)
      W(131)= W(131)+ a *JVS(892)
      W(132)= W(132)+ a *JVS(893)
      W(133)= W(133)+ a *JVS(894)
      W(134)= W(134)+ a *JVS(895)
      W(135)= W(135)+ a *JVS(896)
      W(136)= W(136)+ a *JVS(897)
      W(137)= W(137)+ a *JVS(898)
      W(138)= W(138)+ a *JVS(899)
    a = - W(125)/ JVS(913)
    W(125)= -a
      W(126)= W(126)+ a *JVS(914)
      W(127)= W(127)+ a *JVS(915)
      W(128)= W(128)+ a *JVS(916)
      W(129)= W(129)+ a *JVS(917)
      W(130)= W(130)+ a *JVS(918)
      W(131)= W(131)+ a *JVS(919)
      W(132)= W(132)+ a *JVS(920)
      W(133)= W(133)+ a *JVS(921)
      W(134)= W(134)+ a *JVS(922)
      W(135)= W(135)+ a *JVS(923)
      W(136)= W(136)+ a *JVS(924)
      W(137)= W(137)+ a *JVS(925)
      W(138)= W(138)+ a *JVS(926)
    a = - W(126)/ JVS(952)
    W(126)= -a
      W(127)= W(127)+ a *JVS(953)
      W(128)= W(128)+ a *JVS(954)
      W(129)= W(129)+ a *JVS(955)
      W(130)= W(130)+ a *JVS(956)
      W(131)= W(131)+ a *JVS(957)
      W(132)= W(132)+ a *JVS(958)
      W(133)= W(133)+ a *JVS(959)
      W(134)= W(134)+ a *JVS(960)
      W(135)= W(135)+ a *JVS(961)
      W(136)= W(136)+ a *JVS(962)
      W(137)= W(137)+ a *JVS(963)
      W(138)= W(138)+ a *JVS(964)
    a = - W(127)/ JVS(1053)
    W(127)= -a
      W(128)= W(128)+ a *JVS(1054)
      W(129)= W(129)+ a *JVS(1055)
      W(130)= W(130)+ a *JVS(1056)
      W(131)= W(131)+ a *JVS(1057)
      W(132)= W(132)+ a *JVS(1058)
      W(133)= W(133)+ a *JVS(1059)
      W(134)= W(134)+ a *JVS(1060)
      W(135)= W(135)+ a *JVS(1061)
      W(136)= W(136)+ a *JVS(1062)
      W(137)= W(137)+ a *JVS(1063)
      W(138)= W(138)+ a *JVS(1064)
    a = - W(128)/ JVS(1106)
    W(128)= -a
      W(129)= W(129)+ a *JVS(1107)
      W(130)= W(130)+ a *JVS(1108)
      W(131)= W(131)+ a *JVS(1109)
      W(132)= W(132)+ a *JVS(1110)
      W(133)= W(133)+ a *JVS(1111)
      W(134)= W(134)+ a *JVS(1112)
      W(135)= W(135)+ a *JVS(1113)
      W(136)= W(136)+ a *JVS(1114)
      W(137)= W(137)+ a *JVS(1115)
      W(138)= W(138)+ a *JVS(1116)
    a = - W(129)/ JVS(1185)
    W(129)= -a
      W(130)= W(130)+ a *JVS(1186)
      W(131)= W(131)+ a *JVS(1187)
      W(132)= W(132)+ a *JVS(1188)
      W(133)= W(133)+ a *JVS(1189)
      W(134)= W(134)+ a *JVS(1190)
      W(135)= W(135)+ a *JVS(1191)
      W(136)= W(136)+ a *JVS(1192)
      W(137)= W(137)+ a *JVS(1193)
      W(138)= W(138)+ a *JVS(1194)
    a = - W(130)/ JVS(1228)
    W(130)= -a
      W(131)= W(131)+ a *JVS(1229)
      W(132)= W(132)+ a *JVS(1230)
      W(133)= W(133)+ a *JVS(1231)
      W(134)= W(134)+ a *JVS(1232)
      W(135)= W(135)+ a *JVS(1233)
      W(136)= W(136)+ a *JVS(1234)
      W(137)= W(137)+ a *JVS(1235)
      W(138)= W(138)+ a *JVS(1236)
    a = - W(131)/ JVS(1248)
    W(131)= -a
      W(132)= W(132)+ a *JVS(1249)
      W(133)= W(133)+ a *JVS(1250)
      W(134)= W(134)+ a *JVS(1251)
      W(135)= W(135)+ a *JVS(1252)
      W(136)= W(136)+ a *JVS(1253)
      W(137)= W(137)+ a *JVS(1254)
      W(138)= W(138)+ a *JVS(1255)
    a = - W(132)/ JVS(1288)
    W(132)= -a
      W(133)= W(133)+ a *JVS(1289)
      W(134)= W(134)+ a *JVS(1290)
      W(135)= W(135)+ a *JVS(1291)
      W(136)= W(136)+ a *JVS(1292)
      W(137)= W(137)+ a *JVS(1293)
      W(138)= W(138)+ a *JVS(1294)
    a = - W(133)/ JVS(1330)
    W(133)= -a
      W(134)= W(134)+ a *JVS(1331)
      W(135)= W(135)+ a *JVS(1332)
      W(136)= W(136)+ a *JVS(1333)
      W(137)= W(137)+ a *JVS(1334)
      W(138)= W(138)+ a *JVS(1335)
    a = - W(134)/ JVS(1365)
    W(134)= -a
      W(135)= W(135)+ a *JVS(1366)
      W(136)= W(136)+ a *JVS(1367)
      W(137)= W(137)+ a *JVS(1368)
      W(138)= W(138)+ a *JVS(1369)
    a = - W(135)/ JVS(1411)
    W(135)= -a
      W(136)= W(136)+ a *JVS(1412)
      W(137)= W(137)+ a *JVS(1413)
      W(138)= W(138)+ a *JVS(1414)
    a = - W(136)/ JVS(1439)
    W(136)= -a
      W(137)= W(137)+ a *JVS(1440)
      W(138)= W(138)+ a *JVS(1441)
    a = - W(137)/ JVS(1478)
    W(137)= -a
      W(138)= W(138)+ a *JVS(1479)
    JVS(1480)= W(2)
    JVS(1481)= W(19)
    JVS(1482)= W(23)
    JVS(1483)= W(24)
    JVS(1484)= W(25)
    JVS(1485)= W(26)
    JVS(1486)= W(27)
    JVS(1487)= W(33)
    JVS(1488)= W(34)
    JVS(1489)= W(36)
    JVS(1490)= W(38)
    JVS(1491)= W(39)
    JVS(1492)= W(43)
    JVS(1493)= W(44)
    JVS(1494)= W(45)
    JVS(1495)= W(52)
    JVS(1496)= W(56)
    JVS(1497)= W(69)
    JVS(1498)= W(70)
    JVS(1499)= W(71)
    JVS(1500)= W(72)
    JVS(1501)= W(73)
    JVS(1502)= W(74)
    JVS(1503)= W(77)
    JVS(1504)= W(78)
    JVS(1505)= W(83)
    JVS(1506)= W(87)
    JVS(1507)= W(89)
    JVS(1508)= W(98)
    JVS(1509)= W(99)
    JVS(1510)= W(100)
    JVS(1511)= W(101)
    JVS(1512)= W(104)
    JVS(1513)= W(106)
    JVS(1514)= W(107)
    JVS(1515)= W(113)
    JVS(1516)= W(114)
    JVS(1517)= W(116)
    JVS(1518)= W(118)
    JVS(1519)= W(119)
    JVS(1520)= W(120)
    JVS(1521)= W(121)
    JVS(1522)= W(122)
    JVS(1523)= W(123)
    JVS(1524)= W(124)
    JVS(1525)= W(125)
    JVS(1526)= W(126)
    JVS(1527)= W(127)
    JVS(1528)= W(128)
    JVS(1529)= W(129)
    JVS(1530)= W(130)
    JVS(1531)= W(131)
    JVS(1532)= W(132)
    JVS(1533)= W(133)
    JVS(1534)= W(134)
    JVS(1535)= W(135)
    JVS(1536)= W(136)
    JVS(1537)= W(137)
    JVS(1538)= W(138)
    return                                                            
                                                                      
  End SUBROUTINE KppDecomp                                            
 
SUBROUTINE kpp_integrate (time_step_len,Conc,ierrf,xNacc,xNrej,istatus,l_debug,PE) 
                                                                    
  IMPLICIT NONE                                                     
                                                                    
  REAL(dp),INTENT(IN)                   :: time_step_len           
  REAL(dp),INTENT(INOUT),dimension(:,:) :: Conc                    
  INTEGER, INTENT(OUT),OPTIONAL        :: ierrf(:)                
  INTEGER, INTENT(OUT),OPTIONAL        :: xNacc(:)                
  INTEGER, INTENT(OUT),OPTIONAL        :: xNrej(:)                
  INTEGER, INTENT(INOUT),OPTIONAL      :: istatus(:)              
  INTEGER, INTENT(IN),OPTIONAL         :: PE                      
  LOGICAL, INTENT(IN),OPTIONAL         :: l_debug                 
                                                                    
  INTEGER                                :: k   ! loop variable
  REAL(dp)                               :: dt                      
  integer,dimension(20)                 :: istatus_u               
  integer                                :: ierr_u                  
# 20614

                                                                    
! ierrf = 0 ; CALL check_kpp_input(Conc,PE) ; RETURN
                                                                    
  if (present (istatus)) istatus = 0                              
                                                                    
# 20635

                                                                    
# 20640

                                                                    
  DO k=1,VL_glo,VL_DIM                                              
    is = k                                                          
    ie = min(k+VL_DIM-1,VL_glo)                                     
    vl = ie-is+1                                                    
                                                                    
# 20652

                                                                    

                                                                    
    C(:) = Conc(is,:)                                             
    CALL update_rconst                                              
                                                                    
    dt = time_step_len                                              
                                                                    
! integrate from t=0 to t=dt
    CALL integrate(0._dp,dt,icntrl,rcntrl,istatus_u = istatus_u,ierr_u=ierr_u)
                                                                    
                                                                    
   IF (PRESENT(l_debug) .AND. PRESENT(PE)) THEN                       
      IF (l_debug) CALL error_output(Conc(is,:),ierr_u,PE)           
   ENDIF                                                              
    Conc(is,:) = C(:)                                                 

                                                                    
! Return Diagnostic Information
                                                                    

    if(Present(ierrf))    ierrf(is) = IERR_U                      
    if(Present(xNacc))    xNacc(is) = istatus_u(4)                
    if(Present(xNrej))    xNrej(is) = istatus_u(5)                
# 20681

                                                                    
    if (present (istatus)) then                                   
      istatus(1:8) = istatus(1:8) + istatus_u(1:8)                 
    end if                                                          
                                                                    
                                                                    
# 20690

                                                                    
  END DO                                                            
 
                                                                    
# 20699

                                                                    
                                                                    
! Deallocate input arrays
                                                                    
  if (allocated(TEMP))   deallocate(TEMP)   
  if (allocated(mcexp))   deallocate(mcexp)   
  if (allocated(cair))   deallocate(cair)   
  if (allocated(press))   deallocate(press)   
  if (allocated(temp_ion))   deallocate(temp_ion)   
  if (allocated(temp_elec))   deallocate(temp_elec)   
  if (allocated(xaer))   deallocate(xaer)   
  if (allocated(cvfac))   deallocate(cvfac)   
  if (allocated(lwc))   deallocate(lwc)   
  if (allocated(k_exf))   deallocate(k_exf)   
  if (allocated(k_exb))   deallocate(k_exb)   
  if (allocated(k_exf_N2O5))   deallocate(k_exf_N2O5)   
  if (allocated(k_exf_ClNO3))   deallocate(k_exf_ClNO3)   
  if (allocated(k_exf_BrNO3))   deallocate(k_exf_BrNO3)   
  if (allocated(jx))   deallocate(jx)   
  if (allocated(khet_Tr))   deallocate(khet_Tr)   
  if (allocated(khet_St))   deallocate(khet_St)   
# 20724

                                                                    
  data_loaded = .false.                                             
                                                                    
  return                                                            
END SUBROUTINE kpp_integrate                                        
 
  SUBROUTINE fill_TEMP(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:) :: array 
 
    status = 0
    if (.not. allocated(TEMP)) & 
       allocate(TEMP(size(array))) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    TEMP = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_TEMP
 
  SUBROUTINE fill_mcexp(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(mcexp)) & 
        allocate(mcexp(size(array,1),MAX_MCEXP)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    mcexp = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_mcexp
 
  SUBROUTINE fill_cair(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:) :: array 
 
    status = 0
    if (.not. allocated(cair)) & 
       allocate(cair(size(array))) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    cair = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_cair
 
  SUBROUTINE fill_press(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:) :: array 
 
    status = 0
    if (.not. allocated(press)) & 
       allocate(press(size(array))) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    press = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_press
 
  SUBROUTINE fill_temp_ion(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:) :: array 
 
    status = 0
    if (.not. allocated(temp_ion)) & 
       allocate(temp_ion(size(array))) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    temp_ion = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_temp_ion
 
  SUBROUTINE fill_temp_elec(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:) :: array 
 
    status = 0
    if (.not. allocated(temp_elec)) & 
       allocate(temp_elec(size(array))) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    temp_elec = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_temp_elec
 
  SUBROUTINE fill_xaer(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(xaer)) & 
        allocate(xaer(size(array,1),APN)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    xaer = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_xaer
 
  SUBROUTINE fill_cvfac(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(cvfac)) & 
        allocate(cvfac(size(array,1),APN)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    cvfac = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_cvfac
 
  SUBROUTINE fill_lwc(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(lwc)) & 
        allocate(lwc(size(array,1),APN)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    lwc = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_lwc
 
  SUBROUTINE fill_k_exf(status,array) 
 
    integer,intent(OUT)               :: status 
 
    real (dp),intent(IN),dimension(:,:,:) :: array 
 
    status = 0 
    if (.not. allocated(k_exf)) & 
        allocate(k_exf(size(array,1),APN,NSPEC)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    k_exf = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_k_exf
 
  SUBROUTINE fill_k_exb(status,array) 
 
    integer,intent(OUT)               :: status 
 
    real (dp),intent(IN),dimension(:,:,:) :: array 
 
    status = 0 
    if (.not. allocated(k_exb)) & 
        allocate(k_exb(size(array,1),APN,NSPEC)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    k_exb = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_k_exb
 
  SUBROUTINE fill_k_exf_N2O5(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(k_exf_N2O5)) & 
        allocate(k_exf_N2O5(size(array,1),APN)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    k_exf_N2O5 = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_k_exf_N2O5
 
  SUBROUTINE fill_k_exf_ClNO3(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(k_exf_ClNO3)) & 
        allocate(k_exf_ClNO3(size(array,1),APN)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    k_exf_ClNO3 = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_k_exf_ClNO3
 
  SUBROUTINE fill_k_exf_BrNO3(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(k_exf_BrNO3)) & 
        allocate(k_exf_BrNO3(size(array,1),APN)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    k_exf_BrNO3 = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_k_exf_BrNO3
 
  SUBROUTINE fill_jx(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(jx)) & 
        allocate(jx(size(array,1),IP_MAX)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    jx = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_jx
 
  SUBROUTINE fill_khet_Tr(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(khet_Tr)) & 
        allocate(khet_Tr(size(array,1),IHT_MAX)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    khet_Tr = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_khet_Tr
 
  SUBROUTINE fill_khet_St(status,array) 
 
    integer,intent(OUT)               :: status 
    real (dp),intent(IN),dimension(:,:) :: array 
 
    status = 0 
    if (.not. allocated(khet_St)) & 
        allocate(khet_St(size(array,1),IHS_MAX)) 
 
    IF (data_loaded .AND. (VL_glo /= size(array,1))) THEN 
       status = 1 
       RETURN 
    END IF 
 
    VL_glo = size(array,1) 
    khet_St = array 
    data_loaded = .TRUE. 
 
    RETURN
 
  END   SUBROUTINE fill_khet_St

end module messy_mecca_kpp
 
