\cancel mode verify
cancel data/all
cancel region
cancel viewport
cancel variable/all
cancel mode logo
set mode interpolate
! -----------------------------------------------------

! THIS SCRIPT IS FOR CHECKING THE ATTILA VELOCITY INTERPOLATION ONTO THE
! CELL POSITIONS
! - LVDIAG = T IS REQUIRED IN attila.nml
! - attila.mc and ECHAM5.mc must be present (see blow)
!
! EXAMPLE: go attila_lvdiag.jnl 3 xy 100 110 u

! -----------------------------------------------------
! SELECT TIME STEP
define symbol tstep = $1      ! time step
! SELECT MODE: xy in pressure range OR yp in longitude range
define symbol rmode = $2      ! xy, yp
! SELECT RANGE (dependent on rmode)
define symbol rmin = $3       ! min. pressure [hPa] / min. longitude [-180,180]
define symbol rmax = $4       ! max. pressure [hPa] / min. longitude [-180,180]
! SELECT FIELD FOR COLOR-CODING
define symbol f = $5          ! u,v,w,p,lon,lat
! -----------------------------------------------------

! -----------------------------------------------------
set data attila.mc  ! uvel, vvel, wvel
set data ECHAM5.mc  ! um1, vm1, etadot
! -----------------------------------------------------

! -----------------------------------------------------
let pi = 4*atan(1)    ! Pi
let d2r = pi/180      ! degrees -> radian
! -----------------------------------------------------

! -----------------------------------------------------
IF ($f%|u>TRUE|*>FALSE%) THEN
   let gp_val = um1[d=2]/cos(Y[gy=um1[d=2]]*d2r)
   let lg_val = uvel[d=1]
   define symbol title = "u-wind velocity [m/s]"
ENDIF

IF ($f%|v>TRUE|*>FALSE%) THEN
   let gp_val = vm1[d=2]/cos(Y[gy=vm1[d=2]]*d2r)
   let lg_val = vvel[d=1]
   define symbol title = "v-wind velocity [m/s]"
ENDIF

IF ($f%|w>TRUE|*>FALSE%) THEN
   let gp_tmp = (etadot[d=2]+etadot[d=2,k=@SHF:1])/2
   let gp_val = gp_tmp[gz=um1[d=2]@ASN] * 1e5
   let lg_val = wvel[d=1] * 1e5
   define symbol title = "vertical velocity (etadot) [1/s]*10^5"
ENDIF

! FOR TESTING ...

IF ($f%|p>TRUE|*>FALSE%) THEN
   let gp_val = (hyam[d=2] + hybm[d=2] * aps[d=2,k=1])/100 ! [hPa]
   let lg_val = PPRESS[d=1]/100                            ! [hPa]
   define symbol title = "pressure [hPa]"
ENDIF

IF ($f%|lat>TRUE|*>FALSE%) THEN
   let gp_val = Y[gy=um1[d=2]] * (um1[d=2]/um1[d=2])
   let lg_val = PLAT[d=1]
   define symbol title = "latitude [^oN]"
ENDIF

IF ($f%|lon>TRUE|*>FALSE%) THEN
   let gp_val = X[gx=um1[d=2]] * (um1[d=2]/um1[d=2])
   let lg_val = PPLON[d=1]
   define symbol title = "longitude [^oE]"
ENDIF
! --------------------------------------------------------------------

! --------------------------------------------------------------------
set region/l=($tstep)

let/d=1 PPLON = IF (PLON GT 180) THEN (PLON-360) ELSE PLON
! --------------------------------------------------------------------

! --------------------------------------------------------------------
IF ($rmode%|xy>TRUE|*>FALSE%) THEN
   ! select LEVEL
   let/d=1 fk = IF ((PPRESS[d=1] GE ($rmin)*100) AND \
                    (PPRESS[d=1] LE ($rmax)*100)) THEN 1 ELSE (-1.0E+34)
ENDIF
! --------------------------------------------------------------------
! --------------------------------------------------------------------
IF ($rmode%|yp>TRUE|*>FALSE%) THEN
   ! select LONGITUDE
   let/d=1 fk = IF ((PPLON[d=1] GE ($rmin)) AND \
                    (PPLON[d=1] LE ($rmax))) THEN 1 ELSE (-1.0E+34)
ENDIF
! --------------------------------------------------------------------

! --------------------------------------------------------------------
let/d=1 qlat  = PLAT[d=1] * fk[d=1]
let/d=1 qlon  = PPLON[d=1] * fk[d=1]
let/d=1 qlogp = LOG(PPRESS[d=1]/100 * fk[d=1])
let     qlg   = lg_val * fk[d=1]
! --------------------------------------------------------------------
let/d=1 rlat  = COMPRESSI(qlat)
let/d=1 rlon  = COMPRESSI(qlon)
let/d=1 rlogp = COMPRESSI(qlogp)
let     rlg   = COMPRESSI(qlg)
let n = `rlat[i=@ngd,d=1]`
! --------------------------------------------------------------------

! --------------------------------------------------------------------
! PRESSURE AXIS
let press = (hyam[d=2] + hybm[d=2] * aps[d=2,k=1])/100 ! [hPa]
define axis/z/from/name=pax ((hyam[d=2] + hybm[d=2] * 101325.)/100)
define axis/z/from/name=logpax LOG(Z[gz=pax])
let gp=ZAXREPLACE(gp_val, press[d=1], Z[gz=pax])
let gplog=ZAXREPLACE(gp_val, LOG(press[d=1]), Z[gz=logpax])
! --------------------------------------------------------------------

! --------------------------------------------------------------------
IF ($rmode%|xy>TRUE|*>FALSE%) THEN
  palette light_rainbow
  GO margins 1.4  1.5  1.3   1.1
  ppl axlabp -1,-1
  ppl axset 1,1,1,1
  shade/title=($title)/set/\
    vlimits=-90:90:10/hlimits=-180:180:30 gp[z=($rmin):($rmax)@ave,x=-180:180]
  ppl xlab "longitude"
  ppl ylab "latitude"
  ppl labset 0.18,0.18,0.18,0.18
  ppl axlsze 0.18,0.18
  ppl shade
  go land

  palette rainbow
  go polymark POLYGON/over/nolab/nokey/i=1:`n`/levels \
     rlon[d=1] rlat[d=1] rlg circle 0.5
ENDIF
! --------------------------------------------------------------------

! --------------------------------------------------------------------
IF ($rmode%|yp>TRUE|*>FALSE%) THEN
   GO margins 1.4  1.5  1.3   1.1
   palette light_rainbow

   ! WHICH DECADES TO PLOT
   let decmin = 2
   let decmax = 3

   ! EMPTY PLOT; NO VERTICAL TICKS
   ppl axlabp -1,0
   ppl axset 1,1,1,1
   shade/set/title=($title)/vlimits=`decmax+0.1`:`decmin-1`:-1 \
        gplog[x=($rmin):($rmax)@ave]
   ppl labset 0.18,0.18,0.18,0.18
   ppl xlab " "
   ppl ylab "LATITUDE"
   ppl axlsze 0.18,0.18
   ppl shade

   ! LENGTH OF VERTICAL TICKS
   let ts = (($xaxis_max)-($xaxis_min))/100*2
   let tl  = (($xaxis_max)-($xaxis_min))/100*3
   ! OFFSET FOR VERTICAL TICK LABELS
   let yoff = ABS((($yaxis_max)-($yaxis_min))/100)

   ! VERTICAL TICKS AND LABELS
repeat/RANGE=`decmin`:`decmax`:1/NAME=n ( \
   ppl aline 1,($xaxis_min),`n`,`($xaxis_min)-tl`,`n` ;\
   ppl aline 1,($xaxis_max),`n`,`($xaxis_max)+tl`,`n` ;\
   repeat/RANGE=1:10:1/NAME=m (\
     ppl aline 1,($xaxis_min),`n-1+LOG(m)`,`($xaxis_min)-ts`,`n-1+LOG(m)` ;\
     ppl aline 1,($xaxis_max),`n-1+LOG(m)`,`($xaxis_max)+ts`,`n-1+LOG(m)` ;\
     ); \
   label `($xaxis_min)-2*tl`, `n+yoff`,  1,  0, .18 "@SR`10^n`" ;\
   )
! VERTICAL AXIS LABEL
label `($xaxis_min)-4.5*tl`, `(($yaxis_min)+($yaxis_max))/2`, 0, 90, .18 "@SRpressure @AS[hPa]"

palette rainbow
go polymark POLYGON/over/nolab/nokey/i=1:`n`/levels \
   rlat[d=1] rlogp[d=1] rlg circle 0.5
ENDIF
! --------------------------------------------------------------------
