! -*- f90 -*-
! NOTE: Submodel SCAV requires submodels CLOUD and CONVECT to be switched on.

&CTRL
 lscav_ls    = T,      ! true for large scale scavenging
 lscav_cv    = T,      ! true for convective scavenging

 lscav_nuc   = T,      ! nucleation scavenging
 lscav_imp   = T,      ! impaction scavenging

 lscav_l     = T,      ! scavenging by rain
 lscav_i     = T,      ! scavenging by snow/ice
! concerning gas phase scavenging
 lscav_gas   = T,      ! true for scavenging of gasphase species
 USE_schwartz = T,     ! true for calculation of transfer coefficient 
                       !      following Schwartz, else Roelofs
 lscav_easy  = F,      ! true for simplified scavenging (coefficients) 
                       !      (no KPP for liquid phase)
                       ! WARNING: the selected species are the same as 
                       !          for the LIQUID KPP mechanism, so be careful 
                       !          which mechanism to choose and which species 
                       !          to consider
                       !          This does not give very reasonable results
 iscav_easy  = T,      ! true for simplified scavenging (coefficients)
                       !      (no KPP for ice phase)
                       ! WARNING: the selected species are the same as 
                       !          for the ICE KPP mechanism, so be careful 
                       !          which mechanism to choose and which species 
                       !          to consider
 l_scav_easy= 3,       ! switch for the type of easy scavenging
                       ! 0 = no gaseous liquid scavenging
                       ! 1 = fixed coefficients
                       ! 2 = absolute Henry's law
                       ! 3 = effective Henry's law (pH 5)
 i_scav_easy= 3,       ! switch for the type of easy scavenging
                       ! 0 = no gaseous ice scavenging
                       ! 1 = fixed coefficients
                       ! 2 = pseudo Henry's law
                       ! 3 = iterative Langmuir uptake

! concerning aerosol scavenging
 lscav_aer   = T,      ! true for scavenging of aerosol species
 coeff_para  = 2,      ! scavenging parameter  
                       ! 1 = constant parameters (Feichter)
                       ! 2 = radius dependent (Slinn)
 cpl_aerosol = 2,      ! coupling to aerosol chemical composition
                      ! 0 = OFF (not mass conserving), 1 = simple coupling, 
                      ! 2 = more extensive coupling (requires aerosol module) , 
                      !     or full coupling (requires MECCA aerosol chemistry)
 i_evap  = 2          ! 1 = aerosols go after evaporation in the mode 
                      !     where they originate from
                      ! 2 = aerosols go into the largest available
/

&CPL
 boxarea = 'geoloc', 'gboxarea',            ! grid box area
 rain_cv = 'convect', 'cv_precflx',         ! convective: rainflux
 snow_cv = 'convect', 'cv_snowflx',         !             snowflux
 ccover  = 'convect', 'cv_cover',           !             cloud cover
 cvprec  = 'convect', 'cv_precnew',         !             freshly formed precipitation
 cvsnow  = 'convect', 'cv_snownew',         !             freshly formed snow
 cvrform = 'convect', 'cv_rform',
 cvsform = 'convect', 'cv_sform',
 cvlwc   = 'convect', 'cv_lwc',
 cviwc   = 'convect', 'cv_iwc',


 lcover  = 'cloud', 'aclc',                 ! large scale: cloud cover
! lcover  = 'cloud', 'prec_cover',           ! large scale: cloud cover
 rcover  = 'cloud', 'prec_cover',           !              precipitating cloud cover
 prec    = 'cloud', 'rainflux_no',          !              liquid precipitation
 fsi     = 'cloud', 'snowflux_no',          !              ice / snow  precipitation
 ratep   = 'cloud', 'rain_form',            !              liquid precipitation formation rate
 ratesi  = 'cloud', 'snow_form',            !              ice precipitation formation rate
 lwc     = 'cloud', 'lwc',                  !              liquid water content
 iwc     = 'cloud', 'iwc',                  !              ice / snow content
 imelt   = 'cloud', 'mimelt',               !              snow melting
 isedi   = 'cloud', 'misedi',               !              ice sedimentation

! aerosol module name for tracers made by scav 
!for grid point and langrangian representation
! aermod_gp  = 'ptrac'              
! aermod_lg  = 'ptrac'
! aermod_gp  = 'made'
!  aermod_gp  = 'gmxe'
  aermod_gp  = 'm7'

 mass    = 'grid_def',   'grmass',             ! box properties: grid mass
 vol     = 'grid_def',   'grvol',              !                 grid volume  
 press   = 'ECHAM5',   'press',              !                 pressure 
 pressi  = 'ECHAM5',   'pressi',             !                 pressure at interface levels
 photol  = 'jval_gp', ''                    ! photolysis rates from channel (depends on photolysis module)
                                            !
 out_string = ''
! out_string = 'HNO3_l;NO3m_l;SO4mm_l;HSO4m_l;NH3_l;NH4p_l;HCl_l;Clm_l;HCHO_l;HCOOH_l;HCOOm_l;CH3CO2H_l;CH3COOm_l;H2O2_l;O3_l;Hp_l;SO3mm_l;HSO3m_l;NO_l;NO2_l;HONO_l;NO2m_l;HNO4_l;NO4m_l;PAN_l;CO2_l;HCO3m_l;CO3mm_l;CH3OH_l;CH3OOH_l;CH3O2_l;OH_l;HO2_l;OHm_l;CH3COCH3_l;CH3CHO_l;RGM_l;',
                                                                   ! ATTENTION !!! CASE SENSITIVE !!! 
                                                                   ! To be sure of the name look in the species file 
                                                                   ! or in messy/src/messy_scav_kpp_g_mem.f90      
! out_string_aer = 'SS_cs;SS_as;SO4_cs;SO4_as;OC_cs',
!
! Olson bioaerosols
! out_string_aer = 'BIOAERO;BIOAERO_SEAS;BIOAERO_TUNDRA;BIOAERO_LANDICE;BIOAERO_DESERTS;BIOAERO_FORESTS;BIOAERO_GRASSLANDS;BIOAERO_CROPS;BIOAERO_WETLANDS;BIOAERO_SHRUBS;BIOAERO_COASTAL;BIOAERO_URBAN',
! MODIS bioaerosols
! out_string_aer = 'BIOAERM;BIOAERM_WATER;BIOAERM_EVER_NEED;BIOAERM_EVER_BROAD;BIOAERM_DECI_NEED;BIOAERM_DECI_BROAD;BIOAERM_MIXED_FOREST;BIOAERM_CLOSED_SHRUBS;BIOAERM_OPEN_SHRUBS;BIOAERM_WOODY_SAVANNAS;BIOAERM_SAVANNAS;BIOAERM_GRASSLANDS;BIOAERM_WETLANDS;BIOAERM_CROPS;BIOAERM_URBAN;BIOAERM_CROP_NATURE;BIOAERM_SNOW_ICE;BIOAERM_BARREN;BIOAERM_UNCLASS',
!
! out_string_aer = '',     
!
! out_string_aer = 'RGM_cs;Pb210;SS_cs;SS_as;DU_cs;DU_ci;OC_as;OC_ks;OC_cs;OC_ki;BC_as;BC_ks;BC_cs;BC_ki;',
 out_string_aer = 'SS_as;SS_cs;SO4_ns;SO4_ks;SO4_as;SO4_cs;OC_ks;OC_as;OC_cs;OC_ki;BC_ks;BC_as;BC_cs;BC_ki;DU_as;DU_cs;DU_ai;DU_ci'
                                                                   ! ATTENTION !!! CASE SENSITIVE !!! 
                                                                   ! To be sure of the name look in the file of
                                                                   ! the module which defines the tracer
!!
! Scavenging in gridpoint representation
lscav_gp = T,
! Scavenging in Lagrangian representation
lscav_lg = F,
! 1st: FRACTION [0...1] OF SUPER-COOLED WATER AT 0 degC
! 2nd: LINEAR REGRESSION TO 0.0 at THIS TEMPERATURE (K)
LIQFRAC = 1.00, 238.15
! Altitude to which scav should calculate in Pa
altitude = 5000.0
/
