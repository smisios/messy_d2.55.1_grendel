#! /bin/tcsh -f
# Author: Holger Tost, Max-Planck-Institute, Mainz, Germany, 2004
# Time-stamp: <2006-07-20 12:17:07 tost>

# this scipt automatically creates a module of the include files created
# by tracmvscav.awk 

echo " \! this file is automatically created by xscav - do not change \!"
echo ""
echo "   MODULE MESSY_SCAV_AUTO_INTER"
echo ""
echo ""
echo "     USE MESSY_SCAV_KPP_G_MEM"
echo ""
echo "     IMPLICIT NONE"
echo ""
echo "     INTRINSIC :: REAL"
echo ""
echo "     SAVE"
echo ""
echo "     PRIVATE" 
echo ""
echo ""
echo "       INTEGER, PUBLIC :: idt_scav_NH3_g      = 0"
echo "       INTEGER, PUBLIC :: idt_scav_Hplus_l    = 0" 
echo "       INTEGER, PUBLIC :: idt_scav_NO3mres_cs = 0"       
echo "       INTEGER, PUBLIC :: idt_scav_SO4res_cs  = 0"
echo "       INTEGER, PUBLIC :: idt_scav_nh4pres_cs = 0"
echo "       INTEGER, PUBLIC :: idt_scav_Clmres_cs  = 0" 
echo "       INTEGER, PUBLIC :: idt_scav_Hpres_cs   = 0"
echo "       INTEGER, PUBLIC :: idt_scav_SO4_as     = 0" 
echo "       INTEGER, PUBLIC :: idt_scav_SO4_cs     = 0"
echo "       INTEGER, PUBLIC :: idt_scav_SO4_c      = 0"
echo "       INTEGER, PUBLIC :: idt_scav_SO4_j      = 0"
echo "       INTEGER, PUBLIC :: idt_scav_NH4_c      = 0"
echo "       INTEGER, PUBLIC :: idt_scav_NH4_j      = 0"
echo "       INTEGER, PUBLIC :: idt_scav_NO3_c      = 0"
echo "       INTEGER, PUBLIC :: idt_scav_NO3_j      = 0"
echo "       INTEGER, PUBLIC :: idt_scav_N_cs       = 0"
echo "       INTEGER, PUBLIC :: idt_scav_N_j        = 0"
echo ""
echo "       INTEGER, PUBLIC :: ierr"
echo ""
cat messy_scav_idt_mem.inc
echo ""
echo "       PUBLIC :: IN_KPP, OUT_KPP, AER2L, L2AERas, L2AERcs, L2GAS"
echo "       PUBLIC :: get_tracer_idt_scav, STR_KPP"
echo ""
echo "   CONTAINS"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE IN_KPP(pmx, d, ntrac)"
echo ""
echo "         IMPLICIT NONE"
echo "         INTEGER,  INTENT(IN) :: ntrac "
echo "         REAL(dp), INTENT(IN) :: pmx(0:ntrac)"
echo "         REAL(dp), INTENT(INOUT) :: d(0:nspec)"
echo ""
cat messy_scav_inkpp_e5.inc
echo ""
echo "     END SUBROUTINE IN_KPP"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE OUT_KPP(pmx, d, ntrac)"
echo ""
echo "         IMPLICIT NONE"
echo "         INTEGER,  INTENT(IN) :: ntrac "
echo "         REAL(dp), INTENT(INOUT) :: pmx(0:ntrac)"
echo "         REAL(dp), INTENT(IN)    :: d(0:nspec)"
echo ""
cat messy_scav_outkpp_e5.inc
echo ""
echo "     END SUBROUTINE OUT_KPP"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE STR_KPP(str_field_kpp)"
echo ""
echo "         IMPLICIT NONE"
echo ""
echo "         CHARACTER(LEN=*), INTENT(INOUT) :: str_field_kpp(nspec)"
echo ""
cat messy_scav_str_kpp.inc
echo ""
echo "     END SUBROUTINE STR_KPP"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE AER2L(aer_field, d, ntrac)"
echo ""
echo "         IMPLICIT NONE"
echo "         INTEGER,  INTENT(IN) :: ntrac "
echo "         REAL(dp), INTENT(INOUT) :: aer_field(0:ntrac), d(0:nspec)"
echo ""
cat messy_scav_aer2l_e5.inc
echo ""
echo "     END SUBROUTINE AER2L"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE L2AERcs(pmx, D, ntrac)"
echo ""
echo "         IMPLICIT NONE"
echo ""
echo "         INTRINSIC :: MIN"
echo "         INTEGER,  INTENT(IN) :: ntrac "
echo "         REAL(dp), INTENT(INOUT) :: pmx(0:ntrac), D(0:nspec)"
echo ""
cat messy_scav_l2aercs_e5.inc
echo ""
echo "     END SUBROUTINE L2AERcs"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE L2AERas(pmx, D, ntrac)"
echo ""
echo "         IMPLICIT NONE"
echo ""
echo "         INTRINSIC :: MIN"
echo "         INTEGER,  INTENT(IN) :: ntrac "
echo "         REAL(dp), INTENT(INOUT) :: pmx(0:ntrac), D(0:nspec)"
echo ""
cat messy_scav_l2aeras_e5.inc
echo ""
echo "     END SUBROUTINE L2AERas"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE L2GAS(pmx, input_field, ntrac)"
echo ""
echo "         IMPLICIT NONE"
echo ""
echo "         INTRINSIC :: MIN"
echo "         INTEGER,  INTENT(IN) :: ntrac "
echo "         REAL(dp), INTENT(INOUT) :: pmx(0:ntrac), input_field(0:nspec)"
echo ""
cat messy_scav_l2gas_e5.inc
echo ""
echo "     END SUBROUTINE L2GAS"
echo ""
echo "\!-------------------------------------------------------------------------"
echo "     SUBROUTINE get_tracer_idt_scav(GPTRSTR)"
echo ""
echo "     USE messy_scav_mem"
echo "     USE messy_main_tracer,        ONLY: get_tracer"
echo ""
echo "         IMPLICIT NONE"
echo ""
echo "         CHARACTER(LEN=*), INTENT(IN) :: GPTRSTR"
cat messy_scav_trac_e5.inc
echo ""
echo "\!sulfate tracer from M7 must be treated seperately, because it does "
echo "\!not appear in KPP as a separate species"
echo "      CALL get_tracer(ierr, GPTRSTR, 'SO4', subname ='cs',idx=idt_scav_SO4_cs) "
echo "      IF (ierr /=0.or..not. attr(1)%log_att(idt_scav_SO4_cs,lwetdep))        idt_scav_SO4_cs    = 0" 
echo "      CALL get_tracer(ierr, GPTRSTR, 'SO4', subname ='as',idx=idt_scav_SO4_as) "
echo "      IF (ierr /=0.or..not.  attr(1)%log_att(idt_scav_SO4_as,lwetdep))        idt_scav_SO4_as    = 0" 
echo "      ! for MADE"
echo "      CALL get_tracer(ierr, GPTRSTR, 'SO4', subname ='c',idx=idt_scav_SO4_c) "
echo "      IF (ierr /=0.or..not.  attr(1)%log_att(idt_scav_SO4_c,lwetdep))        idt_scav_SO4_c     = 0" 
echo "      CALL get_tracer(ierr, GPTRSTR, 'SO4', subname ='j',idx=idt_scav_SO4_j) "
echo "      IF (ierr /=0.or..not.  attr(1)%log_att(idt_scav_SO4_j,lwetdep))        idt_scav_SO4_j    = 0" 
echo "      CALL get_tracer(ierr, GPTRSTR, 'NO3', subname ='c',idx=idt_scav_NO3_c) "
echo "      IF (ierr /=0.or..not.  attr(1)%log_att(idt_scav_NO3_c,lwetdep))        idt_scav_NO3_c    = 0" 
echo "      CALL get_tracer(ierr, GPTRSTR, 'NO3', subname ='j',idx=idt_scav_NO3_j) "
echo "      IF (ierr /=0.or..not.  attr(1)%log_att(idt_scav_NO3_j,lwetdep))        idt_scav_NO3_j    = 0" 
echo "      CALL get_tracer(ierr, GPTRSTR, 'NH4', subname ='c',idx=idt_scav_NH4_c) "
echo "      IF (ierr /=0.or..not. attr(1)%log_att(idt_scav_NH4_c,lwetdep))        idt_scav_NH4_c    = 0" 
echo "      CALL get_tracer(ierr, GPTRSTR, 'NH4', subname ='j',idx=idt_scav_NH4_j) "
echo "      IF (ierr /=0.or..not. attr(1)%log_att(idt_scav_NH4_j,lwetdep))        idt_scav_NH4_j    = 0" 
echo ""
echo "      CALL get_tracer(ierr, GPTRSTR, 'N', subname ='cs',idx=idt_scav_n_cs) "
echo "      IF (ierr /=0.or..not. attr(1)%log_att(idt_scav_n_cs,lwetdep))        idt_scav_n_cs    = 0" 
echo "      ! for MADE"
echo "      CALL get_tracer(ierr, GPTRSTR, 'N', subname ='j',idx=idt_scav_n_j) "
echo "      IF (ierr /=0.or..not. attr(1)%log_att(idt_scav_n_j,lwetdep))        idt_scav_n_j    = 0" 
echo ""
echo "     END SUBROUTINE get_tracer_idt_scav"
echo ""
echo "\!-------------------------------------------------------------------------"
echo ""
echo "   END MODULE MESSY_SCAV_AUTO_INTER"

exit
