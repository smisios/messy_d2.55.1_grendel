# 1 "../modules/mo_memory_g3b.f90"
MODULE mo_memory_g3b

  USE mo_kind,        ONLY: dp
  USE mo_linked_list, ONLY: t_stream
  USE mo_memory_base, ONLY: delete_stream, add => add_stream_element, &
                            default_stream_setting,                   &
                            ABOVESUR2, ABOVESUR10, BELOWSUR, HYBRID_H,&
                            HYBRID

  IMPLICIT NONE
  SAVE   ! mz_jb_20030805
  PRIVATE

  PUBLIC :: construct_g3b ! routine to construct the g3b table
  PUBLIC :: destruct_g3b  ! routine to destruct  the g3b table
  PUBLIC :: g3b           ! the g3b table

! declaration of predefined fields within this module

  REAL(dp), POINTER, PUBLIC :: geosp(:,:)   ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: tsl(:,:)     ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: ws(:,:)      ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: wl(:,:)      ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: sn(:,:)      ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: slm(:,:)     ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: az0(:,:)     ! op_pj_20160617: ioinitial.f90
  REAL(dp), POINTER, PUBLIC :: alb(:,:)     ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: forest(:,:)  ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: vgrat(:,:)   ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: vlt(:,:)     ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: wsmx(:,:)    ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: fao(:,:)     ! op_pj_20160617: ioinitial.f90
  REAL(dp), POINTER, PUBLIC :: aps(:,:)     ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: aprl(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: aprc(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: aprs(:,:)    ! op_pj_20160617: d
# 41

  REAL(dp), POINTER, PUBLIC :: aclcov(:,:) ! op_pj_20160617: d
# 47

  REAL(dp), POINTER, PUBLIC :: u10(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: v10(:,:)    ! op_pj_20160617: d
# 61

  REAL(dp), POINTER, PUBLIC :: tslm(:,:)      ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: tslm1(:,:)     ! op_pj_20160617: d
# 67

  REAL(dp), POINTER, PUBLIC :: runoff(:,:)    ! op_pj_20160617: d
# 75

  REAL(dp), POINTER, PUBLIC :: seaice(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: siced(:,:)     ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: relhum(:,:,:)  ! op_pj_20160617: d
# 81

  REAL(dp), POINTER, PUBLIC :: glac(:,:)      ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: gld(:,:)       ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: aclc(:,:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: aclcac(:,:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: snmel(:,:)     ! op_pj_20160617: d
# 89

  REAL(dp), POINTER, PUBLIC :: apmegl(:,:)    ! op_pj_20160617: d
# 95

  REAL(dp), POINTER, PUBLIC :: topmax(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: aclcv(:,:)
  REAL(dp), POINTER, PUBLIC :: qvi(:,:)       ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: xlvi(:,:)      ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: xivi(:,:)      ! op_pj_20160617: d
# 103

  REAL(dp), POINTER, PUBLIC :: rgcgn(:,:)     ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: sodif(:,:)     ! op_pj_20160617: d
# 118

  REAL(dp), POINTER, PUBLIC :: xvar(:,:,:)   ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: xskew(:,:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: drain(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: grndcapc(:,:) ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: grndhflx(:,:) ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: grndflux(:,:) ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: tsoil(:,:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: grndc(:,:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: grndd(:,:,:)  ! op_pj_20160617: d
# 130

  REAL(dp), POINTER, PUBLIC :: acdnc(:,:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: snacl(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: rogl(:,:)     ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: alake(:,:)    ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: aprflux(:,:)  ! op_pj_20160617: d
# 138

  REAL(dp), POINTER, PUBLIC :: xtec(:,:,:)   ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: slf(:,:)      ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: snc(:,:)      ! op_pj_20160617: d
# 144

  REAL(dp), POINTER, PUBLIC :: rintop(:,:)   ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: apmeb(:,:)
  REAL(dp), POINTER, PUBLIC :: apmebco(:,:)
  REAL(dp), POINTER, PUBLIC :: qtnew(:,:)
# 155

!
!  variables for fractional surface coverage
!
  REAL(dp), POINTER, PUBLIC :: tsi(:,:)   ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: tsw(:,:)   ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: sni(:,:)   ! op_pj_20160617: d
# 178

  REAL(dp), POINTER, PUBLIC :: ahfice(:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: qres(:,:)    ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: ahfcon(:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: ahfres(:,:)  ! op_pj_20160617: d
  REAL(dp), POINTER, PUBLIC :: fluxres(:,:) ! op_pj_20160617: d
!
# 202

!
# 218

  REAL(dp), POINTER, PUBLIC :: ocu(:,:)
  REAL(dp), POINTER, PUBLIC :: ocv(:,:)
!
# 229

!
!  variables for sso parametrization
!
  REAL(dp), POINTER, PUBLIC :: oromea(:,:) ! op_pj_20160617: ioinitial.f90
  REAL(dp), POINTER, PUBLIC :: orostd(:,:) ! op_pj_20160617: ioinitial.f90 d
  REAL(dp), POINTER, PUBLIC :: orosig(:,:) ! op_pj_20160617: ioinitial.f90
  REAL(dp), POINTER, PUBLIC :: orogam(:,:) ! op_pj_20160617: ioinitial.f90
  REAL(dp), POINTER, PUBLIC :: orothe(:,:) ! op_pj_20160617: ioinitial.f90
  REAL(dp), POINTER, PUBLIC :: oropic(:,:) ! op_pj_20160617: ioinitial.f90
  REAL(dp), POINTER, PUBLIC :: oroval(:,:) ! op_pj_20160617: ioinitial.f90
!
# 254


! declaration of table with 2d- and 3d-field entries

  TYPE (t_stream), POINTER     :: g3b

CONTAINS

  SUBROUTINE construct_g3b

# 266

    USE mo_control,    ONLY: lmidatm


! set default attributes for the g3b stream

    CALL default_stream_setting (g3b               &
                                ,lrerun=.TRUE.     &
                                ,lpost=.TRUE.      &
                                ,table=128 ,bits=16)

! Add fields to the g3b stream.
! despite some 3-d fields (lpost=.FALSE.) these fields are written out by default

    CALL add (g3b,'qtnew',    qtnew    ,lpost=.FALSE.,contnorest=.true.)
# 299

    CALL add (g3b,'tsi',      tsi      ,code=102              ,longname='surface temperature of ice'             ,units='K'        )
    CALL add (g3b,'tsw',      tsw      ,code=103              ,longname='surface temperature of water'           ,units='K'        )
# 324

    CALL add (g3b,'ahfice',   ahfice   ,code=125              ,longname='conductive heat flux'                   ,units='W/m**2'   )
    CALL add (g3b,'qres',     qres     ,code=126              ,longname='residual heat flux for melting sea ice' ,units='W/m**2'   )
    CALL add (g3b,'alake',    alake    ,code=127,lpost=.FALSE.,longname='lake fraction of grid box'                                )
    CALL add (g3b,'rintop',   rintop   ,code=128,lpost=.FALSE.,longname='low level inversion      '                                )
    CALL add (g3b,'geosp',    geosp    ,code=129              ,longname='surface geopotential (orography)'       ,units='m**2/s**2')
!               stp                      130                         temperature                                     K
!                                        131                         u-velocity                                      m/s
!                                        132                         v-velocity                                      m/s
!                                        133                         specific humidity                               kg/kg
    CALL add (g3b,'aps',      aps      ,code=134              ,longname='surface pressure'                       ,units='Pa'       )
!                                        135                         vertical velocity                               Pa/s
    CALL add (g3b,'acdnc',    acdnc    ,code=136,lpost=.FALSE.,longname='cloud droplet number concentration'     ,units='1/m**3'   )
    CALL add (g3b,'apmeb',    apmeb    ,code=137,laccu=.TRUE. ,longname='vert.integr.tendencies of water',bits=24,units='kg/m**2s' )
!                         svo            138                         vorticity                                       1/s
    CALL add (g3b,'tslm1',    tslm1    ,code=139              ,longname='surface temperature of land'            ,units='K'        )
    CALL add (g3b,'ws',       ws       ,code=140              ,longname='soil wetness'                           ,units='m'        )
    CALL add (g3b,'sn',       sn       ,code=141              ,longname='snow depth'                             ,units='m'        )
    CALL add (g3b,'aprl',     aprl     ,code=142,laccu=.TRUE. ,longname='large scale precipitation'      ,bits=24,units='kg/m**2s' )
    CALL add (g3b,'aprc',     aprc     ,code=143,laccu=.TRUE. ,longname='convective  precipitation'      ,bits=24,units='kg/m**2s' )
    CALL add (g3b,'aprs',     aprs     ,code=144,laccu=.TRUE. ,longname='snow fall'                      ,bits=24,units='kg/m**2s' )
# 349

!                                        148                         streamfunction                                  m**2/s
!                                        149                         velocity potential                              m**2/s
    CALL add (g3b,'xivi',     xivi     ,code=150,laccu=.TRUE. ,longname='vertically integrated cloud ice'        ,units='kg/m**2'  )
!                                        151                         mean sea level pressure                         Pa
!                         stp(20)        152                         log surface pressure
!                         xl             153                         cloud water                                     kg/kg
!                         xi             154                         cloud ice                                       kg/kg
!                         sd             155                         divergence                                      1/s
!                                        156                         geopotential height                             gpm
    CALL add (g3b,'relhum',   relhum   ,code=157              ,longname='relative humidity'                   )
!                                        158                         tendency of surface pressure                    Pa/s
# 363

    CALL add (g3b,'runoff',  runoff    ,code=160,laccu=.TRUE. ,longname='surface runoff and drainage'    ,bits=24,units='kg/m**2s' )
    CALL add (g3b,'drain',   drain     ,code=161,laccu=.TRUE. ,longname='drainage'                       ,bits=24,units='kg/m**2s' )
    CALL add (g3b,'aclc',    aclc      ,code=162,lpost=.FALSE.,longname='cloud cover'                                              )
    CALL add (g3b,'aclcv',   aclcv     ,code=163,lpost=.FALSE.,longname='total cloud cover'                                        )
    CALL add (g3b,'aclcov',  aclcov    ,code=164,laccu=.TRUE. ,longname='total cloud cover'                                        )
    CALL add (g3b,'u10',     u10       ,code=165              ,longname='10m u-velocity'    ,units='m/s'      )
    CALL add (g3b,'v10',     v10       ,code=166              ,longname='10m v-velocity'    ,units='m/s'      )
# 375

! mz_jd_20180605+
!!$ CALL add (g3b,'xvar',    xvar      ,code=170,lpost=.FALSE.,longname='variance of total water amount qv+qi+ql',units='kg/kg'    )
    CALL add (g3b,'xvar',    xvar      ,code=170,lpost=.FALSE.,longname='proxy for standard deviation of total water amount qv+qi+ql',units='kg/kg'    )
! mz_jd_20180605-
# 382

    CALL add (g3b,'slm',     slm       ,code=172              ,longname='land sea mask (1. = land, 0. = sea/lakes)'                )
    CALL add (g3b,'az0',     az0       ,code=173,lpost=.FALSE.,longname='roughness length'                       ,units='m'        )
    CALL add (g3b,'alb',     alb       ,code=174,lpost=.FALSE.,longname='surface background albedo'                                )
# 395

! mz_jd_20180605+
!!$ CALL add (g3b,'xskew',   xskew     ,code=183,lpost=.FALSE.,longname='skewness of total water amount qv+qi+ql'                  )
    CALL add (g3b,'xskew',   xskew     ,code=183,lpost=.FALSE.,longname='beta distribution parameter q'                            )
! mz_jd_20180605-
# 410

    CALL add (g3b,'wl',      wl        ,code=193              ,longname='skin reservoir content'                 ,units='m'        )
    CALL add (g3b,'slf',     slf       ,code=194,lpost=.FALSE.,longname='sea land fraction'                                        )
# 417

    CALL add (g3b,'vgrat',   vgrat     ,code=198,lpost=.FALSE.,longname='vegetation ratio'                                         )
    CALL add (g3b,'orostd',  orostd    ,code=199,lpost=.FALSE.,longname='orographic standard deviation'          ,units='m'        )
    CALL add (g3b,'vlt',     vlt       ,code=200,lpost=.FALSE.,longname='leaf area index'                                          )
# 427

    CALL add (g3b,'grndflux',grndflux  ,code=206,laccu=.TRUE. ,longname='surface ground heat flux'               ,units='W/m**2'   )
    CALL add (g3b,'tsoil',   tsoil     ,code=207              ,longname='deep soil temperatures',leveltype=BELOWSUR,units='K'      )
    CALL add (g3b,'ahfcon',  ahfcon    ,code=208,laccu=.TRUE. ,longname='conductive heat flux through ice'       ,units='W/m**2'   )
    CALL add (g3b,'ahfres',  ahfres    ,code=209,laccu=.TRUE. ,longname='melting of ice'                         ,units='W/m**2'   )
    CALL add (g3b,'seaice',  seaice    ,code=210              ,longname='ice cover (fraction of 1-SLM)'                            )
    CALL add (g3b,'siced',   siced     ,code=211              ,longname='ice depth'                              ,units='m'        )
    CALL add (g3b,'forest',  forest    ,code=212,lpost=.FALSE.,longname='forest fraction'                                          )
    CALL add (g3b,'gld',     gld       ,code=213              ,longname='glacier depth'                          ,units='m'        )
    CALL add (g3b,'sni',     sni       ,code=214              ,longname='water equivalent of snow on ice'        ,units='m'        )
    CALL add (g3b,'rogl',    rogl      ,code=215,laccu=.TRUE.,lpost=.FALSE. ,longname='glacier runoff'           ,units='kg/m**2s' )
# 440

    CALL add (g3b,'topmax',  topmax    ,code=217,reset=99999.0_dp ,longname='maximum height of convective cloud tops',units='Pa'   )
    CALL add (g3b,'snmel',   snmel     ,code=218,laccu=.TRUE. ,longname='snow melt'                              ,units='kg/m**2s' )
# 447

    CALL add (g3b,'apmegl',  apmegl    ,code=221,laccu=.TRUE. ,longname='P-E over land ice'              ,bits=24,units='kg/m**2s' )
    CALL add (g3b,'snacl',   snacl     ,code=222,laccu=.TRUE. ,longname='snow accumulation over land'            ,units='kg/m**2s' )
    CALL add (g3b,'aclcac',  aclcac    ,code=223,laccu=.TRUE. ,longname='cloud cover'                                              )
# 454

    CALL add (g3b,'fao',     fao       ,code=226,lpost=.false.,longname='FAO data set (soil data flags 0...5.)'                    )
    CALL add (g3b,'rgcgn',   rgcgn     ,code=227,lpost=.false.,longname='volumetric heat capacity of soil and land ice'            &
                                                                                                                ,units='J/(m**3*K)')
    CALL add (g3b,'sodif',   sodif     ,code=228,lpost=.false.,longname='diffusivity  of soil and land ice'      ,units='m**2/s'   )
    CALL add (g3b,'wsmx',    wsmx      ,code=229              ,longname='field capacity of soil'                 ,units='m'        )
    CALL add (g3b,'qvi',     qvi       ,code=230,laccu=.TRUE. ,longname='vertically integrated water vapor'      ,units='kg/m**2'  )
    CALL add (g3b,'xlvi',    xlvi      ,code=231,laccu=.TRUE. ,longname='vertically integrated cloud water'      ,units='kg/m**2'  )
    CALL add (g3b,'glac',    glac      ,code=232              ,longname='fraction of land covered by glaciers'                     )
    CALL add (g3b,'snc',     snc       ,code=233              ,longname='snow depth at the canopy'               ,units='m'        )
# 466

! op_pj_20160613+
!!$    ! mz_ho_20160412+
!!$#ifdef 1
!!$    CALL add (g3b,'az0hi',    az0hi    ,code=238              ,longname='roughness length for heat over ice'     ,units='m'        )
!!$    CALL add (g3b,'az0hw',    az0hw    ,code=239              ,longname='roughness length for heat over water'   ,units='m'        )
!!$    CALL add (g3b,'az0hl',    az0hl    ,code=240              ,longname='roughness length for heat over land'    ,units='m'        )
!!$#endif
!!$    ! mz_ho_20160412-
! op_pj_20160613-
!                                        259                         windspeed (sqrt(u**2+v**2))
!                                        260                         total precipitation (142+143)
!                                        261                         total top radiation (178+179)
!                                        262                         total surface radiation (176+177)
!                                        263                         net surface heat flux
!                                                                    (146+147+176+177-C*218-208*fice-209); C=3.345E5*fland
!                                        264                         total surface water (142+143+182-160-221)

! Add fields not written to the output stream

    CALL add (g3b,'tsl',     tsl     ,lpost=.FALSE.)
    CALL add (g3b,'tslm',    tslm    ,lpost=.FALSE.)
# 496

    CALL add (g3b,'grndcapc',grndcapc,lpost=.FALSE.)
    CALL add (g3b,'grndhflx',grndhflx,lpost=.FALSE.)
    CALL add (g3b,'grndc',   grndc   ,lpost=.FALSE. ,leveltype=BELOWSUR)
    CALL add (g3b,'grndd',   grndd   ,lpost=.FALSE. ,leveltype=BELOWSUR)
# 503

    CALL add (g3b,'xtec',    xtec    ,lpost=.FALSE.)
!
! variables for middle atmosphere only
!
    IF (lmidatm) &
      CALL add (g3b,'aprflux',  aprflux ,lpost=.FALSE.)
!
!  variables for fractional surface coverage
!
# 517

    CALL add (g3b,'fluxres',  fluxres  ,lpost=.FALSE.)
!
!  variables for mixed layer ocean only
!
# 526

!
!  variables for ocean coupling only
!
    CALL add (g3b,'apmebco',  apmebco  ,lpost=.FALSE.,contnorest=.true.)
!
# 546

    CALL add (g3b,'ocu',  ocu    ,code= 83,                                             & ! 0 if MPIOM is not used
         longname='ocean eastw. velocity',bits=24,units='m/s',contnorest=.true. )
    CALL add (g3b,'ocv',  ocv    ,code= 84,                                             & ! 0 if MPIOM is not used
         longname='ocean northw. velocity',bits=24,units='m/s',contnorest=.true. )
!
!  variables for 200mb radiation
!
# 559

!
!  variables for coupling with HD-model only
!
# 573

!
!  variables for sso parametrization
!
    CALL add (g3b,'oromea', oromea,lpost=.FALSE.)
    CALL add (g3b,'orosig', orosig,lpost=.FALSE.)
    CALL add (g3b,'orogam', orogam,lpost=.FALSE.)
    CALL add (g3b,'orothe', orothe,lpost=.FALSE.)
    CALL add (g3b,'oropic', oropic,lpost=.FALSE.)
    CALL add (g3b,'oroval', oroval,lpost=.FALSE.)

  END SUBROUTINE construct_g3b

  SUBROUTINE destruct_g3b

    CALL delete_stream (g3b)

  END SUBROUTINE destruct_g3b

END MODULE mo_memory_g3b
