# 1 "../../messy/smil/messy_mmd2way_child_si.f90"
# 1 "../../messy/bmil/messy_main_ppd_bi.inc" 1 
! -*- f90 -*-
# 11


! ----------------------------------------------------------------------
! SETTINGS FOR VARIOUS BASEMODELS
! ----------------------------------------------------------------------
! SO FAR FOR ALL MESSy BASEMODES




! ORDER: h,v,[n],h (TRRANK=3)  OR h,v,h,[n] (TRRANK=4)




! ORDER: h,h,[n],v (TRRANK=3)  OR h,h,v,[n] (TRRANK=4)
# 29


# 33




! ----------------------------------------------------------------------
! GENERIC SETTINGS
! ----------------------------------------------------------------------

! ----------------------------------------------------------------------
! ORDER: h,v,[n],h OR h,v,h,[n]

! ----------------------------------------------------------------------

! op_pj_20170228: macros required for TTRANK=3 (messy_main_tracer)













! classical RI to pass one `jrow` to SMCL:





! only ONEMIS, BIOBURN, GMXE, VEG:






! op_pj_20170228: macros required for TTRANK=4 (messy_main_tracer)
# 97

!
! ----------------------------------------------------------------------

! ----------------------------------------------------------------------

! ----------------------------------------------------------------------
! ORDER: h,h,[n],v OR h,h,v,[n]
# 160

! ----------------------------------------------------------------------
# 2 "../../messy/smil/messy_mmd2way_child_si.f90" 2 

! **************************************************************************
MODULE messy_mmd2way_child_si
! **************************************************************************




# 20


# 12009


  IMPLICIT NONE
  PRIVATE

  INTERFACE mmd2way_child_setup
    MODULE PROCEDURE mmd2way_child_setup
  END INTERFACE mmd2way_child_setup

  INTERFACE mmd2way_child_init_memory
    MODULE PROCEDURE mmd2way_child_init_memory
  END INTERFACE mmd2way_child_init_memory

  INTERFACE mmd2way_child_init_loop
    MODULE PROCEDURE mmd2way_child_init_loop
  END INTERFACE mmd2way_child_init_loop

  INTERFACE mmd2way_child_global_end
    MODULE PROCEDURE mmd2way_child_global_end
  END INTERFACE mmd2way_child_global_end

  INTERFACE mmd2way_child_write_output
    MODULE PROCEDURE mmd2way_child_write_output
  END INTERFACE mmd2way_child_write_output

  INTERFACE mmd2way_child_write_restart
    MODULE PROCEDURE mmd2way_child_write_restart
  END INTERFACE mmd2way_child_write_restart

  INTERFACE mmd2way_child_read_restart
    MODULE PROCEDURE mmd2way_child_read_restart
  END INTERFACE mmd2way_child_read_restart

  INTERFACE mmd2way_child_free_memory
    MODULE PROCEDURE mmd2way_child_free_memory
  END INTERFACE mmd2way_child_free_memory

  PUBLIC :: mmd2way_child_setup
  PUBLIC :: mmd2way_child_init_memory
  PUBLIC :: mmd2way_child_init_loop
  PUBLIC :: mmd2way_child_global_end
  PUBLIC :: mmd2way_child_write_output
  PUBLIC :: mmd2way_child_write_restart
  PUBLIC :: mmd2way_child_read_restart
  PUBLIC :: mmd2way_child_free_memory


CONTAINS

  SUBROUTINE mmd2way_child_setup
  END SUBROUTINE mmd2way_child_setup

  SUBROUTINE mmd2way_child_init_memory
  END SUBROUTINE mmd2way_child_init_memory

  SUBROUTINE mmd2way_child_init_loop
  END SUBROUTINE mmd2way_child_init_loop

  SUBROUTINE  mmd2way_child_global_end
  END  SUBROUTINE mmd2way_child_global_end

  SUBROUTINE  mmd2way_child_write_output(flag)

    IMPLICIT NONE

    INTEGER, INTENT(IN) :: flag

    IF (flag == 0) RETURN

  END  SUBROUTINE mmd2way_child_write_output

  SUBROUTINE  mmd2way_child_write_restart(flag)

    IMPLICIT NONE

    INTEGER, INTENT(IN) :: flag

    IF (flag == 0) RETURN

  END  SUBROUTINE mmd2way_child_write_restart

  SUBROUTINE  mmd2way_child_read_restart(flag)

    IMPLICIT NONE

    INTEGER, INTENT(IN) :: flag

    IF (flag == 0) RETURN

  END  SUBROUTINE mmd2way_child_read_restart

  SUBROUTINE mmd2way_child_free_memory
  END SUBROUTINE mmd2way_child_free_memory



END MODULE messy_mmd2way_child_si
