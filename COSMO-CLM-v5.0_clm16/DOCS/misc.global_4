
---------------------------------------------------------------------------------------------

4.30:  ( = 5.0)                                                 08.11.2013
=====

Problems when reading boundary files with bitmaps:
--------------------------------------------------


Because of the usage of the array ipds (for GRIB1 meta data for product definition section)
in src_input and in src_output, a problem occured when running with boundary data defined on
frames using a bitmap. After reading such boundary data, the bitmap-flag in ipds was set and
never cleared. Therefore, all output data also had the bitmap-flag set without defining the 
bitmap-section.

Solution: Introduction of two different arrays ipds_in for input and ipds_out for output
(routines affected: data_io.f90 io_metadata.f90 src_input.f90 src_output.f90 src_sfcana.f90)


New GRIB2 level types for FLake variables:
------------------------------------------

In GRIB1, all FLake variables were coded with the level type "surface", which (of course) 
is not correct. Therefore, new leveltypes have been introduced for GRIB2, which are now
officially accepted at WMO and are included in GRIB2, Version 11. The new level types are
described in Code Table 4.5 and are listed below:

  No. Name                                                      Unit

  160 Depth below sea level                                       m         
  161 Depth below water surface                                   m
  162 Lake or river bottom                                        -
  163 Bottom of sediment layer                                    -
  164 Bottom of thermally active sediment layer                   -
  165 Bottom of sediment layer penetrated by thermal wave         -
  166 Mixing layer                                                -


Because most FLake variables are valid for a layer in the lake, the typeOfFirstFixedSurface
and the typeOfSecondFixedSurface are set different. In grib_api there are additional values 
for the coded key typeOfLevel (which is derived from the two keys typeOfFirstFixedSurface and
typeOfSecondFixedSurface). The settings for the FLake variables are given below:

  FLake       grib_api               typeOfFirstFixedSurface     typeOfSecondFixedSurface
  variable   typeOfLevel

  DEPTH_LK    entireLake                       1                         162
  T_MNW_LK    entireLake                       1                         162
  GAMSO_LK    entireLake                       1                         162

  FETCH_LK    surface                          1                           1

  T_WML_LK    mixedLayer                       1                         166
  H_ML_LK     mixedLayer                       1                         166

  C_T_LK      thermocline                    166                         162

  T_BOT_LK    lakeBottom                     162                         255

  DP_BS_LK    sedimentLayerTA                162                         164
   H_B1_LK    sedimentLayerTW                162                         165
   T_BL_LK    sedimentBottomTA               164                         255
   T_B1_LK    sedimentBottomTW               165                         255


Consequences for the COSMO-Model:
The check for typeOfLevel has been omitted now in the COSMO-Model. Using grib_api this is 
implicitly done by checking the shortname (as long as there are not several variables with 
the same GRIB2 triple but different typeOfLevels). Also, for output the typeOfLevel need not
be set, because it is again implicitly set by setting the shortName.





Initialization of prognostic rain, if no rain data are read from initial files:
-------------------------------------------------------------------------------

In Version 4.23 the option to run without prognostic precipitation was removed.
At the same time, initialization of rain and snow was moved from the first time step to the
initialization phase of the physics. But at this stage the variable dt2 (=2*dt) was not set.
This has been added now in organize_physics.f90.


Technical Changes:
------------------

- environment.f90:
  Corrected usage of uninitialized variable yzerrmsg in subroutine exchg_boundaries.

- io_utilities.f90:
  Corrected usage of uninitialized variable yzhead in subroutine write_ready_final.
  Modified check for pv_in in SR check_input_grid: only check vertical
     coordinate parameters

- lmorg.f90:
  Changed the use of datatypes to FALSE in exchange_leapfrog for the atmospheric mass 
  variables, because there were problems on the IBM (no problems on other machines reported).
  Some technical changes for COSMOART and POLLEN

- organize_data.f90:
  Increased num_gribtabs to 12 to add table 245 for dust modelling

- numeric_utilities.f90:
  Removed old CRAY compiler directives, which are not recognized any more.

- src_advection_rk.f90:
  Initialized izerror in subroutines horiz_adv_driver and implicit_sedim
  Changed INTENT attribute of phi_new in SR implicit_sedim to INOUT, because otherwise 
  it is used before it is defined!

- src_artifdata.f90:
  Initialized izerror before using in several subroutines.

- src_input.f90:
  Initialized pv_in also for pure GRIB2 I/O
  Initialized refatm%refatm_id also for binary output during restarts

- src_leapfrog.f90:
  Added missing argument kflat to calls to fast_waves and semi_implicit

- src_lheat_nudge.f90:
  Modifications to read all input data also in GRIB2.

- src_nudging.f90:
  Bug fix, to avoid using de-allocated array 'ztcorr' if ntpscor=1. 

- src_obs_rad.f90:
  Changed INTENT attribute of variable nlev to INOUT in subroutine prepare_rttov_input
  Changed INTENT attribute of variable comm to INOUT in subroutine p_bcast_rad_set


Ulrich Schaettler

---------------------------------------------------------------------------------------------

4.29:                                                           02.10.2013
=====

Unification of COSMO and MESSy Tracer Structure:
------------------------------------------------

To avoid too many ifdefs in the computational modules and subroutines, the COSMO and the 
MESSy tracer structure have been adapted. Now many ifdefs are in the COSMO tracer source
files, but could be avoided in the computational routines.

- MESSY and data assimilation / digital filter initialization:
  Moreover, the MESSY ifdefs have been eliminated in the data assimilation and the 
  digital filtering initialization. These components cannot be used, if the model is 
  compiled for MESSY.

- MESSY and long term storage
  Some fields from the soil model and the synthetic satellite images have been put 
  to the long term storage instead of being local storage. This also allows easier 
  coupling to external modules

  soil model:  
     global name | former local name | meaning
      fr_snow        zf_snow            surface fraction covered by snow
      fr_wi          zf_wi              surface fraction covered by interception water
      ustar_fv        ---               friction velocity

  synthetic satellite images: synme7, synmsg
      
- Allocation of tkvm, tkvh, tkhm, tkhh
  These fields have now been allocated from 1:ke1 in the vertical 
  (instead of 2:ke1 before), to avoid different treatment of such fields


Added field W_SO to list of fields for possible external analysis:
------------------------------------------------------------------

W_SO has been added to the list of fields for which it can be chosen, whether they are
taken from the assimilation cycle (with tri=13) or from external analysis or other external
programs (tri=0). The reason is to introduce some perturbations for W_SO for the 
ensembles. A new namelist switch lan_w_so has been introduced in the group /GRIBIN/ for
choosing the correct field (similar to lan_t_so0, etc.)

New Namelist variable:    lan_w_so           Default:    .FALSE.

Explanation: (similar to lan_t_so0, etc:)
  If lan_w_so = .TRUE.:  take a field which comes from an external program: 
                         this could be an external analyses or the INT2LM
                         This field then has time range indicator (itri) 0 
                         (or at least a value /= 13)

                         In this case also the additional element number of the input field
                         is checked, whether it corresponds to the one specified by the 
                         namelist variable nsma_stat
                         (used for soil moisture analysis).

  If lan_w_so = .FALSE.: take a field which comes from the Nudging cycle (and has tri=13).


The consequence is, that all applications starting from interpolated analysis data,
which are coming from the INT2LM, have to adapt their settings:

Settings, if W_SO shall be taken from INT2LM:              lan_w_so = .TRUE.

Settings, if W_SO shall be taken from the Nudging Cycle:   lan_w_so = .FALSE.


Using of Namelist variable: l_ke_in_gds
---------------------------------------

The default for this namelist variable has been changed to:  .TRUE.
Therefore all GRIB1 vertical coordinate parameters are now coded in the new way:

  pv( 1)       = ivctype
  pv( 2)       = ke
  pv( 3)       = p0sl
  pv( 4)       = t0sl
  pv( 5)       = dt0lp
  pv( 6)       = vcflat
  pv( 7:6+ke1) = vcoords(1:ke1)

  more parameters depending on type of reference atmosphere, vertical coordinate type.

If this should not be done, l_ke_in_gds has to be set to .FALSE. explicitely.



Using of names: vcoord, refatm:
-------------------------------

In version 4.28, new types were used to hold all vertical coordinate parameters and also
parameters of the reference atmosphere. While names with suffixes _in and _out were used 
then in INT2LM and also in the COSMO-Model, it was decided to use _in in the INT2LM for 
the incoming fields from coarse grid models and the names without suffix for the 
corresponding variables of the COSMO grid and also throughout the whole COSMO-model.


Bug Fixes and Technical Changes:
--------------------------------

 - data_io.f90:
   Introduced new parameter clen, to specify length of shortnames

 - fast_waves_sc.f90:
   Initialize izerror in all subroutines
   
 - io_metadata.f90:
   SR make_grib_product: move block to set productDefinitionTemplateNumber
   downwards to properly code the ensembles in GRIB2
   GRIB2: Adaptations to write endStep correct for quarterly output
     and also set stepUnits for nunit_of_time=0 (Minutes in GRIB2)
   Correct transformation from old to new style of coding GRIB1 gds (UB)

 - io_utilities.f90:
   SR check_input_grid: Before decoding vertical coordinate parameters with REFSTF,
   check the value of the corresponding gds-entry, because some were not really coded

 - lmorg.f90:
   Moved call to trcr_alloc at the end of the allocation block
   Added some missing initializations for leapfrog integration for lartif_data and
    2-moment-scheme (UB)

 - organize_assimilation.f90:
   Corrected a "!defined" statement for GRIBDWD/GRIBAPI
   (replaced "||" by correct "&&")

 - organize_data.f90:
   Allocate pv_in only in case of real data input (not for lartif_data)
   Check that value for ke_tot is less than khmax - 20
   Convert Grib1-unitOfTimeRange to Grib2-value, if necessary (US)

 - src_advection_rk.f90:
   Insufficient loop index borders for calculating TKE transport velocities
   in advection_ef_x and advection_ef_y corrected (UB)

 - src_allocation.f90:
   Added some missing lalloc_t_s_bd=.true.

 - src_artifdata.f90:
   Corrections for proper use of the new vertical coordinate and reference
    atmospheres data types
   Fixed computation of seed(i) in function seed_random_number(), because
    the old method lead to a floating point exception with the gfortran compiler
   Initialization of t_so, w_so, t_snow_mult, t_snow now only for land points
    (SR init_tw_soil_snow_c()).
   New namelist parameter t_surf_c for baseline initialization of surface 
    temperature t_s.

 - src_input.f90:
   Corrections for NetCDF: 
    - put vertical coordinate parameters to pv_in for later use in the model
    - allocate zvc_params in SR read_nc_gdefs in all tasks
   Corrections for GRIB (setting .not. l_ke_in_gds):
    - compute the correct value of ivctype in SR get_vertcoord
    - if GRIB1 data are read and GRIB2 data written, a HHL-file need not be read
   Bug fix when running with more tasks than GRIB records in input file:
    - not all tasks called the global communication then 

 - src_lheat_nudge.f90:
   Error and EOF check in lhn_obs_read after calling subroutine cuegin: 
   if EOF (ilen=0), then do not check the error code
      (otherwise it could go in an endless CYCLE loop).

 - src_output.f90:
   Corrected placement of ifdef GRIBAPI for gribinit_loop
   Added check for upper bound of zlev resp. plev in z_int() and p_int() (UB)

 - src_runge_kutta.f90:
   Call to finalize_runge_kutta only for l2tls
   (otherwise it could crash during Leapfrog-runs)

 - src_slow_tendencies_rk.f90:
   (Ulrich Blahak)
   Bugfixes in explicit_horizontal_diffusion (3D-Turbulence):
    - some loop index bounds were too small by 1 gridpoint
    - corrected wrong metrical term in ztaud23
    (This will change results only if l3dturb=.TRUE. and l3dturb_metr=.TRUE.)

 - src_soil_multlay.f90:
   (Ekaterina Machulskaya)
   Bug fixes for the multi-layer snow model (does not change operational configurations)

 - src_turbulence.f90:
   (Ulrich Blahak)
   Bugfixes in subroutine prankolmo_rk: 
   (for itype_turb = 5..8; does not change operational configurations)
   - zlen has to be a 3D field instead of a scalar
     because it is carried from one loop to a subsequent loop.
   - zsgesh and zsgesv are already the horizontal and vertical
     components of the squared deformation. Therefore remove
     the square operator from calculations of ztpm and ztpm_v.
 
 - src_obs_cdfout_feedobs.f90, src_obs_print_vof.f90, src_sing_local.f90:
   Bug fix for allocation/deallocation of some arrays (ssgbdy, etc): 
     The Allocation has been made unconditional


Changes in Namelist Input:
--------------------------

Group /IOCTL/:
  => changed default of variable l_ke_in_gds to .TRUE.:
     therefore the GDS structure of GRIB1 files is modified. For the vertical 
     coordinate parameter section there now are 
      - 6 parameters specifying 
           + the vertical coordinate type    (ivctype)
           + the number of vertical levels   (ke)
           + reference atmosphere parameters (p0sl, t0sl, dt0lp)
           + the height where vertical levels get flat (vcflat)
      - the vertical coordinate parameters
      - evtl. additional reference atmosphere or vertical grid parameters
        
     Setting l_ke_in_gds=.FALSE. gives the old style of coding the vertical coordinate
     parameters

Group /GRIBIN/:
  => added switch lan_w_so to choose soil moisture fields from INT2LM or from external
     programs (Default: .FALSE.)

Changes of Results:
-------------------

Most changes are pure technical. Results of operational applications are not changed.


Ulrich Schaettler

---------------------------------------------------------------------------------------------

4.28_1:                                                         17.07.2013
=======

Adaptations for artificial data:
--------------------------------
(by Uli Blahak)

The new data types for the vertical coordinate and reference atmosphere parameters were
not set correct in case of artificial data. In addition, there have been some adaptations
in organize_data.f90 and src_output.f90.


Bugfix in src_slow_tendencies_rk.f90, Option l3dturb:
-----------------------------------------------------
(by Uli Blahak)

Bugfixes in explicit_horizontal_diffusion (3D-Turbulence):
  - some loop index bounds were too small by 1 gridpoint
  - corrected wrong metrical term in ztaud23

---------------------------------------------------------------------------------------------

4.28:                                                           12.07.2013
=====


Implementation of GRIB2 (with grib_api)
=======================================
(by Uli Schaettler)

This version of the COSMO-Model now is able to write GRIB2 data with the grib_api from 
ECMWF. Note that at least version 1.11.0 from grib_api is necessary to compile the
COSMO-Model with grib_api, because of the use of the new generalVertical coordinate.

The usage of GRIB2, the new general vertical coordinate (and most important 
the local use sections of GRIB2) will be documented on the COSMO-Web Page:

 http://www.cosmo-model.org/content/model/documentation/grib/default.htm

This page is still under construction. We hope to extend it until end of 
July 2013 significantly.


Basic changes to implement grib_api:
------------------------------------

The basic changes have been in the modules:

 - io_utilities: 
     extended open_file, close_file with corresponding grib_api routines
     new subroutines read_gribapi, write_gribapi
     get meta data with grib_api-routines

 - mpe_io2:
     extended with grib_api interface routines for reading and writing 
     GRIB data

 - src_input:
     get meta data with grib_api routines

 - src_lheat_nudge:
     implemented grib_api interfaces to read radar data
   NOTE: up to now the radar data can only be read in GRIB1!

 - NEW MODULE: io_metadata.f90
    to set most GRIB metadata 

 - src_output:
    call routines from io_metadata to set meta data with grib_api routines

 - src_sfcana:
     implemented grib_api interfaces to write surface analysis fields
     (use structures from usual output to write such grib files)

 - NEW MODULE: vgrid_refatm_utils.f90
     this is not really related to GRIB, but to get a consistent treatment of
     all vertical coordinate and reference atmosphere parameters.


Implemented new GRIB2 leveltype "generalVertical" and "generalVerticalLayer"
----------------------------------------------------------------------------

The main difference to the other vertical coordinate types  'hybrid' and
'hybridLayer' is, that now there is no computational algorithm how the 
vertical layers are constructed, but a full 3D file (called a HHL-file for the
height of half levels in COSMO) is provided, that has to be processed together
with other 3D variables defined on these levels. 

With this new vertical level type, also some new keys were introduced for 
the WMO GRIB2 standard, namely:

  => nlev   (alias for numberOfVerticalCoordinateValues) 
     ! nlev is ke+1 in COSMO, because the number of half levels are specified here

  => numberOfVGridUsed 
     ! represents the vertical coordinate type ivctype

  => uuidOfVGrid 
     ! is a unique identifier for a special HHL-file

These keys replace the vertical coordinate parameters, which are present in 
data with level types 'hybrid' or 'hybridLayer'.

HHL-files can only be created by the INT2LM, not by the COSMO-Model.

The new general vertical coordinate and its usage in the COSMO-Model system will
be documented and explained in detail on the COSMO web page: cosmo-model.org
(coming soon!)


There were some changes to the COSMO-Model to implement the new vertical coordinate:

- Introduced a new module vgrid_refatm_utils.f90, which contains data structures,
  variables and routines necessary for dealing with the vertical grid and the
  reference atmosphere.

    new data structures:  
       => refatm_type:  which contains variables for the reference atmosphere
       => vcoord_type:  which contains variables for the vertical grid
  
  This module now also contains data and routines, which have been in other
  modules before:
    - routines to compute the different reference atmospheres
       (from meteo_utilities)

    - data for the vertical coordinate parameters
       (from data_grid_lm and data_grid_in, resp.)

  The module vgrid_refatm_utils also contains subroutines to create a UUID and 
  to compare different UUIDs.


- Implemented possibility to read HHL from an extra file with full precision
  (but only when reading or writing GRIB2)
  For that, 2 new Namelist switches have been implemented in group /GRIBIN/:

       => ydirhhl: directory which contains the HHL-file
       => ynamhhl: file name for the HHL-file 

  If a HHL-file has to be read, the readloop in src_input is invoked again after
  reading the laf-file, to also read the HHL-file.


Transferring the vertical coordinate and reference atmosphere parameters
------------------------------------------------------------------------

In GRIB1 (and NetCDF) the vertical coordinate and reference atmosphere parameters
are transferred from INT2LM to the COSMO-Model (or from COSMO-Nudging to COSMO-forecast)
via the meta data. This is no more possible in GRIB2 because of the new general vertical
coordinate. But these informations, which are set in the INT2LM, are still needed in 
the COSMO-Model to compute the proper reference state for the model.

In order to provide the correct information in both programs, a few sets of default 
parameters have been implemented in the new module vgrid_refatm_utils.f90.
These sets are numbered consecutively and the corresponding number of a special set
is written into the localDefinitionNumber of the fields P or PP for 
reference atmosphere sets and in HHL for the vertical coordinate parameters.
In this way, the different programs can determine the correct set of parameters when
processing the corresponding variables.

Defining a new set of parameters for either the reference atmosphere or for the
vertical coordinate parameters therefore is now more complicated, because it requires
to change the source code of the programs. But this is only a first implementation to
start the tests with GRIB2. We can think of a better solution for that problem soon.

Up to now only few set of parameters are implemented. We will extend these sets in
the near future with all important settings that are in use.


Some more organizational data structures:
-----------------------------------------

Introduced arrays to convert some GRIB1 codings to grib_api strings
 - GRIB1 level types:                 ylevltypes_in, ylevltypes_out
 - GRIB1 time range indicators:       ysteptypes
 - GRIB2 scaleFactors / scaledValues: scalefactors


Bug Fixes in src_runge_kutta.f90:
=================================
(by Michael Baldauf)

1.) Use of time level nnow (instead of nnew) for the moisture variables in the 
    water loading contribution of the buoyancy.

In the Runge-Kutta scheme, 'nnew' for the moisture variables actually means 
the 'old' time level. Therefore, using 'nnow' leads to a better coupling of 
the dynamics to the moisture physics (concerning this water loading contribution).

This correction has the potential to improve the precipitation forecast in strongly
convective situations.

This measure  is a bug fix and will change the results if  itype_fast_waves=2 is used.
 

2.) Exchange of wadvt in the case ldyn_bbc=.TRUE.:
This bug fix guarantees reproducibility for different processor configurations
in the case   itype_fast_waves=2 and  ldyn_bbc=.TRUE. . In this case, results are changed.


 

Revision of the nudging code and extension of
quality control (QC) for surface pressure observations
======================================================
(by Christoph Schraff)

- New option for quality control (QC) of surface pressure observations against
  the fields that provide the lateral boundary conditions ('LBC-QC').
  This includes a threshold QC for each individual pressure observation as well
  as a spatial consistency check.

- New option to read observations from NetCDF feedobs (or feedback) files
  ('fof' files).
  As an option, the simulated observations from the feedobs files can be
  deployed as observation values, so that they may serve in an OSSE setup as
  synthetic observations derived from a nature run.
  As an additional option, the (simulated or original) observations can be
  randomly perturbed.
  Observations can be read both from ('cdfin') NetCDF observation input files
  and from 'fof' files in the same model run.

- More relaxed conditions on variable (names) required to exist in ('cdfin')
  NetCDF observation input files (in order to better cope with historic cases);
  the relaxed conditions relate to:
  - variable name for station ID;
  - variable names for main observables in single-level reports;
  - variable name(s) for vertical coordinate in aircraft reports;
  - variable for roll angle in aircraft reports.

- Restructuring of the code so as to have one module for the observation
  operators ('src_obs_operator_conv.f90') and another one for the threshold
  quality control ('src_obs_qc_conv.f90') for conventional in-situ and profiling
  data.
  Both modules and its routines have clean interfaces which consist only of
  subroutine arguments and of fortran parameters (plus station ID) from a
  limited set of data modules that can easily be used by other programs.
  This allows these two modulues to be shared now with the 3DVAR-LETKF package
  of DWD.
  Note that the spatial consistency checks (for surface pressure and integrated
  water vapour) are not part of the QC module and hence the shared code.
  In the new version, the observation operators and the QC (which are both used
  for the nudging, verification, and LETKF), and the computation of other local
  information used purely for the nudging, are much more disentangled.

- bit reproducibility irrespective of the domain decomposition re-established,
  due to a correction of a minor bug introduced in V4_22 at the reduction of the
  geostrophic wind increments depending on the geographic latitude.

- other minor bug fixes, e.g.:
  - QC threshold for passive humidity obs from upper-air single-level reports
    corrected (before, they were zero when using the operational settings);
  - correction of a bug because of which pressure increments derived from
    multi-level reports and flagged passive in the individual threshold QC
    could never be accepted in the spatial consistency check;
  - surface pressure increment in height and thickness check taken into account
    now even if surface pressure has been rejected by threshold QC;
  - the lowest height observation increment of a multi-level report, that is
    written to the SOR and used for the LETKF, is now computed in a way (in
    routine 'ps_obs_operator_mult' instead of 'mult_obs_operator(_z)') which
    is consistent with the surface pressure increment used in the nudging;
  - GPS obs type set correctly in data structure 'cma'.

- minor bug fixes affecting verification and other diagnostic output, e.g.:
  - spatial consistency check also performed for observations rejected in the
    observation pre-processing;
  - surface pressure increments derived from multi-level reports written to
    the VOF also if rejected by QC;
  - upper-air height obs, even from radiosondes, now flagged to passive,
    except for the lowest radiosonde height obs (to be used in the LETKF);
  - removal of QC (flags) for aircraft 'height' (because this is not an
    observation);
  - diagnostic recording of rejection of screen-level obs (on file YUSTATS)
    corrected.

- changes to the VOF file YUVERIF:
  - the condition to write a radiosonde height increment is now the existence
    of the height obs instead of the temperature obs, i.e. height increments
    are more rare now;
  - simulated observations of zenith total path delay (ZPD) also written to VOF
    (no new VOF version is defined - the program 'lmstat' will not read and
     write simulated ZPD).

- changes to the NetCDF feedobs file (NEFF) output:
  - surface pressure obs error converted from height to pressure units (not only
    in feedobs file output, but generally within COSMO (the ODR));
  - flight phase now set in the report header only, not any more in report body;
  - GPS station height filled into height value in report body, to avoid
    problems in LETKF;
  - simulated values of GPS zenith total path delay (ZPD), cloud base height,
    mid-level and high cloud cover additionally written;
  - bug fix: flag of lapse rate check also written.

- general technical changes:
  - all direct calls of MPI routines in the data assimilation code replaced
    by calls of routines from 'parallel_utilities.f90'; for this purpose,
    new routines introduced to module 'parallel_utilities.f90'
    (see below);
  - all statement functions replaced by elemental or intrinsic functions;
  - change of data structure: simulated observations instead of observation
    increments stored in 'SOR' arrays (see 'data_obs_record.f90');
  - special comments introduced to indicate common usage of modules by the COSMO
    and the 3DVAR-LETKF packages, with indication of current code owners for
    each of the packages.

- (technical) changes related to the writing of feedobs files:
  - added routines for writing volumn radar data to the NEFF file (to prepare
    the processing and use of 3D radar data in the LETKF, by Ulrich Blahak).
  - common modules ('mo_*') from 3DVAR-LETKF package updated to 3DVAR-V1_23,
    svn cycle 9070; e.g. new variables defined for writing cloud top height
    and cloud type; module 'mo_fdbk_io.f90' added.


New modules in the nudging code:
-------------------------------
- src_obs_operator_conv.f90: observation operators for conventional data
- src_obs_qc_conv.f90       : quality control (QC) for conventional data
- data_obs_qc_limits.f90   : QC thresholds (moved from 'data_nudge_local.f90')
- src_obs_fdbk_in.f90      : reading obs from feedobs (feedback) files
- mo_fdbk_io.f90           : routines and derived type for I/O of feedback files
- mo_random.f90            : random number generator


Changes to the asynchronous GRIB-IO: mpe_io2.f90:
=================================================

Besides the implementation of grib_api interfaces, some more changes have been
implemented in mpe_io2.f90:

- Because of problems with array-bound checking:
  => Inlined SR buffer_list_probe_head into SR buffer_list_write_action
  => SR buffer_list_finalize_write: Removed the last call to SR buffer_list_write_action
      (because of problems on IBM pwr7 when turning on array bound checking)

- Implemented different strategies for gathering the data from the compute tasks
  to the I/O-tasks:
  => slow and sorted:
     the different records are sent in an ordered manner to the I/O tasks, as is 
     done in synchronous mode. The records in the grib file appear in the same order
     as in a pure sequential program.
     This is the way it always used to be

  => buffered:
     records are received from any task, but are eventually buffered and written 
     in a sorted manner. Again, the records in the grib file appear in the same 
     order as in a pure sequential program
     But this can lead to memory problems because of exhausting buffering!

  => fast and unsorted:
     records are received from any task and are directly written to the file 
     without buffering. Therefore records can occur in a different order.
  
  To control the way how the I/O communication is done, the 3rd character of the 
  Namelist variable ymode_write is used. Up to now, only the first character of 
  this 3-character string has been really used (the second character is used for
  model-internal purposes).

   Re-interpretation of the 3 characters in ymode_write
     1st:  'r', 'w' for reading / writing  (used up to now)
     2nd:  for library used:  'g','1','2' for DWD griblib, grib_api/Grib1, grib_api/Grib2
           (can only be used model-internal)

     3rd:  for speed of I/O communication and writing:
        's' or ' ':  slow and sorted (as it was up to now; 
                     the ' ' is for backward compatibility
        'b'       :  for buffered communication and sorted output
        'f'       :  for non-buffered, but fast communication and un-sorted output



Latent Heat Nudging:
====================
(by Klaus Stephan; src_lheat_nudge)

Revision of data reading procedure, to avoid the former rewind of the radar data files.
Now, the data of one file are read only once, shortly after opening the data file.
The time assignment is done in a next step, as well as the identification as precipitation or
quality data. The change also affects the SR lhn_sumrad, where no reading has to be
performed anymore. In addition this SR has been changed a bit, which is slightly changing the results.
 - There is a small inconsistency between former and new SR considering the precision of
   KIND=ireals and KIND=irealgrib. In the former version a observation point was added if "ds_rad(ind) > 0.0_irealgrib".
   In the new version the observation is already converted to ireals (SR lhn_obs_read), therefore the
   condition is changed to "datafield_all(i,j,n) >= 0.0_ireals"
 - The former normalisation term "ndata" is now space dependend, which better accounted for data outage of
   single radar stations (ie. "datafield_all(i,j,n) < 0.0_ireals").
All input procedures have been extended to work also with grib_api (GRIB1)




Adapted COSMO-ART to new tracer version:
========================================

All COSMO-ART and POLLEN tracers are now handled by the new tracer module. 
Therefore, the corresponding code could be eliminated again in most COSMO-modules.





Technical Changes and (minor) Bug Fixes:
========================================

- data_io.f90: 
  => changes to the data type pp_nl:
    added:
      => igribapi_id: to store the handler for the grib sample for every output group
      => lsfc_ana:    to indicate whether a surface analysis field will be written

    removed:
      => n_num:       for current grid number, when nesting (which was never done)
      => ysystem:     only 'file' accepted anyhow
      => ydbid:       database handling has been eliminated
      => ydbtype:     database handling has been eliminated
      => ydbpw:       database handling has been eliminated

  => New Namelist variables to set additional GRIB2 meta data
      => nlocaldefnr:  local definition number for GRIB2 local section
      => nsubcenter:   originating sub-center identification

- data_modelconfig.f90
  Introduced endlon_tot, endlat_tot as global variables
   (are computed in src_setup.f90)
  Removed vertical grid and reference atmosphere variables and put them
   to vgrid_refatm_utils

- data_satellites.f90:
  => Extensions to provide GRIB2 shortnames and additional meta data
       ychan_name:   Names of channels used (IRx.y,  WVx.y)
  => Renamed nlist_chan to nchan_list (for consistent naming)


- fast_waves_sc.f90:
  => Improved 3D divergence damping by correct calling or SR 'l_calc_lhs_at_1st_RKstep'
     and setting appropriate rhs (dependent on switches l_no_div_damping_in_1st_step, ...).
  => Adaptation of the dynamical bottom boundary condition to the newer formulation
     of the buoyancy term and small bug fix in the use of dw_dt_slow.
     (changes in results only, if ldyn_bbc=.TRUE. or 3D div.-damping is used.
     which must be activated by an internal switch l_3D_div_damping=.TRUE.)

- mpe_io2.f90:
  testing with array-bound checking on the IBM pwr7 showed two problems:
  => subroutine buffer_list_write_action: call to subroutine buffer_list_probe_head
     could be eliminated by inlining this subroutine 
     (?? problems when passing non-associated variables?)

  => subroutine buffer_list_finalize_write:
     just commented the last call to buffer_list_write_action
     (which had a comment: "paranoia" anyhow)

- organize_data.f90:
  => Removed Nest-handling from this subroutine
  => Initialize variables ylevltypes, ysteptypes, rscalefac

- organize_dynamics.f90:
  => Conditional namelist setting of lw_freeslip (Uli Blahak).
    (no change of results; prevents model breaks  in idealised tests)

- organize_physics.f90:
  => Compute depth of soil half layers (czhls) in all subdomains (US)

- organize_satellites.f90:
  => Extensions to provide GRIB2 shortnames and additional meta data

- parallel_utilities.f90:
  => new routines 'reports_all2all', 'scatterv_values', and 'gatherv_values';
  => 'if(n)def NOMPI' compiling option introduced to make this shared module
     compatible with the 3DVAR-LETKF package (so that binaries of the latter
     can also be made without using the MPI library).

- src_artifdata.f90:
  => Clarified example given for usage of COSMO-Tracer construct
  => Use subroutines and variables for vertical grid and reference atmospheres 
     from module vgrid_refatm_utils

- src_input.f90:
  => reorganized check_required, fill_gribarray and get_vertcoord slightly
     to adapt to grib_api meta data usage and handling
  => extended the read_loop to also read HHL-files

- src_output.f90:
  => Moved subroutines for setting I/O meta data to new module io_metadata.f90

- src_runge_kutta.f90:
  => Proper calling of SR 'l_calc_lhs_at_1st_RKstep' in the case of 3D divergence damping.
     (changes only, if 3D div.-damping is used) (Michael Baldauf)
  => Changes to adapt COSMO-ART to new tracer module: some dependencies to
     COSMOART and POLLEN deleted, because this is now handled by the tracer module

- src_setup_vartab.f90:
  => Added new fiels SP_10M for output of near-surface analysis fields

- src_tracer.f90:
  => Correction of a tracer-index

- turbulence_interface.f90:
  => Removed memory leak: if h_ice_p is allocated, it has to be deallocated again




Changes of Results:
===================

Changes in the data assimilation:
---------------------------------

Nudging:

With default settings, the main changes, limited to some occasions, are due to
the new quality control of surface pressure observations against the fields
that provide the lateral boundary conditions (LBC-QC).
Without LBC-QC, changes are usually very small, due various minor bug
corrections in the quality control and due to different rounding errors.
However, there is no backward bit reproducibility.


Latent Heat Nudging:

The results of the latent heat nudging have been changed slightly due to changes 
of precision for some variables (see comments above).


Changes in the dynamics:
------------------------

Due to the bug fixes, the results are changed in the case itype_fast_waves=2 
(and also for ldyn_bbc=.TRUE. in connection with itype_fast_waves=2). 
(See above)


Results of applications not using data assimilation or the new fast waves solver
have not been changed!



Changes of the Namelist Input:  
==============================

/RUNCTL/
--------

New namelist variable:

  - 'lroutine'   : to indicate an operational run (if .TRUE.)
                   (default: .FALSE.)
                   This variable is used to set GRIB2 meta data


/IOCTL/
-------

New namelist variables:

  - 'nsubcenter' : originating sub-center identification for GRIB
                   (default value: 255)

  - 'nlocaldefnr': to specify local definition number for GRIB local sections
                   (default value: -1, means: no local section present)

  - new value for namelist variable yform_read:
     now the value 'apix' can be chosen to read GRIB files with grib_api


/GRIBIN/
--------

New namelist variables:

  - 'ydirhhl'    : directory that contains the HHL-file (which is necessary for
                   reading / writing the GRIB2 generalVertical coordinate)

  - 'ynamhhl'    : name of the file that contains the HHL field (which is necessary
                   for reading / writing the GRIB2 generalVertical coordinate)


/GRIBOUT/
---------

  - new values for namelist variable yform_write:
               'api1':  write GRIB1 files with grib_api
               'api2':  write GRIB2 files with grib_api


Removed namelist variables:

  
  - 'ysystem'  : to specify a data handling system
                 but up to now only 'file' was used

  - 'ydbtype'  : to specify the data base type
                 but this option is not supported any more

  - 'n_num'    : to specify the nest number
                 but the nesting was never finally implemented and
                 has been removed now



/NUDGING/
---------

New namelist variables:

  - 'qcflbcp'  : enhancement factor to the threshold used for the check of
                 surface pressure obs against lateral boundary (LBC) fields
                 (if equal to zero then this LBC-QC is not performed at all);
                 default value = 1.4;

  - 'irun_osse': switch for the model run to derive obs values from the feedback
                 file 'fof':
                 = 0: the original observations are used as obs values (default)
                 > 0: index of model run (in dimension 'd_veri' of 'fof' file)
                      from which the simulated obs are used as obs values;

  - 'losse_fg' : decides whether first guess check flags from the feedback file
                 'fof' is used:
                 = true. : first guess check flags from 'fof' are converted into
                           'dataset' pre-processing flag; observation status
                           remains 'rejected'
                 = false.: first guess check flags are discarded, and the
                           related observation may be used actively; (default)

  - 'fperturb' : factor to the obs error variances to define the size of random
                 perturbations added to the observation values (only for
                 (simulated or original) obs values from feedback file 'fof');
                 default value is zero;

  - 'iseed'    : external seed for random number generator.
                 (default value is 0)
  

Ulrich Schaettler

---------------------------------------------------------------------------------------------

4.27:                                                           19.03.2013
=====

New Fast Waves Solver:
----------------------
(by Michael Baldauf)

1) A new Namelist parameter divdamp_slope has been introduced to exceed the theoretical
   slope stability criterion of the divergence damping (only for itype_fast_waves=2).
   The default value is 20.0, which was hard-coded up to now. But for some tests a different
   value might be necessary.
   (data_runcontrol.f90, fast_waves_sc.f90, organize_dynamics.f90)

2) The new routine has been consolidated regarding the old solver in fast_waves_rk:
     - optional use of the upper boundary damping layer by Klemp et al. (2008)
     - lw_freeslip can be used
     - new version of the radiative lateral boundary condition
    These items are optional and do not change the results, if they are not used.

    NOTE: COSMO_EU and COSMO_DE use lw_freeslip=.TRUE., therefore results ARE changed.

3) Setting the lateral boundary conditions for u and v: These are set at the beginning
   of the small time steps now, because values are used later on. They were set too late
   before. This also changes the results.


4) Introduced a new action "cleanup" in organize_dynamics for deallocation of fields
   from the new fast_waves_solver. This is called at the end of lmorg.


Advection in Runge-Kutta scheme:
--------------------------------
(src_advection_rk.f90)

1) Bug correction for the earth curvature term in the advection of v:
   unnecessary averaging factor 1/2 eliminated (A. Will/J. Ogaja)

   This bug fix will change the results slightly.

2) Limiter for density
   (Michael Baldauf)

   In the case, that density is transported additionally in the finite volume
   advection schemes (as in the Bott-scheme), it can occur, that a grid box is
   completely emptied due to the direction splitting. This would result in an
   explosion of the specific mass of cloud variables. Therefore a limiter is
   introduced, which sets the density to at least 10% of the density of the
   reference state.

   This also changes the results.


Bug fixes in the microphysics:
------------------------------
(by Felix Rieper; has been implemented in a version 4.26.1)

  Modified several physical coefficients which were wrongly initialized:
   cloud ice scheme hydci_pp:
        ccsdxp: now use variable zv1s instead of zbms for initialization
        zbsmel, ccsdep, zbev: factor sqrt(0.5) must be eliminated

   graupel scheme hydci_pp_gr:
     ccsdxp: now use variable zv1s instead of zbms for initialization

  Adapted values of variables zcsdep, zsamel to lately modified diffusion
  coefficient zdv in the cloud ice scheme hydci_pp


  These changes affect the results of COSMO_EU and COSMO_DE.


More adaptations in the Nudging Code to the 14-digit date format:
-----------------------------------------------------------------
(by Christoph Schraff)

Several places still had to be adapted to the use of the 14-digit date format:
This includes the fact that the new version now writes VOF Version 4:
(data_obs_lib_cosmo.f90, src_nudging.f90, src_obs_cdfin_comhead.f90,
 src_obs_cdfin_org.f90, src_obs_print_vof.f90, src_obs_use_org.f90)



Introduction of interfaces for the MESSy-System:
------------------------------------------------
(by Astrid Kerkweg, et al., Uni Mainz)

Interfaces have been implemented to use the COSMO within the "Modular Earth Sub-System".
Especially, the use within this system requires a special treatment of tracers.
All changes have been introduced using conditional compilation with the pragma -DMESSY.


Conditional Compilation:
------------------------

Problem when compiling without -DNETCDF:
When compiling without the pragma -DNETCDF, there was a problem in the compilation of
src_output.f90, because the variable nmsgchan was not defined then. This variable has
now been introduced as global variable in data_satellites.f90, which is used in
src_output.f90 and in netcdf_io.f90.

Problem when compiling only with -DRTTOV and without -DNUDGING:
In addition, several ifdef NUDGING pragmas have been inserted in src_obs_rad.f90 to 
separate the Nudging part from the SYNSAT part.



Bug Fixes and technical adaptations:
------------------------------------

 - data_constants.f90:
   Moved SR set_constants from src_setup to this module, so that it can
    also be used easily by other programs

 - data_runcontrol.f90, src_setup.f90:
   introduced new logical switch ldebug_mpe, for debug prints in mpe_io2 module

 - fast_waves_rk.f90:
   Removed unused variables iup, jup;
   Introduced error message, if wrong value for itype_bbc_w is used

 - meteo_utilities.f90
   Used p0ref in computations of SR reference_atmosphere_BV and introduced this
   variable in the argument list of that SR

 - mpe_io2.f90:
   The strategy of the asynchronous output, to sort all grib records in the same way as the
   usual synchronous output, can use much memory because of the necessary buffering. This lead
   already to problems on some machines. Therefore the buffering is avoided now.

 - netcdf_io.f90:
   = In SR start_ionode, now%nextstep has to be increased by 1 in order to get the
     correct output times for the calculation of time_bnds.
   = Bug fix in the calculation of list_out_nsteps: "nstart" has to be added to "minamongvars",
     otherwise the calculation of variables "time" and "time_bnds" is wrong.

 - numeric_utilities.f90:
   Modified some error messages for better understanding

 - organize_data.f90:
   Split long global attributes (len=200) for NetCDF for distribution using charbuf (len=100)

 - src_artifdata.f90, src_input.f90:
   Introduced p0ref in argument list to SR reference_atmosphere_BV

 - src_runge_kutta.f90:
   Introduced call to new subroutine init_fast_waves_sc_3
      (from module fast_waves_sc.f90)

 - src_setup.f90:
   Moved SR set_constants from src_setup to data_constants, so that it can
    also be used easily by other programs

 - src_setup_vartab.f90:  Adaptation of units of output variables to GRIB standard:
   The shortly introduced additional albedo fields need to have the grib-factor 100.0,
   because the GRIB unit is %, while in the model they are used in the interval [0..1].
   This factor has been forgotten before.

 - src_tracer_metadata.f90:
   Some syntax adaptation (due to complaints by Intel Compiler)



Changes in Namelist-Defaults:
-----------------------------

The defaults of some Namelist-Variables have been modified, mainly to reflect now the
usage of the Runge-Kutty dynamical scheme with the new fast-waves solver as standard.
If values are different depending on the horizontal resolution, most values now reflect
the settings of COSMO-EU application (with 7 km) at DWD.


                   Name          new default            old default
Group /TUNING/:
                 v0snow               25.0                    20.0
                 wichfakt              0.0                     0.15
                 tkhmin                0.4                     1.0
                 tkmmin                0.4                     1.0


Group /DYNCTL/:
                 l2tls                .TRUE.                  .FALSE.
                 iadv_order              3                       5
                 itype_fast_waves        2                       1
                 itype_bbc_w           114                       1
                 l_diff_Smag          .TRUE.                  .FALSE.
                 y_scalar_advect      BOTT2_STRANG            SL3_MF
                 lexpl_lbc            .TRUE.                  .FALSE.
                 rlwidth            85000.0                 50000.0
                 nrdtau                  5                      10
                 ldiabf_lh            .TRUE.                  .FALSE.

                 hd_corr_u_in           0.25                    1.0
                 hd_corr_u_bd           0.25                    1.0
                 hd_corr_t_in           0.0                     0.75
                 hd_corr_t_bd           0.0                     0.75
                 hd_corr_p_in           0.0                     0.75
                 hd_corr_p_bd           0.0                     0.75
                 hd_corr_trcr_in        0.0                     0.50
                 hd_corr_trcr_bd        0.0                     0.50


Group /PHYCTL/:
                 limpltkediff         .TRUE.                  .FALSE.
                 lsso                 .TRUE.                  .FALSE.
                 lseaice              .TRUE.                  .FALSE.
                 lexpcor              .FALSE.                 .TRUE.
                 nincconv                4                       10


Changes to Namelist Input:
--------------------------

No changes, but just some default-values (see above).



Changes of Results:
-------------------

The results of COSMO_EU and COSMO_DE are influenced by the following modifications:

 - fast_waves_sc.f90:
    => setting of lateral boundaries for u, v, w

 - src_advection_rk.f90:
    => bug fix in the advection of v
    => limiter for the density instead of clipping

 - src_gscp.f90
    bug fix in microphysics (ice and graupel scheme)
    => changes to the cloud ice scheme hydci_pp
    => changes to the graupel scheme hydci_pp_gr


Ulrich Schaettler

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

4.26:                                                           12.12.2012
=====

Saving scale interaction TKE soruce terms for output (for DTKE_SSO, DTKE_HSH, DTKE_CON)
----------------------------------------------------
(by Matthias Raschendorfer)

New output variables (with additional Grib1 numbers) have been introduced to save the 
scale interaction TKE sources for output. 


               Table   Element
               Number  Number

   DTKE_SSO      201   155     TKE-tendency due to SSO wake production
   DTKE_HSH      201   156     TKE-tendency due to (sep.) horizontal shear
   DTKE_CON      201   157     TKE-tendency due to convective buoyanc


Restart Problems:
-----------------
 There were several issues and problems with writing / processing restart files:

 - Additional diagnosis of qrs and rho for output steps
   In src_output.f90 an additional update of qrs and rho is computed for output steps.
   This must not be done for restart steps.

 - Advection of TKE (if not semi-lagrange advection)
   This is a problem which was not noticed up to now, because advection of TKE is (still) not
   used operationally (it is only done, if the logical switch lprog_tke=.TRUE.). But since 
   Version 4.23 TKE is treated as the humidity variables and therefore the timelevel, which has
   to be advected, is copied to the timelevel nnew, with the following  statement:
        IF (ALLOCATED(tke)) tke(:,:,:,nnew) = tke(:,:,:,nadv)

   But this was done without the bracketing: IF (lprog_tke) THEN....
   This has been added now.

   The problem with the TKE scheme is, that it does not use the COSMO time stepping mechanism
   with (nnold), nnow and nnew. This is not taken care of for the advection neither was it taken
   care of in restart files.
   Remedy: Write the TKE time level ntke also to the binary restart file (in src_output.f90), read
   it (in src_input.f90) and store the TKE field in the correct time level. The recomputation of 
   ntke in organize_physics.f90 has to be eliminated therefore.

   Note that TKE-advection is only implemented for the alternative turbulence schemes
   itype_turb=5,...,8. Otherwise, the switch lprog_tke is reset to .FALSE.in organize_physics.f90
   after namelist reading and and TKE is not advected!


 - File names of restart files when using asynchronous NetCDF I/O:
   When constructing the file names in the new module netcdf_io.f90, it has not been taken care
   of that nstart > 0 for restart runs.

 - Introduced call to get_free_unit for restart files again (which was erroneously
   moved outside to organize_data, because of prefetching of grib files) (US)

 - Correct grib table numbers for multi-layer snow variables (BR)

 - Always construct the file name for the constant fields with step 0, also for restart runs.

 - In case of asynchronous I/O print the name of the file with the constant fields correctly
   to file YUCHKDAT.

 - Set the correct timestep counter so that the correct date string is calculated
   for restarts at full hours in case of 14 digits for the date string
   (which means: eliminate ntstepstart)


Multi-layer snow model:
-----------------------

 - Adapted variable names to corresponding I/O shortnames
   (in modules data_fields.f90, src_allocation.f90, src_setup_vartab.f90, src_soil_multlay.f90,
       dfi_initialization.f90, organize_data.f90, src_input.f90)

 - Initialize h_snow in case of restarts (in src_soil_multlay.f90)

 - Correct indices for gravity pre-setting (in src_soil_multlay.f90)

 - Correct grib table numbers for multi-layer snow variables in src_input.f90, organize_data.f90


CLM Changes / Extensions:
-------------------------

 - NetCDF I/O:
   change some variables which had dimension of length 1 to scalar and hence reduce the 
   number of dimension IDs (in data_io.f90, netcdf_io.f90, src_input.f90)


Modified RTTOV-interface to also work with RTTOV10:
---------------------------------------------------

 - The modules organize_satellites.f90 and src_sat_rttov.f90 have been modified in a way 
   that also the RTTOV10 library can be used now. The code has to be compiled with the 
   macro -DRTTOV10 and the following external modules and libraries have to be linked:

    => libradiance10.2.a: the modules of this library have to be in the INCLUDE path for
                          compiling the RTTOV-interface of the COSMO-Model 
    => librttov10.2.a


 - For using RTTOV9, the code can still be compiled with the macro -DRTTOV9 and has
   to be linked with the libraries:

    => librttov9.3.a
    => librttov9.3_parallel.a
    => librttov_ifc.a

 - Other updates for using RTTOV10 have been in the modules data_satellites.f90, 
   mo_fdbk_cosmo.f90, mo_fdbk_tables.f90

 - To activate the RTTOV10 library in the model, the switch itype_rttov=10 has to be set.


Radiance Processing in the COSMO-Model:
---------------------------------------

Independent from computing the synthetic satellite images the COSMO-Model has been 
extended to read satellite observation files from the sat-pp (satellite post-processing;
a tool developed at DWD), calculate the first guess brightness temperatures at the 
observation time and location and write back the results into feedback files.
The assimilation itself will then be performed outside of the COSMO-Model.

To control the processing of the sat-pp files, a new Namelist INPUT file (INPUT_OBS_RAD)
is necessary, which contains the groups /TOVS_OBS/ and /TOVS_OBS_CHAN/. 


To choose the actions for satellite processing, two new logical switches have been 
introduced in the group /SATCTL/:

  - lsynsat (Default: .TRUE.)
    To activate computation of synthetic satellite images 
    (default behaviour from former versions)

  - lobsrad (Default: .FALSE.)
    To activate satellite observation processing. This can only be done, if the model
    is compiled with -DRTTOV10!


Update of the Tracer Module:
----------------------------
(by Anne Roches, Oliver Fuhrer)

Some refinements and adaptations have already been implemented for the tracer module:

 - Replacement of hd_corr_q_XXX by hd_corr_trcr_XXX in order to be consistent also 
   with the naming of other switches (e.g. ltrcr_trilin, lef_adv_trcr_notpd, ...).
   This affects the names of 2 Namelist Variables in /DYNCTL/, namely the names of the
   correction factors for the horizontal diffusion fluxes for tracers (former: q-Variables):

              Old Names              New Names
             hd_corr_q_in           hd_corr_trcr_in
             hd_corr_q_bd           hd_corr_trcr_bd

 - Removal of unnecessary information from the tracer module (T_TEND_XXX, boundary index,...)

 - Addition of the options T_LBC_USER and T_INI_USER for tracer clients who want to 
   perform user defined boundary setting and initialization resp.

 - Change the default values of the metadata T_RELAX_ID and T_DAMP_ID in order to 
   be consistent with the other defaults (e.g. for advection)

 - Renaming of T_CLP_POSDEF to T_CLP_ON since only on and off are available for the moment.

 - Addition of the pointer support in the metadata. This function is required for handling 
   associated fields (surface field, emissions, ...) gracefully.

 - Handling of the surface field through the metadata mechanism which can now handle pointers. 
   We thus no longer need a pointer for the surface field in the tracer structure. We had 
   to shift the print of the tracer list and the metadata retrieval after organize_data
   ('start') in order to see also the pointers (e.g. surface field) in the standard output.
   The pointer is now a 3D pointer instead of a 2D pointer.

 - Increase of error message length in order to get more meaningful error messages.

 - Completion and correction of the behaviour for all types of lateral boundary conditions 
   (initialize_loop, relaxation, damping)

 - The previous correction led to non bit-identical results for some namelists settings due 
   to the strange treatment of QR,QS and QG. In order to get bit-identical results also in 
   these cases, a new metadata ("hack") has been introduced for these species (DAMP_FORCED).

 - Cleanup and cosmetics (removal of unnecessary calls, correction in comments, update of headers, ...)

 - Fix of a bug introduced by DWD when changing the tracer module implementation. This bug led 
   to a crash when using itype_gscp < 3.

 - Add new SR trcr_get_block in order to retrieve a block of tracers in one single call. 
   This is required for COSMO-ART or other applications that deal with dozens of tracers.

 - Add new SR for MESSY which gives access to the whole tracer structures.
   This should replace the modifications made by Astrid in the tracer module.

 - Add warning in case of Leapfrog and l3dturb (combination not possible).


Bug Fixes and some technical Changes:
-------------------------------------

- data_nudge_all.f90, organize_assimilation.f90:
  Increased length of directory for NetCDF OBS files to 250 (by setting icdfdirlen to 250).
  Changes in organize_assimilation.f90 for a proper broadcast of the character string
  ycdfdir

- mpe_io2.f90, Subroutine mpe_io_read:
  An MPI_Wait in the loop over the PEs has been moved from within the IF-block: IF (length > 0)...
  to outside of that IF-block, because otherwise the buffers could be overwritten by the 
  succeeding messages.

- mpe_io2.f90:  include missing ifdef GRIBDWD

- netcdf_io.f90:
  => Correction of the restart file names
  => Renamed the argument variable "namelist" in few subroutines to "outblock", because
     NAMELIST is a Fortran Keyword.

- organize_data.f90:
  => if 14-digit file names are used, allow writing of analysis files also with an increment
     of less than an hour and also immediately after hour 0 (not only starting with hour 1).
  => added more consistency checks for the gribout namelist blocks:
     If lasync_io is .TRUE. and nprocio > 0, all gribout files have to be grib and
     If lasync_io is .TRUE. and nc_asyn_io > 0, all gribout files have to be NetCDF.

- src_conv_tiedtke.f90 and src_conv_shallow.f90:
  Allowing only non negative buoyant production terms of TKE

- src_gridpoints.f90:
  Corrected dimensions for wind speed in meteographs output, which is computed now in m/s 
  and not in knots any more.

- src_output.f90:
  => Bug fix for itype_gather=2: correct dimensions have to be added for arrays procarray_real
     and procarray2d_real
  => Bug fix for calling SR potential_vorticity_rho: the prognostic fields u, v
     and w have to be passed with the correct timelevel itl

- src_setup_vartab.f90:
  => Change leveltype for SOD_T and ASOD_T from 1 to 8 (HJP)
  => Adapted variable names of multi-layer snow model to corresponding short names for I/O (US)
  => Introduction of the additional output fields 'DTKE_(SSO, HSH, CON)' based on the 
     model variables 'tket_(sso, hshr, conv)'  (MR)

- turbulence_diff.f90:
  Saving scale interaction TKE soruce terms for output (for DTKE_SSO, DTKE_HSH, DTKE_CON)

- utilities.f90:
  Corrected comments for arguments in rotation routines, where latitude and
  longitude were mixed up


Changes to Namelist Input:
--------------------------

Modified Names in /DYNCTL/:

the names of the correction factors for the horizontal diffusion fluxes for tracers has
been adapted, to reflect that it works on tracers:
  
              Old Names              New Names
             hd_corr_q_in           hd_corr_trcr_in
             hd_corr_q_bd           hd_corr_trcr_bd

  
New value for itype_rttov in /SATCTL/:
  - Now, also the value itype_rttov=10 can be used, if the model has been compiled
    with the RTTOV10 library.

New Namelist parameters in /SATCTL/:

To choose the actions for satellite processing:

  - lsynsat (Default: .TRUE.)
    To activate computation of synthetic satellite images 
    (default behaviour from former versions)

  - lobsrad (Default: .FALSE.)
    To activate satellite observation processing. This can only be done, if the model


Changes of the Results:
-----------------------

No Changes!

Ulrich Schaettler

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

4.25:                                                           16.08.2012
=====

Implementation of new Tracer Module:
------------------------------------
(by Anne Roches, Oli Fuhrer)

A generic handling of Tracers has been implemented into the COSMO-Model. This handling
is already implemented for the microphysics tracers: qv, qc, qi, qr, qs and qg

A detailed documentation of how to use this new tracer module will be published soon
as a COSMO Technical Report.


Implementation of 2-moment microphysics - Interfaces:
-----------------------------------------------------
(by Uli Blahak)

Only the interfaces to the 2-moment scheme (together with some other necessary changes)
have been implemented to the COSMO-Model using ifdef TWOMOM_SB (two-moment scheme from 
Seifert and Beheng). If this parameter is not defined during compilation, the model 
does not change at all.

To get the source code and further documentation of the code, please contact the colleagues 
at DWD.


Optimizations and cleanup in the asynchronuous GRIB IO module: mpe_io2.f90:
--------------------------------------------------------------------------
(by Florian Prill)

The module mpe_io.f90 serves a number of GRIB1 I/O related purposes in the COSMO-Model.

  - Write operation: This can be done in the 
     => traditional operation mode, where I/O is done by the first compute processes 
     => or it can be truly asynchronous, where dedicated I/O processes receive data from
        the compute processes and perform writing without blocking the computations.

  - Read operation: The reading of GRIB files is inherently sequential, thus it is always
    conducted by a single I/O process. In principle, the reading process is a non-blocking
    operation for the compute PEs. However, it may constitute a barrier, when input data
    is actually required for the next compute step.

  - Writing Ready-files: The mpe_io implementation supports the use of ready-files, i.e. small
    files indicating the completion of an output step. Ready-files are used within DWD's NWP 
    suite to handle interdependencies of programs.

  - Database support: mpe_io.f90 could be configured that read- and write-operations could 
    be directly done from / to DWD's relational Oracle data base. But this feature has never
    been used because of performance problems.


There have been several changes now to the asynchronuous GRIB1 I/O module mpe_io.f90. 
Because of these changes also some interfaces have been modified. Therefore we decided to
choose a new name for this module: It is now called mpe_io2.f90 (other models at DWD
still use mpe_io.f90).

The modifications are:
 
  - Removed database support: The Namelist group /DATABASE/ in INPUT_IO is not necessary
    any more

  - Added a "pre-fetching mode": pre-fetching strives to avoid blocking of the compute PEs
    due to reading boundary data. In this node, boundary data are read ahead of time, i.e.
    when the forthcoming I/O operation wil be the input of a GRIB file. This can then be 
    performed simulanteously with the preceding compute steps.

  - Ready-files: bug correction: Ready-files are now only written, if all files of an 
    output step have been written.


New Namelist parameter in /IOCTL/:

  - lprefetch_io (LOG) (Default = .FALSE.)
    Enables reading of boundary files ahead of time, i.e. when the forthcoming I/O operation
    will be reading a GRIB file, then this can be done simultaneously with the preceding 
    compute steps.
    Prefetching can only be enabled with true asynchronous I/O (lasync_io=.TRUE.).


Implementation of new asynchronous netcdf I/O strategy
------------------------------------------------------
(by Carlos Osuna)

An asynchronous solution for output of Netcdf files has been implemented. By namelist 
configuration, asynchronous I/O for Netcdf can be enabled reserving some dedicated I/O PEs 
that will receive output levels from compute PEs and record them (asynchronously) into disk.

The switch lasync_io is used to enable the asynchronous mode. 
There are two new namelist switches, to control the configuration of the asynchronous 
Netcdf I/O in the group /RUNCTL/:

  => num_asynio_comm:  
     To choose the number of asynchronous I/O communicators for NetCDF. With several 
     communicators it is possible to parallelize the output over the files to be written 
     (the GRIBOUT namelists). 
  => num_iope_percomm: 
     To choose the number of asynchronous I/O processes per communicator for NetCDF I/O. 
     With several processes per communicator it is possible to do a parallel writing of 
     single files. This is only possible, if the parallel NetCDF library is available and 
     the code has been compiled with the preprocessor directive -DPNETCDF.


If these two namelist options are > 0, and lasync_io is switched on, asynchronous netcdf
I/O is selected as I/O strategy.
For sequential netcdf I/O (lasync_io = .FALSE.) code has not been modified.

NOTE:
Asynchronous netcdf and asynchronous grib are NOT compatible. Therefore if lasync_io
is TRUE, all the output files have to be either netcdf or grib format.

Using
      num_asynio_comm  = 1
      num_iope_percomm = 1
may give good performance results in most of the cases where the amount of data
being written is moderate.

num_iope_percomm > 1 is only allowed if parallel netcdf is available (compiled with
preprocessor flag PNETCDF)


Implementation of another option for the global communication in the output:
----------------------------------------------------------------------------
(by Oliver Fuhrer)

A switchable gathering of vertical levels (2D fields) on the compute PEs has been 
implemented. Up to now a communication is started for every level. The new option allows to
gather nproc levels at the same time (where nproc is the number of processors used).

To choose the desired option, a new Namelist switch itype_gather has been 
implemented in the group /IOCTL/:

    itype_gather = 1: (default) gather the fields by an extra communication per level
                   2: gather fields by one communication for nproc levels (with MPI_ALLTOALLV)

The new option has been tested using debug options to give bit-reproducible results for a
run with original code, a run with new code using itype_gather=1 and a
run with new code using itype_gather=2.
The benefit of using this optimization for a full COSMO-2 24h forecast on a Cray
is a decrease of the total simulation time by 8%.

On the NEC SX-9 with using only 16 CPUs, no significant changes can be seen between 
the two options (Uli Schaettler).


Update of the multi-layer snow model:
-------------------------------------
(by Ekaterina Machulskaya)

To avoid numerical instability caused by very low snow surface temperatures 
in the case of very thin snow heights, a minimal critical value of snow height 
is introduced which depends on the timestep and on the heat fluxes through 
the upper and lower boundaries of snowpack. If snow height is smaller than 
this critical value, the multi-layer snow model switches to an algorithm similar 
to single-layer snow model.

The correction of the surface outgoing long-wave radiation flux with due regard 
for the low frequency of the radiation routine calls is introduced.
The call of the subroutine "normalize" is eliminated in order to reduce computational costs. 
Its functionality is transferred to the subroutine "terra_multlay"


Usage of the field soiltyp:
---------------------------

This is a real field, but contains values that should be integers. In several routines
comparisons with integer values are done. All these comparisons are now implemented with 
NINT (soiltyp)


Limiting the ntag-value for the boundary exchange:
--------------------------------------------------

All calls to exchg_boundaries contain a tag for the identification of the message.
In most calls this tag is connected to the time step of the model and in case of climate runs
this could be a very large number. 

Some MPI implementations have a strict handling of the maximal value a tag can have and 
the model is running into problems here. Therefore all calls were changed and the time step
ntstep has been changed by a variable nexch_tag, which is set as MOD (ntstep, 24*3600/INT(dt)).


IFS Convection scheme for the CLM:
----------------------------------

An interface has been implemented for the IFS convection scheme in organize_physics
using conditional compilation: ifdef CLM

The source code of the scheme itself is not distributed with the official COSMO versions,
but has to be obtained by the CLM community. If the code is compiled with -DCLM,
the IFS convection scheme can be activated by setting itype_conv=2.

If itype_conv=2 is chosen, the averaging of the convective forcing cannot be activated,
lconf_avg has to be .FALSE. then. If it is .TRUE., the model resets it to .FALSE. again.


New Grib values:
----------------

Multi-layer snow model:

  Official Grib1 numbers have been given to the variables of the multi-layer snow model:
  Up to now these variables had been given element numbers from table 250, which is used
  at MeteoSwiss, and the new vertical level type 211. This level type is now officially 
  accepted by WMO. But the element numbers are now chosen according to the variable,
  i.e. T_SNOW_MUL has the same element number as T_SNOW, but just a different level type:
  And all variables just get an '_M' to indicate the multi-layer variable

   Name             Meaning                                    iee      itabtyp     ilevtyp

   T_SNOW_M         snow temperature                         203         201        211
   H_SNOW_M         snow depth in m (per layer)               66           2        211
   RHO_SNOW_M       snow density in kg/(m**3)                133         201        211
   W_SNOW_M         water equivalent of accumulated snow      65           2        211

   WLIQ_SNOW_M      liquid water content in the snow         137         201        211


2-moment scheme:

   TQH              total hail content vertically integrated 136         201        211


Technical Changes:
------------------

- fast_waves_sc.f90:
  Format change in namelist-parameter itype_bbc_w:
  The 'new' nomenclature now has the format '1ed' instead of only 'ed'. 
  Otherwise e.g. the case 04 is not properly recognized, but confused 
  with the case 4 of the 'old' nomenclature.

- io_utilities.f90, Subroutine make_fn:
  When using a time step dt, which does not fit into the I/O time increment 
  (i.e. the I/O step is NOT a multiple of dt), the file name is not determined
  correct. Some modifications have been done to adjust the file name to the correct
  time for I/O.

- organize_physics.f90
  Prohibit concurrent use of nradcoarse > 1 and nboundlines > 3, which is not working.
  Added plausibility checks regarding lrad and itype_aerosols in combination
      with periodic BCs.

- organize_dynamics.f90
  Adapted format of lines in YUSPECIF, so that all variables can properly be written

- src_advection_rk.f90
  Better computation of wcon in SR advection_pd (with already advected w) (Michael Baldauf)
  New T- and p- advection scheme (iztype_tppadv=2) only works for
   odd-order upwind advection schemes (iadv_order=1,3,5), so in
   case of even adv order, switch back to the old scheme and issue a
   warning instead of aborting the run (Ulrich Blahak).

- src_conv_tiedtke.f90
  Implemented some type conversions (to avoid special compiler warnings)

- src_lheat_nudge.f90
  Bug fix for variable min0_lhn (should be known at each processor)
  Changes to enable subhourly model starting points (LETKF approach):
   - use full information of new get_utc_date routine (hh_rad and min0_lhn)
   - additional call of SR lhn_sumrad if first observation is within current hour (lhm1)
   - modifications of obs_time, next_obs_time
  Correction of array size of diagnostic variables with respect to local processors.

- src_obs_processing.f90
  Patch in order to run with AOF files: without that, in src_obs_cdfin_print.f90 the model
  tries to reopen YUREJECT and YUOBSDR files with a runtime error.

- src_output.f90, Subroutine makepds:
  The same situation as in make_fn occurs when determining the reference time for 
  an analysis, when using a dt that does not fit into the output increment. The 
  reference time is adapted accordingly now.

- src_input.f90:
  => Checks, if files are existing: After every call to make_fn, the extension ".nc" 
     has to be added, in order to properly check the NetCDF files.
  => In the make_fn-call for the restart file, ydirini has been replaced (again) by
     ydir_restart
  => Bugfix: Calculation of qrs and rho was missing for initial data. (UB)

- src_gridpoints.f90, organize_diagnosis.f90:
  => Corrected unit of height of convective clouds in (short) meteograph output
  => Increased length of station names for grid point output

- src_radiation.f90
  Some bugfixes for periodic boundary conditions:
   => For nradcoarse > 1, changed IF clause (my_cart_neigh == -1) in initialization of
      istartrad, etc. to avoid crash in case of periodic BCs.
   => Calculation of aerosol distribution, local sun time and sun position changed for
      periodic BCs to make aerosols and the sun "pseudo-periodic":
      aerosols, sun time and sun position are constant along
        - rotated latitudes  for lperi_x=.TRUE.:
        - rotated longitudes for lperi_y=.TRUE.:
        Values are taken from the model reference point (as implied by pollon, pollat);
   => In computation of sun_azi and sun_el, the loop over js and i has been splitted
      in two parts, but the scalar zeitrad was not correct in second part. This has been
      fixed by making it a vector over i as above and deleting the splitting of the js-loop.
   => Other bugfixes (not related to periodic BC)
      Time level nnow was specified for qi, changed to the flexible nzx as for qv,qc.
         (No influence on results, because nzx equals nnow.)
   => Wrong index js used for averaging values to fesft input for nradcoarse > 1
         (this changes the results)


- src_setup.f90
  Adapted format of lines in YUSPECIF, so that all variables can properly be written

- src_sfcana.f90
  The control of writing the surface analysis fields has been adapted to deal with a
  time step, which does not fit into a full hour. Now, all surface analysis fields 
  should be written.

- time_utilities.f90, Subroutine collect_timings:
  The output format for the timings have been enlarged. Now even very long times should
  be displayed properly.

  

Changes to Namelist Input:
--------------------------

New Namelist parameters in /RUNCTL/:

  - num_asynio_comm:  
    To choose the number of asynchronous I/O communicators for NetCDF. With several 
    communicators it is possible to parallelize the output over the files to be written 
    (the GRIBOUT namelists). 

  - num_iope_percomm: 
    To choose the number of asynchronous I/O processes per communicator for NetCDF I/O. 
    With several processes per communicator it is possible to do a parallel writing of 
    single files. This is only possible, if the parallel NetCDF library is available and 
    the code has been compiled with the preprocessor directive -DPNETCDF.


New Namelist parameters in /IOCTL/:

  - lprefetch_io (LOG) (Default = .FALSE.)
    Enables reading of boundary files ahead of time, i.e. when the forthcoming I/O operation
    will be reading a GRIB file, then this can be done simultaneously with the preceding 
    compute steps.
    Prefetching can only be enabled with true asynchronous I/O (lasync_io=.TRUE.).

  - itype_gather: To choose the type of gathering output fields:
        = 1: (default) gather the fields by an extra communication per level
          2: gather fields by one communication for nproc levels (with MPI_ALLTOALLV)



Changes of the Results:
-----------------------


- The implementation of the new tracer module does not change the results, with the 
  exception of the NEC SX-9. Here, very small changes are observed, which might be 
  due to different compiler optimizations.

- The implementation of the 2-moment microphysics does not change the results, if the 
  new scheme is not activated.

- Bug Fixes in src_radiation
   => Wrong index js used for averaging values to fesft input for nradcoarse > 1
      This changes the results for COSMO_DE
   => The other modifications cause numerical differences in COSMO_EU and COSMO_DE

- Bug Fix in src_input
  => Calculation of qrs and rho was missing for initial data. Before, these quantities were
     used with value 0.0. Now they have a reasonable initialization.
      This changes the results for COSMO_DE and COSMO_EU

- Bug Fix in src_advection_rk
  Computation of wcon in SR advection_pd: use already advected w to compute wcon

- Modification in meteo_utilities
  Computation of clwc(i,j,k) resp. ql by using a new formula provided by M. Raschendorfer.
  The old formula lead to problems for special settings of q_crit and clc_diag and could lead
  to negative values for ql.



Ulrich Schaettler

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

4.24:                                                           21.06.2012
=====

New Fast-Waves Solver:
----------------------
(by Michael Baldauf)

Most of the operational setups of the COSMO model now use the so-called 
Runge-Kutta time integration scheme (Wicker, Skamarock, 2002).
The basic idea of this time-splitting procedure is to treat the slow parts 
like advection or Coriolis force with a large time step, whereas the 
'fast waves' modes sound and gravity wave expansion are treated with a 
small time step.

As in the original proposal of Wicker, Skamarock (2002, 1998) the fast waves 
are treated horizontally with a backward-forward scheme and vertically implicit 
to allow larger values for the small time step. An additional filter process 
must stabilize this whole time-splitting procedure; usually a divergence 
damping is used (e.g. Skamarock, Klemp, 1992) in the fast waves solver.

Properties of the new fast waves solver compared to the current one are:

1. Improvement of the accuracy of all vertical derivatives and averages.
   During the evaluation of the Runge-Kutta dynamical core for the COSMO-EU 
   (7km)-setup it became obvious that the proper treatment of the vertical 
   discretizations in strongly vertically stretched grids in particular 
   improves the behavior of the pressure bias. Now all explicit and implicit 
   terms are discretized in a consistent way with appropriate weights to take 
   into account the grid stretching.

2. Use of the divergence operator in strong conservation form
   This form of the divergence has a benefit in the
   calculation of the metric terms in vertically stretched grids, too,
   and in the formulation of the lower boundary condition for the
   vertical velocity w.

3. Isotropic treatment of the artificial divergence damping
   The current divergence damping considers only the horizontal gradients of the 
   3D-divergence in the momentum equations. This seems appropriate in the 
   vicinity of the lower boundary, where the grid is highly anisotropic, too. 
   But for smaller scale setups of COSMO (e.g. COSMO-DE with 2.8 km grid mesh 
   size) the grid becomes more isotropic in the troposphere. Therefore an 
   isotropic treatment of the artificial divergence damping seems to be 
   reasonable. Due to high 'divergence damping Courant numbers' near the 
   ground, this process must be also treated vertically implicit like the 
   sound and buoyancy terms. The stability of this treatment is shown in 
   Baldauf (2010).
   This isotropic treatment can be used optionally. By default it is switched off
   (internal switch 'l_3D_div_damping').
 
4. Also optionally a preliminary version of the Mahrer-discretization of
   the horizontal pressure gradient terms is available.
   By default it is switched off (internal switch 'l_hor_p_grad_Mahrer').


A new namelist switch itype_fast_waves has been introduced in /DYNCTL/, to 
activate the old (Default) or new fast-waves solver:

  itype_fast_waves: Type of fast waves solver for Runge-Kutta dynamics
          = 1: old scheme (from module fast_waves_rk.f90) (Default)
          = 2: new scheme (from module fast_waves_sc.f90)
               with proper weightings for all vertical discretizations,
               divergence operator in strong conservation form,
               optionally: isotropic (fully 3D) divergence damping,
               optionally: Mahrer (1984) discretization

And new options for the bottom boundary condition itype_bbc_w can be set
(but only valid for itype_fast_waves=2)

  itype_bbc_w = 0..6 (same as before)
                ed   (only if itype_fast_waves=2)
                     where digit 'e' means:
                       e=0: no extrapolation
                       e=1: linear extrapolation
                       e=2: quadratic extrapolation
                       of u and v to the bottom;
                     and digit 'd' means:
                       d=2: centered diff. 2nd order
                       d=4: centered diff. 4th order
                       discretization for dh/dx, dh/dy.
                     Recommended value: 14


Recommended Namelist settings for the new fast-waves solver in /DYNCTL/:
    itype_fast_waves = 2
    itype_bbc_w      = 14
    ldyn_bbc         = .FALSE.



Changes to subroutines computing the Reference Atmospheres:
-----------------------------------------------------------
(by Michael Baldauf)

There have been some changes to the subroutines reference_atmosphere, 
reference_atmosphere_2 and reference_atmosphere_BV in module meteo_utilities.f90:

- They have been extended to also compute the temperature t0hl of the reference 
  state on half levels. 

- The computation of the k-indices for special pressure levels has been removed 
  from these subroutines and have been put to a new subroutine
  k_index_of_pressure_levels (also in meteo_utilities)

- For irefatm=1 and using the new fast_waves_sc-solver, the pressure and temperature
  of the reference state on full levels are now computed analytically, instead of
  just averaging the values from the half levels.

- For irefatm=2 (subroutine reference_atmosphere_2) t0 is now calculated directly
  as a function of the height (instead of using p0), which is a bit more intuitive.
  This slightly different calculation can change results
  of applications with irefatm=2 (e.g. COSMO_EU) due to round off errors.


The interfaces in src_input.f90 and src_artifdata.f90 have been adapted accordingly.




Adaptations for sub-hourly analysis update with LETKF:
------------------------------------------------------
(by Hendrik Reich)

When using the LETKF method for data assimilation in the future, there will be the
need to have an assimilation cycle of only few minutes, and not of hours. Therefore
the COSMO-Model has been adapted to read and write files, where also minutes and 
seconds are included, e.g.
  laf20130504121500   for 04th of may 2013, 12 UTC + 15 Minutes and 00 seconds
      instead of the hitherto existing laf2013050412

The main changes are:

  - Subroutine make_fn from io_utilities:
    The file names, that are created by this subroutine, can have 4 additional
    digits.
  
    This is controlled by the Namelist switch ydate_ini:

       => If ydate_ini is specified with 10 digits (as it was up to now), also
          the file names are as they were before.
       => If ydate_ini is specified with 14 digits (including minutes and seconds),
          the file names contain 4 additional digits.
          But even then old files will be recognized for input.

  - Subroutine get_utc_date: to also compute the minutes and seconds in a precise
    manner, the computation of the return parameter "acthour" has been modified, 
    and therefore the results are slightly different.

    Because the Radiation module uses this return parameter to calculate the zenith
    angle, also the results of the simulations are changing. 

    But the differences are numerically negligible.

  - the date variables that are returned by the routine get_utc_date from module
    utilities have been extended:

                   before                       now

    yactdate1    2013050412                   20130504121532

    yactdate2    SAT 04.05.2013  12 UTC       SAT 04.05.2013  12:15:32 UTC

    This also changes some formats in the ASCII output files

  - All routines that use the date variables have been adapted.



Problem in FLake Model with grib packing:
-----------------------------------------
(by Dmitrii Mironov)

There were problems with the FLake Model related to Grib packing.
At the end of each time step the FLake Model checks all computed values for 
consistency. Then the variables are written to Grib and read again in the
next assimilation cycle or at the start of a forecast. Due to grib packing the
consistency of the data could be lost. 

Therefore, a consistency check has now been added also at the beginning of a 
simulation in the subroutine flake_init.

Moreover, another security procedure has been implemented:
To limit the values of EXP-arguments, a maximum value for EXP arguments
has been introduced in data_flake.f90: c_maxearg_flk  = 1.0E+02_ireals 


These modifications do change the results of the simulations!



Technical Changes:
------------------

- io_utilities.f90:
  Reading restart files: Adaptations are necessary in check_input_grid to deal
    with binary restart files
  Adaptations for reading NetCDF files: Unification of IDs with INT2LM
  Changed dim_id for topo corrections from 11 to 15 (by Burkhardt)

- data_io.f90:
  Unification of NetCDF dimension ID's with INT2LM 
  (by Burkhardt Rockel, CLM)

- organize_data.f90:
  Corrected check for itype_albedo in line 1074: was erroneously checked two
     times for value = 2.
  input_ioctl: replaced some WARNINGs for async I/O by ERROR, because error 
     status is set now

- src_input.f90:
  Reading restart files: Also check the possibility of irefatm=3 for restarts
  Corrected an error message in SR fill_realarray
  Adapted definition of dim_ids to INT2LM: 
      changed ID for topo corrections from 11 to 15 (by Burkhardt Rockel)

- src_output.f90:
  Conditional compilation for GRIBDWD in SR makegds:
   The vertical coordinate parameters can only be written, if GRIBDWD is set
   and the Grib library is available, because of packing of REALs to INTEGERs.
   In case of restart these parameters are not written, but also not needed

- src_sat_rttov.f90:
  Added a NOMOVE Directive for the SX-compiler

- src_slow_tendencies_rk.f90:
  Order of summations for humidity tracer qvtens in advection: was different 
  than for all the other humidity tracers and has been adapted now
  !!  This changes the results because of numerical reasons   !!


Changes to Namelist Input:
--------------------------

Group /DYNCTL/:

New switch itype_fast_waves, to activate the old (Default) or new fast-waves solver:

  itype_fast_waves: Type of fast waves solver for Runge-Kutta dynamics
          = 1: old scheme (from module fast_waves_rk.f90) (Default)
          = 2: new scheme (from module fast_waves_sc.f90)
               with proper weightings for all vertical discretizations,
               divergence operator in strong conservation form,
               optionally: isotropic (fully 3D) divergence damping,
               optionally: Mahrer (1984) discretization

And new options for the bottom boundary condition itype_bbc_w can be set
(but only valid for itype_fast_waves=2)

  itype_bbc_w = 0..6 (same as before)
                ed   (only if itype_fast_waves=2)
                     where digit 'e' means:
                       e=0: no extrapolation
                       e=1: linear extrapolation
                       e=2: quadratic extrapolation
                       of u and v to the bottom;
                     and digit 'd' means:
                       d=2: centered diff. 2nd order
                       d=4: centered diff. 4th order
                       discretization for dh/dx, dh/dy.
                     Recommended value: 14


Recommended Namelist settings for the new fast-waves solver in /DYNCTL/:
    itype_fast_waves = 2
    itype_bbc_w      = 14
    ldyn_bbc         = .FALSE.


Group /RUNCTL/:

The character string for the namelist switch ydate_ini can now be specified 
in two ways:

 - ydateini='yyyymmddhh':  (old scheme)
   All file names are specified in the way it was before

 - ydateini='yyyymmddhhmmss': (with additional digits for the minutes and seconds):
   All file names for the initial files or for ytunit='d' (in day format) are
   also specified with the additional digits.


Changes of the Results:
-----------------------

The results of the simulations are influenced by the following modifications:

- Computation of t0 in subroutine reference_atmosphere_2 in a slightly different way:
  Only applications that use irefatm=2

- Use of precomputed t0 in module src_runge_kutta instead of re-computing
  (because of numerical reasons)

- Changes in the FLake Model.

- Changes to the routine get_utc_date and the return parameter "acthour":
  Slight changes of the values because of numerical reasons.
  Because this parameter is used in the radiation scheme for determining the zenith
  angle of the sun, the values of the simulations can change.


Ulrich Schaettler
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

4.23:                                                           30.04.2012
=====          

Changes in the parameterization of the cloud cover for ice clouds:
------------------------------------------------------------------
(by Axel Seifert)

The code in src_radiation to reduce the cloud cover of ice clouds in the
upper troposphere has been modified:
 - The branch for k <= klv500 has been eliminated. It is also not used in
   the GME and can lead to spurious artifacts. It does not make sense here.
 - The empirical relation has been re-tuned using data from the Lindenberg
   cloud radar. Now the model can really achieve 100% cloud cover for
   cirrus clouds. Before the maximal cloud cover has been at about 80%,
   which is not realistic.



Restructuring of metric organization:
-------------------------------------
(by Michael Baldauf)

All routines related to metric calculations have been gathered to the new
module grid_metrics_utilities.f90. This module now contains the subroutines:

 - calc_sqrtg_r                  (from numeric_utilities)
 - metric_coeffs                 (from numeric_utilities)
 - weighting_factors_full2half   (from fast_waves_rk)
 - weighting_factors_one_sided   (new)

 - init_grid_metrics             (new)
     is now called in organize_dynamics (init-part) and / or in src_artifdata
     It can also be called by other programs having to deal with metric calculations.
     Boundary exchange calls in init_grid_metrics are embraced with "ifndef NOMPI", 
     so sequential programs have to define NOMPI then.

And it contains some fields necessary for running, which have been defined in 
data_fields.f90 before.



Reorganization of positive definite advection schemes:  (Michael Baldauf)
and
Bug Fix in advection operator interfaces                (Oliver Fuhrer)
------------------------------------------------------

Module src_advection_rk.f90:
To avoid multiple copies of the same code, the positive definite advection of the 
different fields in a certain space direction have been gathered in new subroutines
advection_ef_x, advection_ef_y, advection_ef_z.
Depending on the chosen advection scheme, these routines are called in 
a special order.

At the same time, a bug has been fixed in the interfaces of the advection operators:
Related problems have also been reported from the Lahey Compiler by Astrid Kerkweg.

Report by Oliver Fuhrer:

- The COSMO model calls certain subroutines using the same argument twice. For example,
  the advection operators are written in a form...

  subroutine advx(s,su)
   real, intent(in)  :: s
   real, intent(out) :: su
   tmp = f(s)
   su = g(tmp)
  end subroutine advx

  ...and then called via...

  call advx( qv(nnew), qv(nnew) )

  ...to avoid an additional copy. According to the Fortran standard this type of argument
  aliasing is explicitly forbidden (see for example note 12.34 of the Fortran 2008 standard)
  and may lead to erroneous results. This actually seems to be the case for the NAG
  and Lahey Fujitsu compiler. This type of calling is used for advection and cloud
  diagnostics and different approaches for fixing it have been adopted.

  For the advection, the memory copy has been made explicit in the advection driver
  routine (as has already been done for the SL-advection). This also leads to a
  reduction in code complexity. The advection routines retain only one argument
  which is declared as INOUT and do the update in-place.

  The changes have been tested for the COSMO-7 and COSMO-2 operational setup at MeteoSwiss
  and have led to bit-identical results. The performance on the Cray XT4 machines does 
  not seem to be influence significantly by the modifications and is within the uncertainty 
  of the measurement of a single run on a machine being shared with other users.



Introduced new variants of Bott Advection:  
------------------------------------------
(by Michael Baldauf)

New variants of the Bott Advection scheme have been implemented:
(These are new options for the Namelist parameter y_scalar_advect in /DYNCTL/)


 - BOTT2_STRANG_B, BOTT4_STRANG_B:
   Strang splitting only at the bottom, in the lowest koffset levels of the atmosphere.
   The more accurate but also more expensive Strang splitting needs only to be applied 
   near the surface. Using the less expensive advection variants in the higher atmosphere
   will save computational time.

   A new subroutine advection_ef_xyzyx_new has been implemented:
     => levels k=1,...,ke-koffset:  
           usual Bott-Advection (either -x or -y, depending on time step)
     => levels k=ke-koffset+1,...,ke:
           Bott Advection with Strang splitting (first _x, then _y)
     => levels k=1,...,ke:
           Bott Advection in _z direction
     => Boundary exchange
     => levels k=1,...,ke-koffset:  
           usual Bott-Advection (either -y or -x, depending on time step)
     => levels k=ke-koffset+1,...,ke:
           Bott Advection with Strang splitting (first _y, then _x)


   So it is for the upper levels k = 1,...,ke-koffset
     even time steps:       xzy
     odd  time steps:       yzx

   And in the lowest levels k = ke-koffset+1, ..., ke
     Strang Splitting:    xyzyx


 - BOTT2_XYZYX, BOTT4_XYZYX:
   Modified sequence of Strang splitting, compared to the ones implemented (ZYXYZ)



Computation of Moisture Divergence and Removal of qvt_diff:
-----------------------------------------------------------
(by Oliver Fuhrer)

The diagnosis of dqvdt was intermixed with the computation of vertical diffusion of 
qv and qc in the subroutine complete_tendencies_qvqcqi_tke (and the subroutine 
slow_tendencies for the LF-core). 
This has been separated into two different subroutines (RK) or different code blocks 
(Leapfrog) in order to make the code more modular and extensible in the future. 
This required changes to the source files slow_tendencies.f90, src_runge_kutta.f90, 
and src_slow_tendencies_rk.f90. 
The changes are of purely technical nature and do not influence the model results.


The modified code has been checked for the MeteoSwiss operational setup (COSMO-2 
and COSMO-7) and proven to give bit-reproducible results for the Runge-Kutta 
applications.  It also has been checked for COSMO_EU and COSMO_DE at DWD, 
where it also gave bit-reproducible results

A remark on the Leapfrog core:
If an optimization is made in the LF core (removal of "+qvtens-qvtens") rounding 
errors can lead to differences in the range of the numerical precision. 
These changes only influence the computation of dqvdt and thus are only 
visible if the convection scheme is active (COSMO-7) or in the DQVDT diagnostic 
output. The impact on model performance is negligible and cannot be discerned from 
the jitter on the machine. 


At the same time the field qvt_diff has been eliminated from the COSMO-Model at all.
In qvt_diff, additional diffusive tendencies have been stored, which do not
contribute to the simulations, if the three-dimensional turbulence is not switched on.

To unify the treatment of all microphysical species (necessary for the new tracer 
module), this field has been removed from the model.

A warning is issued that explicit diffusion tendencies are not accounted for in dqvdt.



Move computation of physical tendencies to organize_physics.f90:
----------------------------------------------------------------
(by Oli Fuhrer)

The computation of the total physical tendencies has been moved out of the 
dynamical cores and to the subroutine organize_physics into the 
'compute' section. This avoids duplicated code and simplifies
the program structure.

For the Runge-Kutta core these changes are neutral and do give bit-identical
results.

For the Leapfrog core, there are rounding differences, because here the order is
changed, in which the physical tendencies are added.

Before: tendencies = tendencies + (advective tendencies) + (physical  tendencies)
Now:    tendencies = tendencies + (phyiscal  tendencies) + (advective tendencies)



Removal of dead code:
---------------------
(by Ulrich Schaettler, Michael Baldauf)

The following options and related source code have been removed:

 - irunge_kutta == 0:  (src_2timelevel and everything related)

 - lprogprec, ltrans_prec:
   Now the only option is prognostic precipitation. 
   The transport of qr, qs could be switched off again, once the new tracer 
   module is implemented.
   Also: In the Digital Filter Initialization, the advection of qr,qs,qg 
         (which up to now could be switched off with lprogprec=.FALSE.) can 
         be switched off again in the future with the new tracer advection scheme.

   BUT: Now we should cleanup also lprog_qi!!!!!!!


 - itype_conv == 1:  src_conv_kainfri 

 - fast_waves_rk.f90
   Removed unnecessary (internal) options and dead code in that subroutine.



More Technical Modifications:
=============================

Modifications to long meteograph output
---------------------------------------

organize_diagnosis.f90, src_gridpoints.f90
  Additional variables have been added in the long meteograph output:
     SWDIR_S, SWDIFD_S, SWDIFU_S, SNOW_MELT
  This changes the format of the M_*-files; everybody working with these files has
  to adapt the according post-processing programs
    
  In addition, a format for printing the time step has been changed from I5 to I10,
  to avoid stars in the output in case of climate runs.

  For long and for short grid point output, the corresponding grid point variables 
  are allocated only for one step. Only in case of "lgpspec" output, the variables
  are allocated with #(grid point output steps) as a dimension.
  In this way, some memory is saved.


Modifications of the utility modules:
-------------------------------------
(by Uli Schaettler)

The utility modules have been unified again with the latest INT2LM version.
In addition, there have been some amendments.


environment.f90:
  editorial changes; adaptations were necessary in INT2LM

io_utilities.f90: Unification with INT2LM
  => usage of grib_api; new SR read_grib_api
  => new (generic) SR check_input_grid, replacing check_[lm,ec,um]_grid
  => changes to check_gme_grid because of grib_api usage
  => modified interface to read_restart (has to be adapted in COSMO-Model calls)

  The module src_input.f90 has been adapted to the modified interfaces of
  the subroutines check_input_grid and read_netcdf.

utilities.f90:
  => inserted english comments and print-outs in SR tautsp, tautsp2D
  => added several PARAMETER attributes in routines (uv2uvrot, etc.)

  => The interface for the routine diff_minutes (which replaces the DWDLIB 
     routine DIFMIN) has been extended with an argument icalendar, to specify
     the calendar in use. The COSMO-Model variable itype_calendar has to be 
     passed, which specifies:
         = 0: gregorian calendar (default)
         = 1: every year has 360 days
         = 2: every year has 365 days

     In this way we can avoid the different routines difmin_360, difmin_365, etc.

     All interfaces in the COSMO-Model and the INT2LM have been adapted.
     All routines DIFMINxxx have been replaced by diff_minutes. 
     Because diff_minutes is also used in the module io_utilities, there now is 
     a dependency to utilities.f90

parallel_utilities.f90:
  => The interface for the routine distribute_fields has been extended with an
     argument to specify the PE that sends the message (was PE 0 before). This 
     more flexible routine is needed in the spectral nudging now.

     All calls to distribute_fields have been adapted.


Deletion of obsolete Fortran features:
--------------------------------------
(by Oli Fuhrer)

There are still obsolete Fortran features used in the COSMO-Model.
Some of them have been eliminated.

  => Definition of Character variables with *x has been replaced with (LEN=x)
     in: data_1d_global.f90, src_sfcana.f90, src_soil_multlay.f90
  => Computed GOTO has still been used in: semi_implicit.f90
  => Some WRITE formats have been adapted in src_artifdata.f90


Selective smoothing of output fields:
-------------------------------------

Up to now, the following means were available to smooth special fields:
 - l_p_filter     = .TRUE.:  smooth all fields that are written on p-levels
 - l_z_filter     = .TRUE.:  smooth all fields that are written on z-levels
                             also smooth PMSL, PMSL_ANAI
 - l_fi_ps_smooth = .TRUE.:  special smoothing of PMSL and FI in mountaineous terrain

First modification:
  The switch l_fi_ps_smooth has been renamed to l_fi_pmsl_smooth, because not ps but
  pmsl is smoothed in that case.

The actions done are now:

 - Two new switches have been introduced in Namelist group /GRIBOUT/, to independently
   smooth FI and PMSL:
     l_pmsl_filter:  if .TRUE., PMSL is smoothed, independently from the setting 
                                of l_z_filter
          Default: .TRUE.

     l_fi_filter:    if .TRUE., FI is smoothed, independently from the setting 
                                of l_[p/z]_filter
          Default: .FALSE.

 - The actions of l_z_filter / l_p_filter are the same as before


Update of SST over sea during a NWP forecast:
---------------------------------------------

A new Namelist switch lbdsst has been introduced in group /IOCTL/, to update the
Sea Surface Temperature over sea during a NWP simulation.

Default: .FALSE.

NOTE: In climate runs, if lbdclim=.TRUE., SST is updated anyhow with boundaries, but
in usual weather forecasts, it is kept constant during the model run. With lbdsst=.TRUE.,
boundary values are taken to update SST over sea only.


Additional ASCII Output for COSMO Testsuite:
--------------------------------------------
(by Oli Fuhrer)

To compare COSMO-Model output from different test runs, additional output is 
written to a file YUPRTEST. This output has been implemented within 
organize_diagnosis.f90 Some new routines have been implemented in 
src_meanvalues to do this output.

New Namelist switch in /DIACTL/ to activate the testsuite:   ltestsuite
(Default: .FALSE.)

When to do output: at the moment this is hard coded with
      IF ( ( ANY(ntstep == (/ 0, 1, 2, 3 /)) .OR. (MOD(ntstep,10) == 0) ) &
           .AND. (l2tls .OR. ntstep /= nstop) ) THEN
   which means: at step 0,1,2,3 and every 10th step
           (for the Leapfrog core, the last time step is not written any more, because
            at the time of output it has not been Asselin-filtered and will therefore
            not be reproducible as compared to a longer run)

New routine in src_meanvalues:    mean_testsuite
  This new routine calls another routine print_testsuite, which gets a COSMO-field 
  (2D or 3D) as argument. The routine print_testsuite has a generic implementation,
  taking care of fields with different dimensions.

The output is written to an ASCII file YUPRTEST.


----------------------------------------------------------------------------

CLM Extensions for next unified Release:
========================================

Spectral Nudging
----------------
(by Burkhardt Rockel)

  => New Namelist parameter nincsn introduced in /DYNCTL/, to define a time
     increment for calling spectral nudging. Default is nincsn = 1.
  => src_spectral_nudging.f90: 
       Only allow 4D prognostic variables.

       Several changes for better parallelization
          A new SR distribute_fields2 has been proposed, where a special
          PE can be specified as sender. The old SR distribute_field 
          could only use PE=0 as sender.
          Instead we extended the interface of SR distribute_field with
          a new argument for the sender and adapted all CALLs to 
          distribute_field.


Introduction of prescribed surface albedo
-----------------------------------------
(by Daniel Luethi, + work from Juergen Helmert)

  Prescribed surface albedo values, based on MODIS, are read from the initial 
  file. They have to be provided by INT2LM. Two new fields have been 
  introduced for that purpose.

  DWD added other options for itype_albedo and another external parameter 
  field.

  The new GRIB numbers for the new fields are:

    alb_dry:  albedo of dry soil         iee = 127, itabtyp=202
    alb_sat:  albedo of saturated soil   iee = 128, itabtyp=202
    alb_dif:  diffuse solar albedo       iee = 129, itabtyp=202

  A new Namelist parameter itype_albedo has been introduced in /PHYCTL/
    itype_albedo = 1 (default): soil albedo is a function of soiltype
                                (old treatment)
                 = 2: soil albedo is prescribed by external fields
                 = 3: background albedo is prescribed by external fields
                 = 4: vegetation albedo is modified by forest fraction

  For itpye_albedo=2, ALB_DRY and ALB_SAT are defined as mandatory fields for 
  input. For itype_albedo=3, ALB_DIF is mandatory. These fields are also 
  written to restart files.

  In src_radiation.f90, new code has been added to deal with the new methods
  to determine the soil albedo from the dry and saturated values and relative 
  saturation of the top soil layer or from the diffuse solar albedo.

  Description of MODIS Albedo Processing, provided by D. Luethi, ETHZ:
    The CommunityLandModel provides a file with global soil color data on
    a regular latitude/longitude grid with a resolution of 0.5 deg. The
    soil color is then converted in albedo values by 4 lookup tables for
    two spectral bands (visible and near infrared) and for dry and
    saturated soils. Since the radiation scheme in CLM doesn't distinguish
    between different spectral bands for the albedo a weighted mean of the
    albedo values for the two bands is calculated with a weighting factor
    of 0.53 for the near infrared band (according to the relative
    contribution of solar energy from this band). This leaves us with
    an albedo value for both dry and saturated soil at each land grid
    point of the original dataset.

    An offline program is used to do all these calculations and to
    interpolate the data to a given CLM grid taking the land-sea-masks
    of the new grid and the original grid into account.
  
    The treatment of wet soils is also changed with respect to the
    original scheme that uses a coefficient which depends only on the
    soil type and which is multiplied with the soil water content in the
    top soil layer. The product is then added to the albedo value for
    the dry soil. With the prescribed albedo fields a linear interpolation
    between dry and saturated values based on the relative saturation is
    applied, where the pore volume and air dryness point are used to
    determine the relative saturation.

  Description of Albedo Processing for the options itype_albedo = 3/4

    itype_albedo = 3: (F. Brenner und J. Helmert)
       In cooperation with the ECMWF a monthly mean albedo has been taken out 
       of a 5-year climatology made by compositing, and gap-filling the MODIS 
       BRDF data. Background albedo values are calculated at local solar noon, 
       but can be determined at any desired solar zenith angle. Currently one 
       data set of diffuse albedo is implemented in COSMO external parameters. 
       This can be extended, since MODIS provides direct and diffuse albedo in 
       dependency on different wavelengths.

     itype_albedo = 4: (J. Helmert)
       According to the results of Moody et al. (2008) using five years (2000-04)
       of spatially complete snow-free land surface albedo data, a dependency of
       the vegetation albedo on the forest fraction was implemented. Currently
       the fraction of deciduous and evergreen forest is considered and serves
       as a proxy of remote sensing derived background albedo data.


Introduction of new GHG concentration scenarios, RCPs
-----------------------------------------------------

  => RCP2.5=RCP3PD, RCP4.5, RCP6 and RCP8.5
     (by Hans-Juergen Panitz (KIT), Klaus Keuler (BTU), Matthias Buechner (PIK))

     The basis for the new RCPs is the agglomerative radiative forcing (RF)
     (W/m**2) due to all greenhouse gases (GHG) as they are available from the
     RCP Web-page:     http://www.pik-potsdam.de/~mmalte/rcps/

     The RF has been converted to an equivalent CO2 concentration (ppm) using
     the formula
                   RF = 5.35*ln(C/278)

     with
         C = CO2 equivalent concentration (ppm)
         278 = pre-industrial CO2 concentration (ppm)
         RF = radiative forcing (W/m**2)

     This has been done for all four RCPs:  RCP2.6, RCP4.5, RCP6, and RCP8.5

     Applying fourth order polynome fits (5. order for RCP2.6) for the years 1950
     until 2150 the concentrations have been adapted to CCLM.

     To take into account the new RCPs the value range of Namelist parameter 
     ico2_rad (group /PHYCTL/) has been extended from 7 to 10:
        ico2_rad = 7: scenario RCP2.6 is chosen
        ico2_rad = 8: scenario RCP4.5 is chosen
        ico2_rad = 9: scenario RCP6 is chosen
        ico2_rad =10: scenario RCP8.5 is chosen


  => Limiter for GHG forcing
     Because the fitted functions of the new RCPs tend to elope prior and beyond 
     certain years when going outside of the period they were fitted to, they 
     need to be restricted to their original fitting interval.  This was not 
     implemented for the SRES scenarios either. Now there is a lower boundary of 
     year 1950, where, when simulate in earlier periods, the forcing is fixed to 
     1950 values.  The upper boundary depends on whether you choose a SRES or a 
     RCP scenario.  The upper boundary for SRES is 2100 (as commented in the 
     source code) and 2150 for RCPs.  ico2_rad=0 (constant) will not be affected 
     by this change. A message to stdout will be written, when the limiter is active.

  => CO2 stabilisation
     This feature is to perform simulations with stabilized GHG forcings, 
     e.g from 2100 on.

     Two new parameters were added in name list group /PHYCTL/: 
       lco2_stab:    if .TRUE., activates the feature of GHG stabilization;
                     the default value is .FALSE.
       iy_co2_stab:  INTEGER variable defining the year when GHG stabilization 
                     begins; default value: 2001
                     It is without effect, if the feature is disabled.


Implementation of time dependent boundary values for aerosol optical depths.
----------------------------------------------------------------------------
(by Daniel Luethi)

  In case of itype_aerosol=2, new boundary fields have been introduced for:
    dust aerosols:           aer_du_bd
    sulfate aerosols         aer_su_bd
    sea salt aerosols        aer_ss_bd
    black carbon aerosols    aer_bc_bd
    organic matter aerosols  aer_or_bd
  to update these fields during climate simulations


Support for climatological year with 365 days
---------------------------------------------
(by Burkhardt Rockel)

  The usage of a 365 days calendar is defined by setting the Namelist parameter
  itype_calendar = 2.

NOTE:
The new routines difmin_365, datjul_365, etc. that have been 
proposed by the CLM community for the treatment of this new calendar, have not
been taken. 

Instead we did the following:
The routines difmin and datjul from the external GRIB (or MISC) library have 
been replaced a new COSMO routine "diff_minutes" (located in utilities.f90)
This routine has been extended with the argument itype_calendar, and the
different calendars are now treated within this routine.
No other routines are necessary now. 


New diagnostic variables
------------------------

  Introduction of new diagnostic variable for maximum wind speed in 10m height
    variable name:        vabsmx_10m
    Output variable name: VABSMX_10M

  GRIB number defined by DWD:    iee = 216, itabtyp = 201

  Be aware that VABSMX_10M is really the maximum wind speed in 10 m height
  and not the maximum gust, which is denoted as VMAX_10M!!


  Diagnostic Snow melt for output purposes only added. 
  (Originally done by Uwe Boehm.)
  The output variable is called as SNOW_MELT. It is accumulated over the storage 
  interval.  snow_melt includes contributions of melting of snow penetrating the 
  soil (up to field capacity), and/or contributing to surface run-off.
  Therefore it appears already in the water balance equation in both terms.


Changes for Restart / NetCDF I/O
--------------------------------

  => new flag "i" to distinguish between ocean and inland water (lakes) 
     quantities (for netCDF output only)

  => all SSO related variables got the flag 'l'

  => several corrections for netCDF definitions

  => write global attributes in netCDF only if they are defined

  => new default for ncglob_realization_d=-999 (means "not set")

  => Additional SSO related fields necessary for correct restart:
     include ut_sso, vt_sso, tt_sso, ustr_sso, vstr_sso, vdis_sso into 
     src_setup_vartab.f90


     NOTE: official GRIB Numbers have been given by DWD
           The names UT_SSO, VT_SSO, TT_SSO have been changed to
                     DU_SSO, DV_SSO, DT_SSO
           to be consistent with other DWD applications and with the 
           similar quantities from convection DU_CONV, etc.

  => LHFL_S and SHFL_S added to list of restart parameters in any case.
     This is especially necessary to run the IFS convection scheme 
     correctly in case of restart

  => src_input.f90:
     In case of restart: change input directory of restart file from 
                         ydirini to ydir_restart

  => io_utilities.f90:
     Overcome restrictions for large netCDF files (> 2Gb). 
     This is compatible with netCDF versions 3.6 and higher

     Another proposal: use IOR(nf90_clobber, nf90_64bit_offset)



Variables for multi-layer snow model
------------------------------------

  => A new I/O variable RHO_SNOW_M (rho_snow_mult) has been added
     Changes to allow this and also the other multi-layer snow variables
     in NetCDF and Restart files

  => correction in fill_realarray for level determination of multi-layer 
     snow model
     (most probably this is also wrong in fill_gribarray, so it has been 
      modified there also).

  => src_soil_multilay.f90: 
     correction for multi layer snow model in case of restart

  => data_io.f90: idims_id_out for ke_snow added

  For the snow density rho_snow_mult of the multi layer snow model a GRIB 
  number of 184 is assumed.  This should be changed to an official number.

NOTE: The GRIB coding of ALL multi-layer snow variables is not yet standard, 
      because a non-official level type has been chosen. For the moment we left
      everything as it is, but there is a good chance that this has to be 
      changed in the near future.



Miscellaneous
-------------

  => src_output.f90:
     Delete the #ifdef GRIBDWD and corresponding #endif in Subroutine makegds
     This SR has to be performed also in case of restarts!

  => utilities.f90:
     translation of error messages into English in tautsp and tautsp2d

  => src_flake.f90:
     - restrict writing information to debug output
     - set  t_snow_mult = t_snow only for grid points depth_lk > 0.0,
       otherwise program may crash later on in organize_dynamics

  => src_output.f90:
     - Correction of calculating rlon and rlat for netCDF output
       related to definition of subregions (Namelist parameter ydomain = 's')

     - only for climate mode: 
       reset all necessary precipitation "components" like RAIN_GSP etc.
       to zero in case that only TOT_PREC is an output variable
       Without this change TOT_PREC would continuously increase

  => src_input.f90:
     for 'binary' input allow T_SO(ksoil=0) to be read instead of T_S

  => src_setup_vartab.f90:
     Add unit W m-2 to SOD_T and ASOD_T
     Change of flag for FR_LAKE; has to be empty ' ' instead of 'l'




And the un-avoidable
====================

Minor technical modifications:
------------------------------

 - organize_data.f90: Settings of yvarini / yvarbd
    In Version 4.12, these variables have been eliminated as Namelist variables. But we 
    still left the structure that default-variables have been set and after reading all
    Namelist input, the variables have been modified according to the Namelist settings.

    Now these variables are set only after all Namelist Input is done (in the action 
    "start" of organize_data).

 - time_utilities.f90:
    The subroutine collect_timings has been modified to save memory. In long climate runs,
    when using many processors, it could happen that the available memory is too small to
    allocate the local structure in which the times from all processors are gathered.

    To avoid that, now every processors computes the necessary sums over all times. 
    If an hourly output is chosen (itype_timing=1/3), then a loop over all hours is done,
    and the values are only gathered per hour. 

    This results in a much smaller memory footprint, but perhaps a larger compute time,
    and should not be chosen for production runs.

    The options itype_timing=2/4 are not affected by that.

 - mpe_io.f90:
    Cray computers have trouble with the communication in SR mpe_db_init, where a processor
    sends data to itself. This is avoided now.
    For the sending in this SR, a buffered send (MPI_BSEND) has been implemented optionally,
    if the module is compiled with -D__MPICH2


Bug Fixes:
----------

 - src_advection_rk.f90:
    Bug fix for call to SR global_values in SR limit_contravar_vert_veloc (line 1454):
    needs imp_integers not imp_reals

 - src_allocation.f90:  Allocation of special fields:
   Some fields are allocated only in special cases, but are listed in subroutine
   interfaces. This can lead to compiler errors, so allocate these fields anyhow:
     depth_lk, rcld, edr, ut_sso, vt_sso

 - src_artifdata.f90: Corrected some print outs

 - src_leapfrog.f90:
    Bug Fix for computing MAX(w): this should only be done in the interior of the
    domain to give reproducible results

 - src_output.f90:
   The subroutine makegds is used by restarts and must not be embraced by
   ifdef GRIBDWD (by H.-J. Panitz)
   The total precipitation rate TOT_PR is defined in setup_vartab, but is 
   not computed. This has been added. (by Oli Fuhrer)

 - src_runge_kutta.f90:
    Additional boundary updates are needed for the option  y_vert_adv_dyn == "impl3"
    since the computation of the  courant number for vertical u,v-advection requires
    wcon at neighboring grid points.

 - src_slow_tendencies_rk.f90: Turbulent diffusion of cloud ice qi was done, even if 
    ltur=.FALSE.; The IF-statement in line 1585 has been corrected

 - turbulence_tran.f90:
   Subroutine cloud_diag has been called with the same field in different 
   arguments. For the INTENT(IN)-argument, a local copy has been done now.

 - turbulence_diff.f90: With ifdef __COSMO__ a boundary exchange is called, but the 
    necessary variables and SR exchg_boundaries have not been used. These are now
    USEed, also within ifdef __COSMO__
    This boundary exchange is only necessary, if imode_turb == 3 is chosen, what
      is not done in usual recommended settings.

--------------------------------------------------------------------------------------


Summary of Changes of Namelists:
================================

/RUNCTL/

 - new option for itype_calendar:  = 2:   support for a climatological year with 365 days

/DYNCTL/

 - new options for y_scalar_advect:
    = BOTT2_STRANG_B, BOTT4_STRANG_B:  
      as the already existing BOTT2_STRANG, BOTT4_STRANG, but only in the lowest k_offset
      levels of the atmosphere (k_offset is hardcoded to 5).

    = BOTT2_XYZYX, BOTT4_XYZYX:
      Advection with modified sequence of Strang splitting compared to the ones already
      implemented (ZYXYZ).


 - new NL switch for Spectral Nudging:
   nincsn:  to define a time increment for calling spectral nudging.
      Default:  1

 - irunge_kutta: eliminated option =0 for this variable.
     Associated with irunge_kutta=0 was the src_2timelevel dynamical core, which has 
     been eliminated.


/PHYCTL/

 - new NL switch itype_albedo: type of surface albedo treatment
   allowed options:
      = 1 (default) surface albedo is a function of soiltype
      = 2 surface albedo is prescribed by external fields
      = 3 background albedo is prescribed by external fields
      = 4 vegetation albedo is modified by forest fraction

 - ico2_rad:  added CO2 scenarios to choose from. New scenarios are:
      =  7: Scenario RCP2.6
      =  8: Scenario RCP4.5
      =  9: Scenario RCP6
      = 10: Scenario RCP8.5

 - new NL switch lco2_stab: to perform simulations with stabilized GHG forcings
     (Default is FALSE)

 - new NL switch iy_co2_stab: to define the year when GHG stabilization begins
     (Default: 2001), but is without effect, if lco2_stab=.FALSE.

 - itype_conv: eliminated options
      = 1: Kain-Fritsch Convection scheme
      = 2: Bechtold scheme (which was never implemented anyhow)
   So the only choosable options at the moment are: 
      = 0: Tiedtke convection
      = 3: Shallow convection

 - Eliminated switches lprogprec, ltrans_prec: Now all simulations are done with
   prognostic precipitation and transport of precipitation.


/IOCTL/

 - new NL switch lbdsst: to provide boundaries for Sea Surface Temperature during
                         a weather (not climate) forecast.
      Default: .FALSE.

 
/GRIBOUT/

 - renamed NL switch l_fi_ps_smooth to l_fi_pmsl_smooth, because it is really the
   mean sea-level pressure, which is smoothed!

 - new switches
    => l_fi_filter:    to filter geopotential FI independent of l_p_filter settings
    => l_pmsl_filter:  to filter mean sea-level pressure PMSL independent of 
                       l_p_filter/l_z_filter settings

/DIACTL/

 - new NL switch ltestsuite, to activate additional ASCII output, which is used
   for the technical test suite.

--------------------------------------------------------------------------------------

Changes of the Results:
=======================

The following changes influence the results:


 - Parameterization of the cloud cover for ice clouds in src_radiation.f90:
   All applications are influenced by this modifications


 - Leapfrog: The applications which use the Leapfrog dynamical core are influenced 
   by the following modifications:

     => Optimization in src_leapfrog (removed a construct "+ field - field") does
        numerically change the results
     => moving the computation of the total physical tendencies to organize_physics
        does numerically change the results because of the different summation order.
     => The bug fix for computing MAX(w) changes the results.

--------------------------------------------------------------------------------------

Other technical impacts
=======================

New GRIB 1 Numbers:
-------------------

The following new fields have been added in src_setup_vartab with corresponding 
Grib 1 Numbers:

   Name               Meaning                                 iee        itabtyp

  VABSMX_10M       maximal wind speed in 10m                  216         201

  ALB_DRY          surface albedo field for dry soil          127         202
  ALB_SAT          surface albedo field for saturated soil    128         202
  ALB_DIF          diffuse albedo field                       129         202

  DU_SSO           tendency of u due to SSO                    43         202
  DV_SSO           tendency of v due to SSO                    44         202
  DT_SSO           tendency of t due to SSO                    45         202
  USTR_SSO         u-stress due to SSO                        231         202
  VSTR_SSO         v-stress due to SSO                        232         202
  VDIS_SSO         vertical integrated dissipation of 
                            kinetic energy due to SSO         233         202

NOTE: The variables of the multi-layer snow model still have un-official Grib numbers, 
      because the Grib treatment of such variables is not yet standardized!


Long Meteograph output:
-----------------------

New fields have been added to the long meteograph output.
Therefore the format of the files M_* has been changed.


Selective smoothing of output fields:
-------------------------------------

Up to now we only had the possibility to filter all variables listed in p- or z-level output
or none fo them (with the variables l_p_filter, l_z_filter). Now some special fields can be 
filtered independent from the setting of l_p_filter or l_z_filter.

The following settings are now recommended:

  - l_p_filter    = .FALSE.:   Default
  - l_z_filter    = .FALSE.:   Default

  - l_fi_filter   = .TRUE.:    filter the geopotential on p-levels
  - l_pmsl_filter = .TRUE.:    (Default) filter the mean sea level pressure

Performing Restarts:
--------------------

The input directory for restart files has been changed from ydirini to ydir_restart


Ulrich Schaettler

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

4.22:                                                    31.01.2012
=====


Revision of the nudging code (Christoph Schraff)
----------------------------

- re-structuring of the code with the aim to have sets of modules (with clean
  interfaces) that can be used rather easily by other codes such as the
  3DVAR-LETKF package (of DWD). This relates to: 
  - modules for reading NetCDF obs input files + obs pre-processing
  - (preliminary) preparations for modular observation operators for
    multi-level reports

- more flexible observation input: 
  - by enabling several input files for the same observation type
  - by treating more variables as optional instead of mandatory

- optimisations for speed-up on NEC-SX9 (only):
  nudging part by > 25 % , whole nudging run by > 15 % (speed-up)

- option for writing NetCDF feedobs files (for LETKF / for verification;
  includes additional flags and elements (e.g. solar zenith angle))

- revised format of the VOF (YUVERIF) file (e.g. bit patterns in octal instead
  of decimal format in the formatted ASCII file)

- height differences between station / model orography considered in a more
  consistent way (for grid point assignment, station selection, obs errors, etc)

- new flag words, more consistent setting of flags / monitoring statistics
  (for a passive obs / report, the reason for rejection is now always indicated)

- after checking for redundancy, the redundancy check loop is re-run with
  different settings to put TEMP or PILOT parts A, B, C, D together in order to
  obtain more complete profiles

- no redundancy any more between 1 RASS + 1 wind profiler , or between
  2 different ships (this helps the verification / monitoring)

- quality control: no temporal consistency check (within the 'spatial
  consistency check'), this has greatly improved 2 cases with severe analysis
  errors

- latitude dependent reduction of geostrophic wind correction introduced,
  in order to get reasonably small geostrophic increments near the equator

- bug fixes, e.g. 
  - prevent vertically collocated levels after redundancy check
  - condition to reject AMDAR obs with reported height below model orography:
    replaced by pressure condition, because reported height is ficticious
  - avoid array bound violations, etc.

- new option for mobile TEMP / PILOT

- new option for use of GPS zenith total delay ZTD (resp. integrated water
  vapour IWV) obs from NetCDF obs input files (preference of processing centers
  can be selected by namelist)

- new option for use of scatterometer 10-m wind (using a simple NetCDF file
  obtained by an offline pre-processing tool)

- new option for a new balancing: pressure increments which balance wind
  analysis increments at the lowest model level geostrophically (with 2 options:
  (for scatterometer wind only, and additionally for in-situ 10-m wind obs)

- new options for new weighting for multiple observations / observation types:
  - with the new weighting for multiple observations, the effective horizontal
    scale is not adjusted to the data density as efficiently as with the default
    weighting, but it does not have the undesired property to decrease the total
    weight of all observations together if further observations are added
  - net increments and weights can be computed separately for different
    pre-specified sets of observing systems; this helps improving the relative
    influence of e.g. sparse radiosonde data and high-resolution data such as
    surface obs, GPS obs, future satellite retrievals or radar radial winds

Radiation
---------
  (by Thorsten Reinhardt)

Introduce zenith angle dependency of solar radiation for each timestep,
switched on by internal parameter l_zenith_update.


Changes of Results
------------------

The changes of the radiation changes the results.

Most code changes of the nudging do not change the results or change them only
very slightly as long as the new options for the new balancing of near-surface
wind, the weighting of multiple observations, or the use of new observation
types are not used actively. Some changes will occur due to the modified
station selection of surface pressure observations, and due to the bug
correction at the rejection of aircraft reports very close to the ground.
However, the impact by these changes on the results usually remain small too.
On very rare occasions, very large improvements have been found due to a more
successful rejection of data from a single buoy station where the observations
gradually drift away from the 'truth'.

In the tropics near the equator, however, the results will be strongly changed
due to the latitude dependent reduction of geostrophic wind correction (provided
that this correction is used actively). This change can be regarded as a bug
correction.

Interdependencies
-----------------

The new version will write VOF Version 3 instead of Version 1. If the program
'LMSTAT' is used to read and complete the VOF (YUVERIF) files produced by the
current COSMO version (for the purpose of the upper-air verification), then
the version of 'LMSTAT' must be at least V1_7 .

Changes of the Namelist Input:  limited to group /NUDGING/ only
---------------------------------------------------------------

New namelist variables:

  - 'mveripr' : switch for writing VOF and/or feedobs files
                = 0 : no file written, equivalent to 'lverif=.false.'
                = 1 : NetCDF (feedobs/feedbk) file for LETKF or verification
                = 2 : ASCII file VOF (YUVERIF)
                = 3 : both NetCDF and ASCII VOF
       -->  default value = 3

  - 'mpsgcor' : switch for applying geostrophic pressure increments
                balancing near-surface wind analysis increments:
                = 0 : no pressure correction
                = 1 : correction. balacing wind from scatterometer only
                = 2 : correction balacing scatt. + in-situ 10-m wind obs
       -->  default value = 1

  - 'qgeops'  : reduction factor to the geostrophic pressure increments

  - 'lscatt'  : for active use of observation type 'scatterometer'
       -->  default value = .true.

  - 'maxmlv'  : max. number of observation levels in multi-level report
       -->  default value = 100  (equal to the fixed value of the old version)

  - 'mxfrep'  : max. number of reports in NetCDF feedobs file 
  - 'mxfobs'  : max. number of observations in NetCDF feedobs file
                (if mxfrep, mxfobs <= 0 then reasonable values are computed
                 dynamically from maxmlo, maxsgo, hverend etc.)
       -->  default values = -1

  - 'lcd037'  : for active use of new observation code type TEMP MOBILE
  - 'lcd038'  : for active use of new observation code type PILOT MOBILE
  - 'lcd123'  : for active use of new obs code type 'scatterometer ASCAT'
  - 'lcd122'  : for active use of new obs code type 'scatterometer OSCAT'
       -->  default values = .true.

  - 'igpscen' : GPS processing centres assigned as active obs code types,
                ordered according to their preference in the redundancy check;
       -->  default (=-1) means that no GPS processing centre is used actively

  - for new weighting of multiple observations and observation systems:
    'nwtyp'   : if > 1 then compute net obs. increments for 'nwtyp' different
                sets of observing systems (obs types or code types) separately
    'niwtyp'  : number of observing systems for each set of obs systems
    'iwtyp'   : defines these sets of observation systems
    'kwtyp'   : defines the multiple weighting function for each of these sets
       -->  default values equivalent to the hitherto used weighting

  The default settings of the new namelist variables imply that the previous
  settings of the nudging scheme are used as long as there are no observation
  input files for scatterometer data (except that a NetCDF feedobs file is
  written additionally).

Other changes to the namelist:

  - Namelist parameters 'lseparw' and 'kmultw' are removed 

  - Modified default values and meaning of 'doromx' (due to modified meaning of
    'fdoro'): 100.,150.,150.,150.; positive height differences (z-obs > z-model)
    between station height and model orography are scaled by a factor of 1/4 for
    station pressure and GPS IWV obs, since extrapolation is replaced by inter-
    polation in this case (i.e. max. height differences of 600 m are allowed)
    --> This implies that if the values for 'doromx' have been set explicitly
        in the namelist for the previous version, these values should be adapted
        with the new COSMO version !
        If the values have not been set in the namelist explicitly and the
        default values have been used, no changes are required. 

Christoph Schraff

-------------------------------------------------------------------------------

4.21:                                                    06.12.2011
=====

This new version fixes a problem that occured with 4.20, that the amount
of precipitation was much too low. Reasons for that were within the latent
heat nudging, but also within the microphysics.


Besides that, the Smagorinsky diffusion for u and v has been implemented.


Changes to the Microphysics:
----------------------------

Introduction of a tuning factor rain_n0_factor in NL group /TUNING/:
With this factor the intercept parameter n0 in the rain drop size distribution
can be modified. This factor has to be set depending on the grid scale
precipitation scheme used (hydci_pp or hydci_pp_gr) and the value of mu_rain:

 - Setting for hydci_pp (COSMO_EU like applications)
     mu_rain        = 0.0
     rain_n0_factor = 1.0

 - Setting for hydci_pp_gr (COSMO_DE like applications)
     mu_rain        = 0.5
     rain_n0_factor = 0.1

(by Axel Seifert)

Explanation: The parameter mu_rain generalizes the up to now assumed exponential
size distribution for rain drops N(D) (D=drop diameter) to a gamma-distribution

N(D) = N0(lambda) * D^mue_rain * exp(-lambda*D).

(For mu_rain = 0.0, the old exponential distribution is recovered).
The physically meaningful parameter range for mu_rain is about 0.0 - 5.0.

However, because the cloud microphysics is a one-moment-parameterization, only one of the 3
parameters of N(D) is actually prognostic, which we choose to be lambda (the "shape" parameter).
For the others, we choose to set mu_rain (the "shape" parameter) fixed
and to assume a certain dependence of N0 on lambda (the "slope" parameter, [m**-1]), as suggested
by drop size distribution measurements. Here the relation of Ulbrich (1983) is used, which reads

N0 = N00 * exp(3.2 * lambda)

with N00 = 8e6 m**-4.

In this way, the equation system is closed.

However, because on average, the parameterization of the frozen-phase growth processes
in the current graupel scheme seems to be too inefficient to produce "enough" precipitation sized
particles, we artificially reduce the evaporation of raindrops to get the "correct" rain amount at
the surface, by tuning the N00 parameter with a factor rain_n0_factor (<= 1),

N00_tuned = N00 * rain_n0_factor  .

By this measure, the mean drop size is increased and
larger drops evaporate less efficiently than smaller drops.

(by Uli Blahak)


Changes in the Latent Heat Nudging:
-----------------------------------

In order to correct quickly for the negative impact of the bug fix in
4_20 and nevertheless a better accounting for blacklist information and
bright band detection the check of those flags has been moved from
"SUBROUTINE lhn_obs_prep" to "SUBROUTINE lhn_pr_ana". 
In the case that the observation is blacklisted or detected as bright
band the analysed precipitation rate is set to the modelled
precipitation rate. As the analysed precipitation rate will be used for
comparison with the modelled precipitation rate further on, no LHN will
take place at those grid points.
This will be a temporally change until the approach is redesigned in a
more sophisticated way.
Changes in diagnostics:
numblack = SUM(blacklist(:,:)) instead of counting it during a loop.

(by Klaus Stephan)


Horizontal nonlinear Smagorinsky diffusion
------------------------------------------

Sometimes the COSMO model aborts due to horizontal shear instabilities. 
Some of these crashes can be avoided by the 4th order 'artificial horizontal 
diffusion' with a prescribed constant diffusion coefficient.
But in rare events this diffusion is not strong enough and a more physically 
based diffusion mechanism is necessary.
The nonlinear Smagorinsky diffusion (Smagorinsky (1963) MWR) determines the 
diffusion coefficient by the horizontal shear (and tension) strain and 
therefore acts in particular to reduce too strong horizontal shear.

It is switched on by the new DYNCTL namelist parameter 
'l_diff_Smag=.TRUE.' (otherwise it has no impact to the results).
(Default is .FALSE.)

An internal parameter, the Smagorinsky constant, is currently set to  c_smag=0.03.
This value is chosen to prevent shear instabilities in COSMO-DE applications, 
but otherwise to influence as less as possible the verification scores.

(by Michael Baldauf)


Computation of wind gusts:
--------------------------

Another option was added for computing the maximal wind gusts
(itype_diag_gust=4), where the gust factor weakly depends on the mean
wind speed at 10 meters. This method is also used in GME.

(by Jan-Peter Schulz)


Bug fixes and technical adaptations:
------------------------------------

 - lmorg, src_advection_rk:
   In the calls to exchg_boundaries within the ifdef POLLEN loops,
   the argument num_compute was missing.

 - organize_physics:
   Added some more debug output

 - src_lheat_nudge:
   The variables numlast, numnext were not used and have been eliminated.

 - src_obs_proc_cdf:
   In 2 print statements, the variables had a wrong order

 - src_output, SR calc_sdi:
   variable izerror was uninitialized in SR calc_sdi
   (by Oli Fuhrer)

 - src_output, bug in calls to SR radar_lm_ray:
   The routine requires hydrometeor densities (kg/m**3), not specific 
   values (kg/kg), so added necessary multiplications with rho.
   (by Uli Blahak)

 - src_output, bugfixes in p_int for linear vertical interpolation (itype_vertint=2)
    - monotonically increasing (dummy) p-values are also required below the
      surface for routine lininterp2D_xinter1D_vec(). 
    - error in field dimension when calling lininterp2D_xinter1D_vec
      (-> model crashes) was corrected.
   (by Uli Blahak)

 - pp_utilities, SR radar_lm_ray
   This subroutine has been updated to reflect recent changes in the microphysics
   (SR hydci_pp and hydci_pp_gr, provided by Axel Seifert. The reflectivities of 
   cloud ice and cloud droplets have been added to radar_lm_ray, based on a 
   monodisperse size distribution with D_i = 200 (cloud ice) and D_i = 20 (cloud
   droplets) microns.

   A bug has been fixed: A factor involving N0_snow ( n0s**(1-p_s) ) was doubled
   and lead to underestimation of dbz_snow of 40 - 50 dB. This has been corrected.
   (by Uli Blahak)

 - pp_utilities, SR cal_conv_ind:
   Fixed allocation/deallocation of zsli: it has also to be computed in case of 
   derivation of swiss12-Index even when optional input parameter sli is not present.

 - pp_utilities, SR calhzero:
   If no 0-degree isotherm can be found, the height of this
   isotherm was set to about 8000 meters. That no isotherm can 
   be found can have two reasons:
   => in the unlikely case that the 0-degree isotherm really
      is above 8000 meter
   => or if the 0-degree height is below model topography,
      what of course will happen in winter time.

   The height of the 0-degree isotherm is now set to a missing
   value (-999.0), if this is the case.
   (by Daniel Leuenberger)

 - src_flake:
   Technical changes in few subroutines to allow for inlining and vectorization 
   on the NEC SX systems.


Changes in the Namelists:
-------------------------

New Namelist parameter in DYNCTL:

  l_diff_Smag:    to switch on/off the Smagorinsky diffusion    (Default: FALSE)


New Namelist parameter in TUNING:

  rain_n0_factor: to reduce the evaporation of raindrops        (Default: 1.0)
                  (0.0 <= rain_n0_factor <= 1.0)

!!! Changed default value of mu_rain for microphysics !!!

  mu_rain                                 Default setting changed to: 0.0_ireals

The namelist parameter mu_rain can now also be used for the subroutine hydci_pp,
which is used in coarser grid applications. Because these applications are still 
in the majority, we decided to set the default of mu_rain for these applications,
which is 0.0! For higher resolutions, which do use the graupel scheme (subroutine 
hydci_pp_gr), a value of mu_rain=0.5 is recommended and has to be changed in the
namelists!!!


-------------------------------------------------------------------------------

4.20:                                                    31.08.2011
=====

Technical changes regarding unified COSMO-ICON physics:
-------------------------------------------------------

The organizational structure of calling the different schemes within the 
turbulence has been modified with regard to the future changes for the 
unified COSMO-ICON physics.

The most important changes are:

 - Introduced new utility module:  turbulence_utilities.f90
   contains subroutines: canopy_source, diag_level, init_volume_canopy, 
                         init_surface_canopy, stab_funct, turb_param

 - Introduced new interface module turbulence_interface.f90
   contains subroutine organize_turbulence
   This subroutine is called from organize_physics and contains the part
   "IF (ltur)" from there. In addition it does some presettings for TKE
   time stepping.

 - Introduced new module           turbulence_tran.f90:
   contains the subroutine turbtran.
   This is the former include file turbtran.incf, now as an extra module.
   The subroutine is called with a bigger argument list, where all 
   fields and some control variables are passed (as is required by the 
   COSMO-ICON physics).
 
 - Introduced new module           turbulence_diff.f90:
   contains the subroutine turbdiff.
   This is the former include file turbdiff.incf, now as an extra module.
   The subroutine is called with a bigger argument list, where all 
   fields and some control variables are passed (as is required by the 
   COSMO-ICON physics).

 - Moved some global data definitions to module data_turbulence.f90

 - organize_physics.f90:
   Introduced call to new subroutine organize_turbulence which organizes the
     calls to the packages for turbulence parameterization
   Re-organized 'init'-phase for the turbulence (now calls init_volume_canopy
     and init_surface_canopy

 - The former module src_turbdiff.f90 now is obsolete.


Digital Filter Initialization:
------------------------------

The backward-forward filtering (ndfi=2) has been disabled for the 
Runge-Kutta scheme. Because of the nature of this scheme, an adiabatic
backward integration is not possible.


Changes in the dynamics:
------------------------

 - Runge-Kutta substeps:
   The sub-stepping in the Runge-Kutta scheme has been modified, so that
   an additional small step is done in the third Runge-Kutta step.
   Now, always the 2/3/6 or 4/6/12 ... small steps are done for the Runge-Kutta
   steps. This is slightly more stable but will also increase the run time 
   a bit.

   The modification has been implemented with an internal switch in the 
   subroutine calc_small_timestep: icalc_version
     icalc_version = 0 (now default): use new method
                   = 1: do the same as before

 - src_slow_tendencies_rk.f90, slow_tendencies.f90:
   Limit the horizontal velocity to a maximal value of vel_min=0.01,
   to prevent 0 heat/moisture fluxes at 0 windspeed.




Changes in the physics:
-----------------------

Radiation:
  Bug fix in sub grid scale cloudiness


Microphysics:

  Correction of size distribution for rain droplets (in hydci_pp, hydci_pp_gr).
  Generalization of implementation for arbitrary mu_rain.
  (by Axel Seifert)

  Bugfix in density correction of fall speeds (by Thorsten Reinhardt)
  Added missing factor zrho1o2 for consideration of density in the sedimentation
      of rain and snow (in hydci_pp)


Turbulence:

  Additional 3D arrays for additional TKE sources by the action of other
  sub grid scale flow patterns have been introduced:
   tket_conv:  TKE-tendency due to convective buoyancy   
   tket_hshr:  TKE-tendency due to (seperated) horizontal shear
   tket_sso:   TKE-tendency due to SSO wake production

  These fields are allocated in the long term storage (by src_allocation.f90)
  To consider the convective buoyancy production for TKE, a new namelist switch
  has been introduced in /PHYCTL/ (similar to ltkesso):

     ltkecon  (Default: FALSE)


  The reference pressure p0ref, which is used in the Exner function, has
  been declared in data_constants.f90
  (by Matthias Raschendorfer)


Convection:
  (by Matthias Raschendorfer)

  - src_conv_shallow:
    Introducing calculation of convective buoyant TKE production 'tket_conv'

  - src_conv_tiedtke:
    Introducing calculation of convective buoyant TKE production 'tket_conv'
    Using tke-field only, if 'lctke=T'.


Soil Model:
  (by Juergen Helmert)

  Removed the dependency on diagnostic quantity t_2m by replacing it with the
  lowest atmospheric temperature level (as is in GME)


Idealized Test Cases:
---------------------
  (by Uli Blahak)

 - Additional bug fixes and modifications
 - Possibility to specify theta instead of t in radiosondes files
 - Improved error messages for Namelist-errors by using IOMSG-mechanism
   (can be used by defining #define HAS_IOMSG, if the compiler supports it.


Interfaces for coupling with OASIS:
-----------------------------------
  (by Edouard Davin, Eric Maisonnave, Andy Dobler, et al.)

An interface to the OASIS coupler has been implemented into the COSMO-Model.
In the CLM community there have been already activities to couple the 
Community Land Model (CLM) and an ocean model to the COSMO-Model using such
an interface.

The interface is implemented using conditional compilation with -DCOUP_OAS.
Sources from applications that should be coupled with the COSMO-Model or the
coupler itself are NOT part of the COSMO-Model package. Such sources have to
be obtained elsewhere. The COSMO-Model only provides the interfaces.

Necessary changes in the COSMO-Model:

 - lmorg.f90:
   Call to OASIS routines for initialization (at the beginning) and for 
   update (during the timeloop).

 - src_setup.f90:
   Added icomm_world to the argument list of init_procgrid
   (up to now this routine started with MPI_COMM_WORLD)

 - environment.f90:
   changed definition of icomm_world: in case of coupling, this communicator
   is defined by OASIS; only in case of un-coupled runs, it is MPI_COMM_WORLD.
   Therefore some uses of MPI_COMM_WORLD have to be replaced by icomm_world.


Bug Fixes:
----------

 - Usage of tgrlat:  (reported by Andreas Will and Jack Ogaja)
   tgrlat (tangens of transformed latitude) has been computed only on
   u-latitudes (same latitudes as mass grid points). But it has also to be considered
   on v-latitudes, which are different from the u-latitudes because of the staggering.
   (Reported by Andreas Will and Jack Ogaja)
   modified modules:  data_fields.f90, numeric_utilities.f90, src_2timelevel.f90,
                      src_allocation.f90, src_advection_rk.f90, src_setup.f90

 - src_runge_kutta.f90       (reported by Oli Fuhrer)
   The variable govcp was initialized only for itheta_adv >= 1, but was used in 
   some idealized tests also for other cases. Therefore initialize this (and some
   other variables) in any case.

 - src_radiation.f90:        (reported by Thorsten Reinhardt)
   In Section 6:  Heating rates and radiation budget at surface:
   Variables dp0 and zsmu0 must not be referenced with js, but with loop variable jz1

 - organize_satellites.f90   (reported by Oli Fuhrer)
   The variable nsat_steps had only been allocated, if output of synthetic satellite
   images was switched on. But in the init- and compute-phase of organize_satellites
   it was accessed in all cases. Therefore allocate this variable also in all cases.

 - src_lheat_nudge.f90:      (by Klaus Stephan)
   Bug correction: To consider both, blacklist flag and bright band flag for
   calculation of pr_obs and the weight, it should be an .AND. instead of .OR.
   (around line number 2135).



Some technical modifications:
-----------------------------
 
mpe_io.f90, dummy_mpi.f90  (not in the VCS)
   Modifications and extensions because of some compiler problems

meteo_utilities.f90:
   Replaced arguments p0, pp of subroutine cloud_diag with full pressure p_tot

organize_data.f90, src_output.f90:
   Replaced variable name "namelist" (which is Fortran Keyword) by "outblock"

src_allocation.f90:
   Introduction of additional 3D-arrays 'tket_(conv, sso, hshr)' for additional
    TKE source by the action of other sub grid scale flow patterns.
   Removed action=canopy fully and move allocation of canopy fields to 'init' phase
    of organize_physics (US)

src_radiation.f90:
   Replaced arguments p0 and pp in SR cloud_diag by p_tot

src_setup.f90:
   Introduction of ifndefs for SCLM
   Introduction of p0ref and presetting of kcm

src_setup_vartab.f90:
   added instantaneous values of swdir_s, swdifd_s, swdifu_s, lwd_s, lwu_s

src_soil.f90:
   Warning if SCLM mode is used with surface flux forcing (with ifdef)

src_turbdiff.f90:             eliminated
src_turbulence.f90:
   Eliminated unnecessary MAX-construct for index computations



Changes of Results:
-------------------

Most of the above modifications do change the results slightly.
But no significant changes are expected.

The run times of the very high resolution runs (2-3 km) are increasing
by about 2-4 percent. This is mainly (but not only) due to the additional 
small time step in the 3rd Runge-Kutta step.


Ulrich Schaettler

-------------------------------------------------------------------------------

4.19:                                                    29.07.2011
=====

Horizontal advection of temperature and pressure deviation
----------------------------------------------------------

The changes handle flow situations with confluent horizontal flows in 
neighbouring grid boxes (opposite signs of U and/or V) better. 
This avoids a spurious and potentially detrimental heat source in such 
grid boxes, which lead to extreme Theta-values, to "grid point storms" 
and other unwanted effects. 

New subroutines "horiz_adv_driver_stagmix", "adv_upwind?_???_stagmix"

This change is hard-coded, but an internal switch zitype_tppadv has been 
implemented to restore the old scheme again.
 (by Uli Blahak)


Conditional compilation for NETCDF and GRIB(DWD)
------------------------------------------------

To avoid usage of dummy_netcdf.f90, conditional compilation has been implemented
for NetCDF. To use a netcdf-library, the model has to be compiled now with the
compiler flag: -DNETCDF.

Also, conditional compilation for the DWD GRIB library has been introduced.
To use this library, the model has to be compiled with the flag -DGRIBDWD.


Bug fixes
---------

 - src_output.f90, computation of synthetic satellite images:
   If a special synthetic satellite image variable is not computed, but should
   be written in a GRIBOUT Namelist group, the model crashed. This is avoided
   now, because such variables are not written any more.
    (by Robin Faulwetter)

Ulrich Schaettler

-------------------------------------------------------------------------------

4.18:                                                    24.05.2011
=====

Description of changes:

- Implementation of COSMO-ART interfaces for the Runge-Kutta dynamical core
  Now it is also possible to run COSMO-ART with the Runge-Kutta dynamical core.
  The necessary interfaces have been implemented in
   => src_runge_kutta.f90
   => src_advection_rk.f90
   => src_slow_tendencies_rk.f90
   => src_relaxation.f90
   => lmorg.f90

  There have been some additional modifications:
   => src_input.f90, src_setup_vartab.f90, organize_data.f90:
      The variable tables for COSMO_ART and POLLEN have been eliminated in the
      model part, and own modules have been introduced for that in the ART part.

   => slow_tendencies.f90
      Unified the treatment of deposition; added surface concentration

   => src_leapfrog.f90
      introduced convective tendencies for COSMOART and POLLEN

   => src_conv_tiedtke.f90
      introduced additional fields for COSMO-ART. Because these fields are used
      in the argument lists, they are allocated in any case, but only computed,
      if COSMOART or POLLEN is activated.


- Changes in the horizontal advection:
  => Implemented Strang splitting for horizontal advection
      (by Guy deMorsier)
     src_advection_rk.f90
      new SR advection_ef_zyxyz, exchange_runge_kutta_3dstrang
   
      (implemented also interfaces for COSMO-ART in this new subroutines: Uli Schaettler)

  => New (optional) selective filling diffusion for the Semi-Lagrange advection
      (by Michael Baldauf)
     src_advection_rk.f90
        new SR advection_semi_lagrange_init,
        modified SR advection_semi_lagrange
     numeric_utilities_rk.f90
        new SR remove_negative_values, diffusion, diffusion_x, diffusion_y, diffusion_z

  => Technical modifications for controlling horizontal advection
      (by Michael Baldauf)

     The 2 namelist switches lsl_adv_qx and yef_adv_qx have been replaced by
     one switch y_scalar_advect now (in /DYNCTL/).
     This is valid only for the Runge-Kutta dynamical core. The following table
     shows the available options and how the old settings can be replaced.

     y_scalar_advect     Description                             lsl_adv_qx  yef_adv_qx

      'SL3_MF':         SL-Advection with tricubic interpolation,   TRUE       ----
                        multiplicative filling-option

      'SL3_SFD':        SL-Advection with tricubic interpolation,   not available before
                        selective filling diffusion-option

      'Bott2':          Bott 2nd order finite-volume scheme        .FALSE.    'Bott_2'
      'Bott2_Strang':   Bott 2nd order finite-volume scheme,        not available before
                        with Strang splitting ('z-y-2x-y-z')

      'Bott4':          Bott 4th order finite-volume scheme        .FALSE.    'Bott_4'
      'Bott4_Strang':   Bott 4th order finite-volume scheme,        not available before
                        with Strang splitting ('z-y-2x-y-z')

      'vanLeer':                                                   .FALSE.    'vanLeer'
      'vanLeer_Strang':                                             not available before

      'PPM':                                                       .FALSE.    'PPM'
      'PPM_Strang':                                                 not available before

      'MPDATA':         (not yet available, work at MeteoCH)

     NOTE: these strings are now case-insensitive
           (e.g. 'sl3_mF' or 'SL3_Mf' are both recognized)


- Introduction of an interface to the RTTOV9 library for computing
  the synthetic satellite images.
   (by Robin Faulwetter, DWD)

  In addition to the module src_sat_tbs.f90 (which is the interface
  to the RTTOV7 library) a new module src_sat_rttov.f90 has been
  introduced as interface to the RTTOV9 library.

  To choose between the libraries, a new Namelist parameter
  itype_rttov has been introduced in the group SATCTL.
    itype_rttov = 7 / 9   (default:  7)

- Introduction of conditional compilation for Nudging and the
  synthetic satellite images
  Not all users of the COSMO-Model do use these components, but have
  to compile and link them and the additional libraries needed.
  Before we were offering "dummy"-files, but now we introduced
  conditional compilation (ifdef) for switching on / off these
  components during compilation time:

   - ifdef NUDGING:
     if -DNUDGING is defined for compilation, all source code for the
     assimilation part of the COSMO-Model will be compiled and linked
     with the binary.

   - if defined RTTOV7 || defined RTTOV9 || defined RTTOV10
     if one of the above variables is defined for compilation,
     (-DRTTOV7, -DRTTOV9) the source code for the corresponding
     RTTOV-interfaces is compiled and the additional RTTOV-library
     is linked.

  If the source code is NOT compiled with these extensions, but the
  corresponding component is initiated during a model run, the
  model will stop with an appropriate error message.

- Changes for the digital filter initializations
  Some technical adaptations were necessary to run the forward launching
  filter (ndfi=1), because the forecast then starts for nstart > 0, but
  some initializations (e.g. in the soil model) were done only for nstart = 0.

  For the forward launching (ndfi=1), the soil processes are now taken into account.
  The initial values of all soil variables are saved and after the filtering
  step, all soil variables are initialized again as mean values of the initially
  saved values and the newly computed ones.

  NOTE:
  The reproducibility problem for the backward-forward initialization (ndfi=2)
  still is not solved.

- New Namelist variable in the TUNING list: thick_sc
  thick_sc is the limit for convective clouds to be "shallow" (in Pa)
       Default: 25000.0 Pa (was hard coded up to now in src_conv_shallow.f90)

  This tuning parameter will be tested for COSMO-DE-EPS

  Shallow convection parameterization becomes active only if cloud
  thickness from cloud base to cloud top exceeds a threshold.  To evaluate
  this condition a parcel is launched.  This threshold is typically set to
  values between 20000.0 Pa and 30000.0 Pa with a COSMO DE default of 25000.0 Pa.
  (for comparison: IFS default is 20000.0 Pa set by Peter Bechtold).
  Reasonable values are between 10000.0 and 45000.0 Pa.
   (by Martin Koehler)

- New subroutines in src_integrals.f90
   => check_qx_conservation
   => calc_cuboid_geometry

- Modification of computation for snow fall limit and 0-degree height:
   (by Guy DeMorsier, MeteoSwiss)
  The search algorithms for snow fall limit (1.3C) and 0-degree height are
  now started from top of the model and not from the bottom as before.
  Search from the bottom of the model could lead to a much too low snow fall
  limit, if there is a bend in the temperature profile.

- Changes in the output:
  The namelist variable yform_write was moved from the group /IOCTL/ to
  the group(s) /GRIBOUT/. Now it is possible to specify a different output
  format for every output group. (by Uli Schaettler)

  The instantaneous values of shfl_s, lhfl_s, umfl_s, vmfl_s can now also be
  written. The shortnames are: SHFL_S, LHFL_S, UMFL_S, VMFL_S
    (by Uli Blahak)

- Extensions for NetCDF I/O
   (by Anne Roches, et al.)
   => data_io.f90:
      introduced additional entries in idims_id_out for
       - sectors of the horizon (for 3D ext. parameter field skyview
       - number of products for synthetic satellite images
       - number of products used  for special MSG images
   => io_utilities.f90, src_input.f90, src_output.f90:
      extensions to set the additional dimensions and write these variables

   => src_setup_vartab.f90:
      Only for NetCDF Output, 4 additional fields for the synthetic satellite
      images have been introduced:
       - MSG_TB    MSG brightness temperature
       - MSG_TBC   MSG clear-sky brightness temperature
       - MSG_RAD   MSG radiance
       - MSG_RADC  MSG clear-sky radiance
      Output of these fields does NOT work in Grib!

- Idealized test cases
    (by Uli Blahak)
  There were several bug fixes and some extensions to the module src_artifdata.f90
  One bug has been fixed in organize_data.f90, regarding restart runs in case of
  idealized tests.

- Changed for some modules the code owner

- Bug Fixes
   => src_output.f90:
      Settings of the product definition section (pds):
      Some parameters of the pds (for the SLEVE coordinate) were not set,
      when using the new reference atmosphere, but not the SLEVE coordinate.
      This leads to problems, when decoding these grib data with grib_api.
      The SLEVE parameters are now set to 0 in this case.
       (by Uli Schaettler)

      In case of luvmasspoint=.TRUE. there were stripes from the processor
      grid in the output of AUMFL_S and AVMFL_S because of the averaging to
      the mass grid point. The boundaries of these variables must be exchanged
      before computing the averaging.

      Call to SR potential_vorticity_rho: variable zvarlev is now passed
      within (1:ke) to this subroutine.
       (by Jean-Marie Bettems)

   => numeric_utilities.f90:
      The interface of SR calc_Theta_Tppp expected reference temperature and
      temperature deviation from the calling routine. But in the output, only
      full temperature is available.
      The interface has been modified to expect the full temperature now.
       (by Jean-Marie Bettems)

   => pp_utilities.f90:
      A height query must be changed from "<=" to ">=" when computing
      accumulation of CAPE and CIN in SR ascent (for cape3km)
       (by Daniel Leuenberger)

   => src_runge_kutta.f90:
      SR coriolis is now called with the correct timelevels in the case
      l_coriolis_every_RK_substep=.TRUE.   (by Michael Baldauf)

   => near_surface.f90:
      for itype_diag_gusts=2 the values in 30m have to be used
      (up to now the 10m values were used)
      (Oli Fuhrer)

   => src_input.f90:
      there were some cases, in which the variable ydatchk has not been set.
      This has been repaired
       (by Burkhardt Rockel et al.)

   => src_radiation.f90:
      Use local 2D array zskyview and use 1D slice of it (because global array is
      allocated only for lradtopo, but was used in SR interfaces)
      Smoothing local field for swdifu_s after computation on coarse grid

      The computation of qc_rad and qi_rad was wrong, when using a coarser grid
      for the radiation. This has been fixed.
       (by Victor Venema, Uni Bonn)

   => organize_data.f90:
      Bug fix for restart runs with idealized cases
       (by Uli Blahak)

   => dfi_initialization.f90:
      In case of ndfi=2 (forward launching) the start events for meanvalues,
      grid point output and computing synthetic satellite images has to be
      adapted, because nstart > 0 then.
      (by Uli Schaettler)

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 - Changes to the Namelist Input

    Group /DYNCTL/
      => Removed the switches    lsl_adv_qx, yef_adv_qx

      => Introduced y_scalar_advect

      For a translation from lsl_adv_qx, yef_adv_qx to y_scalar_advect,
      see above

    Group /TUNING/
      => New parameter thick_sc: limit for convective clouds to be "shallow" (in Pa)
         Default:  25000.0
         Range:    10000.0 ...  45000.0

    Group /IOCTL/
      => the parameter yform_write has been eliminated

    Group /GRIBOUT/
      => the parameter yform_write has been introduced, to specify the output
         format for every output group

    Group /SATCTL/
      => New parameter
         itype_rttov:   to specify the RTTOV version that should be used
         Default:  7
         allowed values:  7, 9

      => New parameters for RTTOV9
                         Explanation                                         Default
         sat_long_01      position of first satellite (longitude)            -999.0
         sat_long_02      position of second satellite (longitude)           -999.0
         extrp_type       Type of extrapolation above highest model level       0
                             0: constant
                             1: linear
                             2: extrapolate towards a climatological value
         iceshape         to specify, whether ice particles are                 1
                             1: hexagonal
                             2: or ice aggregates
         iwc2effdiam      type of conversion of ice water content to            4
                          effective diameter of ice particles
                             1: Scheme by Ou and Liou, 1995, Atmos. Res., 35, 127-138.
                             2: Scheme by Wyser et al. (see McFarquhar et al. (2003))
                             3: Scheme by Boudala et al., 2002, Int. J. Climatol., 22, 1267-1284.
                             4: Scheme by McFarquhar et al. (2003)
                  CAUTION: only type 4 has been tested extensively

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 - Changes to the Results

    The modifications are purely technical, so that the results do not change.
    Only few diagnostics are affected because of bug fixes / technical changes:

     VMAX_10M,   because of computations on the boundaries
                 more changes, if itype_diag_gusts=2 is used, because of a bug fix
     HZEROCL     changed search algorithm
     SNOWLMT     changed search algorithm
     ASWDIFU_S   introduced smoothing of this field after computation of radiation
                 on a coarse grid


     SYNMSG      because the use of RTTOV9

     fields on z-levels, because using a different vertical interpolation scheme.


Ulrich Schaettler

-------------------------------------------------------------------------------

4.17:                                                    24.02.2011
=====


Description of Changes (mainly of technical nature):
====================================================

- Various changes related to idealized simulations.

  This includes a change of rationale for performing idealized cases:
  Instead of having to "clone" a src_artifdata.f90 file
  for each different case and to modify it "by hand",
  there is now one src_artifdata.f90, which includes
  all ingredients for idealized simulations in a modular
  fashion and which allows to configure the simulations
  by namelist parameters.
  For examples, the user may choose between different
  types of artificial orography (arbitrary number of
  Gaussian or bellshaped hills, or reading from ASCII file),
  and different types of initial T- and rel. humid. profiles
  (polytrope atmosphere layers, const. Brunt-Vaisala-frequency 
  layers, Weisman-Klemp-type profiles, or again reading
  from an ASCII-file).
  The modular fashion is designed to enable the user
  to add his/her own ingredient at a specific location
  within the code, if it is not already available.

  There have also been improvements in the hydrostatic
  pressure initialization, with regards to the determination
  of the surface pressure, to the treatment of moisture,
  and to the consistency with the choice of the dynamical core.

  Restart runs are now also possible for idealized simulations.

  Note that older versions of src_artifdata.f90 
  will probably not work any more. In that
  case contact Ulrich Blahak. It is likely that your particular
  idealized case might now be configurable via the new
  namelist parameters, or, it might be possbile to add
  your particular idealized case to the already implemented
  cases.

  A detailed documentation is under way from Ulrich Blahak.
  In the meantime, users can consult an exemplary runscript
  run_ideal/run_ideal, which contains all new namelist parameters
  in a documented and cookbook-like fashion (see below,
  "Changes in the namelists".


- Implemented periodic boundary conditions separate
  for x- and y-direction (new namelist parameters
  lperi_x, lperi_y), eliminated lperi and model variable
  my_peri_neigh (no longer needed).


- Changed interface of exchg_boundaries(): Added
  lperi_x, lperi_y, l2dim, num_compute 
  to the input list.
  
  --> exchg_boundaries() now organizes also the periodic
  exchanges and 2-dim. exchanges in case of l2dim=.true.
  and does this also for one-processor runs! 

  --> This simplifies the model code for boundary exchanges:

  - Now exchg_boundaries() is called regardless
    of the number of tasks (also for 1-processor runs!).
  - There are no more "extra" code branches for boundary 
    exchanges in case of num_compute==1 and 
    lperi=.true. / l2dim=.true. outside
    exchg_boundaries necessary.


- Bug fixes in case of alternative turbulence schemes:

  - Corrected some wrong loop index boundaries in 
    src_slow_tendencies_rk.f90 which lead to floating invalid
    operations in previous versions when l3dturb=.true.
  - Added some missing boundary exchanges for
    tkhm, tkhh, tke, tketens
    in organize_physics.f90.


- Implemented linear interpolation to const. p- and z-levels
  in addition to the traditional cubic tension splines.
  New namelist parameter itype_vertint (see below).

  In that context, for z-levels interpolation of p
  now the surface pressure is used for the pressure value
  at the surface instead of the pressure at the lowest main level.
  This changes the results of interpolated pressure near
  the surface.




Changes in the namelists:
=========================

- Introduced lperi_x and lperi_y to replace lperi

- Introduced itype_vertint to choose the type of vertical
  interpolation to constant p- and z-levels:
  itype_vertint = 1: cubic tension splines (previous method)
  itype_vertint = 2: linear interpolation

- Renamed namelist IDEALCTL with ARTIFCTL, added
  various new namelist parameters to configure most aspects of idealized
  simulations. See the sample namelist file run_ideal/run_ideal
  for more information (there is a "cookbook"-like documented namelist
  ARTIFCTL which contains all namelist parameters in a fashion).
  A detailed documentation of the implemented idealized features
  is under way from Ulrich Blahak (artif_docu.pdf).

- Eliminated lfreeslip_sfc (free-slip lower BCs can now
  be imposed by namelist-parameters lnosurffluxes_m=.true. 
  (for momentum) and/or lnosurffluxes_h=.true. (for heat)




Changes in the results:
=======================

There are no changes in the operational results of DWD. 

The only slight difference is in the const. z-levels interpolated
pressure near the surface, which stems from the use of 
surface pressure instead of p(:,:,ke) for the surface points
(see above).





=======================================================
=======================================================
List of other smaller changes in some source files:
=======================================================
=======================================================


- data_io.f90:
  --------------------

  - Increased max. number of height level variables to 400
  - Introduced namelist parameter "itype_vertint" in GRIBOUT namelist group to 
    specify the type of vertical interpolation to p- and z-levels 

  
- environment.f90:
  ------------------

  - Included 1-processor periodic/2dim exchanges
    into exchg_boundaries, which now has to be called also by 1-processor runs.
    This greatly simplifies the implementation of periodic and other BCs.
  - Added lperi_x, lperi_y, l2dim to calling list of extend_field.

 
 
- fast_waves_rk.f90:
  ------------------

  - Eliminated my_peri_neigh and all if-branches for single processor 2D-runs 
    and/or periodic BCs (now part of exchg_boundaries() in all cases);
  - Eliminated lfreeslip_surf (free-slip BC and/or no-surface-heat/moisture-flux
    conditions may now be imposed by new switches lnosurffluxes_m/h in namelist IDEAL)
  - Introduced lnosurffluxes_m instead of lfreeslip_surf when limiting the 
    extrapolated values of U, V to the surface
  - Added new dependency on src_artifdata because of lnosurffluxes_m

 
- hori_diffusion.f90:
  ------------------

  - Changed ldatatypes to .FALSE. for all communication for
    COSMO-ART and POLLEN

 
- io_utilities.f90:
  ------------------

  - In subroutine make_fn, introduced parameter *ztgranul* to make the
    allowed time distances of output files more flexible in case of lhour=.true.
    Before, the allowed time distance was set fixed to a quarter hour.

 
- lmorg.f90:
  ------------------

  - Added subroutine calls for artificial disturbances on
    initial temperature (atmosphere and/or soil) or artificial heating rates
    (atmosphere and/or soil) or artificial t_s disturbances in case of lsoil=.false.
 

- near_surface.f90:
  ------------------

  - Fixed bug in index bounds (istartpar/jstartpar instead of istart/jstart) in computation
    of zum1, zum2, ...

 
- organize_data.f90:
  ------------------

  - Eliminated unused parameter lartificial
  - Read namelist for idealized cases
  - Enabled restart runs for idealized cases
  - In case of idealized runs, enable arbitrary output time specifications using hcomb 
    by setting namelist%lhour = .false.
  - Introduced noutst_max (default 1000) instead of hardwired 100
  - Prepare setting of hincbound to 5 min instead of 15, but at the moment commented out.
  - Fixed calculation of ncount in calc_ngrib()
  - Introduced namelist parameter "itype_vertint" in GRIBOUT namelist group to 
    specify the type of vertical interpolation to p- and z-levels 


 
- organize_physics.f90:
  ------------------

  - Eliminated lfreeslip_surf (free-slip BC and/or no-surface-heat/moisture-flux
    conditions may now be imposed by new switches lnosurffluxes_m/h in namelist IDEAL);
  - Introduced new itype_turb=100 to specify the fixed diffusion coefficients
    tkvhfix, tkhhfix, tkvmfix, tkhmfix in namelist IDEAL (mainly intended for idealized runs, but may also
    be used for real cases); 
  - Added some missing communication for tkhm, tkhh, tke, tketens.

 
 
- slow_tendencies.f90:
  ------------------

  - Correction for ztch: introduced lower velocity limit vel_min 
    (COMMENTED OUT FOR NOW BECAUSE MORE TESTING IS NEEDED HERE)

  
- src_advection_rk.f90:
  ------------------

  - Fixed SR limit_contravar_vert_veloc (deleted unnecessary loops,
    correctly implemented 1-proc run).

 
- src_allocation.f90:
  ------------------

  - Fixed allocation of rcld and edr in case of itype_tran=2;
  - Fixec allocation of tke and tketens for the case lphys=.false. and
    at the same time RK-scheme iype_turb between 5 and 8 as an intermediate solution. 
    This is a pathological case, but
    if tke and tketens are not allocated, the model wants to diffuse and transport
    them anyways, because lphys=.false. is not implemented correctly into the RK-core. 
    Fixed initialization of dzeta_dphi and dzeta_dlam (cut-and-paste error).

 
- src_artifdata.f90:
  ------------------

  - Total reorganization of the file
  - Many new namelist parameters.
    Documentation of the new namelist parameters in the exemplary 
    namelist file *run_ideal*
    and in a separate PDF-Document *artif_docu.pdf*.
  - Warm bubbles and artificial heating rates are now imposed in lmorg.f90. 
  - Namelist ARTIFCTL is now read in organize_data() after the gribout-namelist(s),
    regardless of the setting of lartif_data; this is intended to
    enable the specification of "warm bubbles", no-surface-flux-conditions and 
    fixed turb. diffusion coefficients in real case simulations 
    (DISABLED FOR NOW --- IF INTENDED TO USE, CONTACT Ulrich Blahak). 
    In this case, not all the namelist parameters take effect, but only these:
    - parameters for warm bubbles / temperature disturbances
    - parameters for itype_turb = 100: tkvhfix, tkhhfix, tkvmfix, tkhmfix
      (fixed diffusion coefficients)
    - the switches "lnosurffluxes_m" and "lnosurffluxes_h" to enable runs without surface fluxes
      (free-slip-condition and/or no surface heat/moisture fluxes).
  - Introduced debug mode with additional debug output
    (namelist runctl).

 
- src_leapfrog.f90:
  ------------------
 
  - Added possibility to output max. V_h and min./max. W
    to stdout for diagnostic purposes, 
    if (ldebug_dyn .AND. idbg_level > 3)


- src_output.f90:
  ------------------ 

 - Implemented linear interpolation as alternative to
   cubic tension splines in SRs z_int() and pint() -- this uses 
   the new interpolation routine lininterp2D_xinter1D_vec() 
   from utilities.f90 and may be activated by the new namelist
   parameter *itype_vertint* in namelist group gribout (1=cubic spline, 2=linear);
 - Surface values of U, V, W, and T
   for *linear* z_int()-interpolation now depend on lnosurffluxes_m/h (free-slip b.c or not)
   FOR NOW: THIS IS NOT DONE FOR P-LEVELS OUTPUT AND Z-LEVELS CUBIC 
   SPLINES TO PRESERVE "OLD" BEHAVIOUR AND TO AVOID PROBLEMS
   WITH OVERSHOOTS IN CUBIC SPLINE INTERPOLATION.
 - Surface value of pressure for z_int()-interpolation is now
   taken to be the surface pressure ps instead of p on the
   lowest main levels. This changes slightly the results
   of z-interpolated pressure near the surface.
 - Changed variable name "result"
   to "results", since "result" is a fortran key word; 
 - Added debug output on processed variables for constant fields output.

 
- src_runge_kutta.f90:
  ------------------
 
  - Added possibility to output max. V_h and min./max. W
    to stdout for diagnostic purposes, 
    if (ldebug_dyn .AND. idbg_level > 3).


- src_setup.f90:
  ------------------

  - Added numerous modifications for lperi_x/lperi_y

 
- src_slow_tendencies_rk.f90:
  ------------------

  - Eliminated lfreeslip_surf 
    (free-slip BC and/or no-surface-heat/moisture-flux
    conditions can now be imposed by switches lnosurffluxes_m/h in namelist ARTIFCTL)
  - Fixed use of lkge2_prog_tke in horizontal turbulent diffusion of TKE
  - Fixed various bugs in loop index boundaries in 
    horizontal turbulent diffusion (if l3dturb=.true.)
  - Correction for ztch: introduced lower velocity limit vel_min
    (COMMENTED OUT FOR NOW, BECAUSE MORE TESTING IS NEEDED)

 
- src_turbulence.f90:
  ------------------

  - itype_turb=7/8: Changed constant zcs in the LES turbulence scheme
    from 0.25 to 0.15 and set horiz. diff. coeff. equal to 3.0 times 
    the vertical diff. coeffs.
    For other itype_turb, this ratio is chosen to be 1.0.

 
- utilities.f90:
  ------------------

  - Added new SRs linear_interpol(),
    linear_interpol_vec(), lininterp2D_xinter1D_vec(),
    for linear interpolation and
    mittel_integral(), mittel_integral_vec()
    for regridding by means of integral averaging.

 
Ulrich Blahak, 23.2.2011 END

-------------------------------------------------------------------------------

4.16:                                                    06.12.2010
=====

This version contains some technical adaptations in src_flake and src_input 
and a bug fix in src_flake for using the Runge-Kutta scheme 

src_flake.f90 (by Dmitrii Mironov)
   Adaptation to the two time level scheme, update of I/O (SUBROUTINE flake_init)

src_input.f90 (by Jan-Peter Schulz)
   Initialization of t_ice for all time levels (according to t_so)


Ulrich Schaettler

-------------------------------------------------------------------------------

4.15:                                                    19.11.2010
=====

The following changes have been implemented:

 - Latent Heat Nudging: (by Klaus Stephan)
   => Bug fixes in src_lheat_nudge to correct bugs when applying bright
      band detection. This also includes a tuning of the parameter used for
      the detection.
   => Changing the default value of namelist parameter nradar to 33 to
      consider the additional radar station "MEM" which will be operational
      soon.

    Due to the bug fixes the result will change for LHN analysis

 - Nudging:      (by Christoph Schraff and Klaus Stephan)
   => Introduction of a new SR to correct the dry bias of Vaisalla RS92
      radiosonde measurements.
      --> This includes changes in data_nudge_all.f90, organize_assimilation.f90,
          src_obs_proc_cdf.f90, src_obs_processing.f90
      --> new namelist parameter to control the bias correction
           mqcorr92 !  : switch for bias correction for Vaisala RS92
                    !    radiosonde humidity
                    !    = 0 : no correction for humidity (default)
                    !    = 1 : correct only solar radiation bias
                    !    = 2 : correct total bias (incl. nighttime bias)

      The bias correction causes a change in results. The analysis will become
      wetter during day time and drier during night time (if mqcorr92 set to 2).
      In case of mqcorr92=0 results dont change.

 - Changes in the dynamics:  (by Michael Baldauf)

    => The logical switch lva_impl_dyn, to choose an implicit vertical advection
       in the RK-scheme, has been replaced by a string: y_vert_adv_dyn
       Several options can be chosen now:
           'impl2':     2nd order implicit (as was lva_impl_dyn=.TRUE.)
           'expl':      explicit           (as was lva_impl_dyn=.FALSE.)
           'impl3':     3rd order implicit (new)

    => fast_waves_rk.f90
       Summarize calculation of weighting coefficients for vertical interpolation in a
       New subroutine 'weighting_factors_full2half'  (G. Zaengl)

    => numeric_utilities.f90
       New subroutines solve_5banddiag and the 'Numerical Recipes'-routines
       bandec and banbks in 'vectorized' versions

    => src_runge_kutta.f90
       Possibility to call a 3rd order implicit vertical advection.
       New subroutine 'calc_wcon_sqrtg'

    => src_slow_tendencies.f90
       New SUBROUTINE complete_tend_uvwtpp_CN3Crow

 - Changes in the Physics      (by Oliver Fuhrer)

       Value of securi (from data_turbulence, src_turbdiff):
       According to numerical stability tests, the range from 0 to 1 is too
       big for the security variable securi. It must not exceed 0.5!
       The default value and the allowed range therefore have been reduced:
        default securi_d = 0.5  and 0 <= securi <= 0.5

       This will change the results, if a value > 0.5 has been chosen before
       and limpltkediff=.FALSE.
       For limpltkediff=.TRUE., this security value has no effect any more.

 - Bug fixes and technical changes:
    => Eliminated use of T_S_LAKE again, because the SST analysis now
       provides T_S as it is wanted by FLake.

    => In SR curl (in module numeric_utilities.f90) the dimension of
       tgrlat and acrlat was erroneously done with ie instead of je
       In SR potential_vorticity_rho (in module pp_utilities.f90) these
       parameters were not used at all and therefore eliminated.

    => Use of nnow instead of itl (for itimelevel) in src_output for some variables
       VORTIC_U,_V,_W, POT_VORTIC,  T_WATER, and in calls to SR caliq, calztd, calomega

    => src_output.f90:
       Increased lbm to 25000 for big frames (from Lucio)

    => src_soil_multlay.f90:
       Introduced ibot_w_so and snow_melt (from CLM Version):
       The soil model uses a local index i250, which corresponds to the last soil
       layer completely above 2.5 meter soil depth. This index is used to compute
       the subsoil runoff (runoff_g) as drainage flux through bottom of this layer
       and to control switching off the soil moisture gradient related flux below.
       For climate applications this index should be variable and there is a
       Namelist variable czbot_w_so, with which the desired soil depth for this
       layer can be given. The variable ibot_w_so has been introduced to replace
       i250. The default is chosen, so that the old settings are reproduced.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 - Changes to the Namelist Input

    Group /NUDGING/
      => Changed the default value of namelist parameter nradar:
            nradar_d = 33

      => new namelist parameter to control the bias correction
         mqcorr92: switch for bias correction for Vaisala RS92 radiosonde humidity
             = 0 : no correction for humidity (default)
             = 1 : correct only solar radiation bias
             = 2 : correct total bias (incl. nighttime bias)


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 - Changes to the Results
   Due to the bug fixes in src_lheat_nudge the result will change for LHN analysis
   (for COSMO-DE)

   The bias correction causes a change in results. The analysis will become
   wetter during day time and drier during night time (if mqcorr92 set to 2).
   In case of mqcorr92=0 results dont change.


Ulrich Schaettler

-------------------------------------------------------------------------------

4.14:                                                    14.06.2010
=====

Changes for the new version:

- Microphysics: (by Axel Seifert)
  In hydci_pp (itype_gscp=3) the density correction of the terminal
  fall velocity of raindrops and snowflakes is now taken into account.
  This leads to an increase of the sedimentation velocity in the
  atmosphere. The parameter zv0s which determines the actual empirical
  terminal fall velocity of snow at a reference density has been
  implemented as a new namelist variable v0snow.

- Nudging:      (by Christoph Schraff)
  Bug fixes in src_obs_proc_cdf:
  - Bug fix to avoid model crash at processing of mobile TEMPs during COPS.
  - Bug fix for writing correctly the aircraft flight phase to the ODR.


The results of all applications are influenced by the changes in the
microphysics.


Ulrich Schaettler

-------------------------------------------------------------------------------

4.13:                                                    11.05.2010
=====

All files have been adapted in order to bring them to SVN in the near future.

A new information module info_lm_f90 has been introduced into the COSMO-Model.
This module has been introduced in all DWD libraries and models and gives
information on the compiler, compiler options, etc. 

The informations are printed by the subroutine "info_print" which can 
be called with a string of single characters. Every character stands for
a certain information, which is given in the following list:

     '?'     Special: Get a list of all Options available
     'c'     Get the time the code had been compiled
     ' '     Print an empty line
     'd'     Get the debug options used for compilation
     'i'     Get the time the code had been put into the version system
     'm'     Get whether the code has been marked locally modfied
     'n'     Get the library name
     'p'     Get the time the code had been put into production
     'r'     Get the revision number from where the code had been extracted
     't'     Get the revision tag from where the code had been extracted
     'x'     Get the time the code had been extracted from the version system
     'B'     Get the full path of the binary name
     'C'     Get the user (login name) who did the compiling
     'D'     Get all the macros defined (-D...) during compilation
     'L'     Get the compiler options used for linking 
     'N'     Get the compiler name used for compilation
     'R'     Get the information of other used libraries, too
     'S'     Get the runtime date/time of the strart of the binary
     'U'     Get all the macros undefined (-U...) during compilation
     'V'     Get the compiler version used for compilation
     'W'     Get the nodes where the binary is running
     'X'     Get the data decomposition

The actual implementation in the main program lmorg calls info_print with no
argument, which gives the following default listing:

 ==== Code information used to build this binary ====
 Binary name ....: lmparbin

 Library name ......: COSMO-Model
 Tag name ..........: V4_13
 Checkin-Date ......: 2010-05-11
 Code is modified ..:
 Compile-Date ......:
 Compiled by .......:

 Current start time : 2010-06-01 14:37
 Running on nodes ..:
 Data decomposition :
 ==== End of code information ====


Because not all information is dynamically available, the source code 
administrator (or user) has to set some of the information per hand in 
the module info_lm_f90 before compiling program.

The following information can be set by calling info_define in the main 
program lmorg.f90:

  - BinaryName:  Name of the program
  - Nodes:       Information about nodes used
  - Domain:      Information about the domain decomposition

The actual implementation in the main program lmorg calls info_define just
with the name of the binary:

  CALL info_define ('lmparbin')


The following information can also be given by a Namelist Input file INPUT_COSMO,
if this is available:
  - INFO_Options:    string with the characters to specify, which information 
                     should be printed
  - INFO_BinaryName: Name of the program
  - INFO_Nodes:      Information about nodes used
  - INFO_Domain:     Information about the domain decomposition


Michael Gertz



Restructuring of the Makefile:
------------------------------

Because the Makefile was growing more and more, we restructured its appearance
and adapted the usage of the CLM Community:

 - the definition of the Compiler calls and options and the libraries to link
   has been excluded in a file Fopts. This file is included.

   In the subdirectory "LOCAL", several example files exist. If none of these
   files is appropriate, an own file has to be defined.

 - the definition of all object files has been excluded in the file ObfFiles

 - the definition of the dependencies has been excluded in the file ObjDependencies

Ulrich Schaettler

-------------------------------------------------------------------------------
 
4.12:                                                    13.04.2010
=====

Modifications implemented in this new version:

Computation of potential vorticity
----------------------------------
   (by Michael Baldauf)

   The COSMO-Model now contains the possibility to calculate the 3 compontents
   of the (relative) vorticity  "curl v" (physical components in the system of
   spherical base vectors) and the potential vorticity (PV). This is a material
   invariant under quite general conditions, namely adiabatic and frictionless
   processes. Analogously, P * rho is an integral invariant under the same
   conditions.


   New subroutines:   
    => metric_coeffs in numeric_utilities
       calculate the metric coefficients (see Doms, Schaettler (2002) section 3):
         d zeta / d lambda (at constant phi,    z) = - dzeta/dz * dz/dlambda
         d zeta / d phi    (at constant lambda, z) = - dzeta/dz * dz/dphi
       at the scalar grid positions.
       (remarks:
         dzeta/dz = 1/( dz/dzeta ) = -1/sqrt(G) (see subroutine calc_sqrtg_r)
         dz/dzeta = -sqrt(G)  )
       This subroutine is closely related to calc_sqrtg_r and should be 
       called after that.

    => curl in numeric_utilities
       calculate the contravariant (physical or 'non-physical') components of 
       curl v in spherical base vectors for given contravariant, 
       physical components of a vector field v (in spherical base vectors) 

    => calc_Theta_Tppp in numeric_utilities
       calculate potential temperature Theta from T' and p'

    => potential_vorticity_rho in pp_utilities
       calculate  rho * PV  =  del Theta * ( curl v + 2 Omega )


   New fields: dzeta_dlam, dzeta_dphi

   New variable: l_dzeta_d_needed (only for internal purposes, NO Namelist variable)

   New output parameters: 
     There are 4 new output parameters, that can be chosen:

     VORTIC_U     relative vorticity, u-component in rotated grid
     VORTIC_V     relative vorticity, v-component in rotated grid
     VORTIC_W     relative vorticity, vertical component
     POT_VORTIC   Potential Vorticity


Changes for itype_lbc_w in fast_waves_rk
----------------------------------------
   (by Guenther Zaengl)

   The namelist parameter to choose an option for computing the bottom
   boundary condition has been renamed from itype_lbc_w to itype_bbc_w 
   (because "lbc" is used for "lateral boundary condition" and "bbc" 
   now is used for "bottom boundary condition").

   Moreover, the options itype_bbc_w = 2/3 have been changed from
   second order differences to a differencing following iadv_order
   without Runge-Kutta stepping. The options 0/1 still are for a Runge-Kutta
   stepping using iadv_order and 4/5 are using fourth-order centered
   differences.

   For itype_bbc_w = 0/2/4 a quadratic extrapolation of the horizontal 
   wind to the surface is  computed, while for itype_bbc_w = 1/3/5 a 
   linear one is used. The latter options are then only used for computing
   the metric terms.


Changes for the horizontal diffusion
------------------------------------
   (by Oliver Fuhrer)

   Situation up to now
   ~~~~~~~~~~~~~~~~~~~
   There are (mainly) two types of horizontal diffusion, which can be chosen
   by the Namelist variable itype_hdiff:
     1: 4th order linear horizontal diffusion
     2: 4th order linear monotonic horizontal diffusion with an orographic limiter

   With another Namelist variable lhdiff_mask, it could be chosen up to now, 
   whether the horizontal diffusion is performed on the whole field 
   (lhdiff_mask=.FALSE.) or only in the boundary zone (lhdiff_mask=.TRUE.)

   For itype_hdiff=2, correction factors could be given for the diffusion
   of the winds (hd_corr_u), the humidities and other tracers (hd_corr_q)
   and the temperature and pressure deviation (hd_corr_t).

   For itype_hdiff=1, only the diffusion of the humidities and other tracers
   could be switched off completely by setting hd_corr_q=0.

   A third variant (itype_hdiff=3) was only used earlier during the development
   of the Runge-Kutta scheme.

   Changes in the horizontal diffusion
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   Computation of the horizontal diffusion has been generalized in order

   - to treat the diffusion in the interior and in the boundary zone differently:
       For every (former) Namelist variable hd_corr_x, two variables hd_corr_x_in and
       hd_corr_x_bd have been introduced.

   - to treat diffusion of pressure deviation differently from temperature.
       Also, two new variables hd_corr_p_in and hd_corr_p_bd have been introduced
       to separate diffusion for temperature and pressure deviation.

   By an appropriate setting of the variables hd_corr_x_bd, the effect of
   lhdiff_mask can be reproduced:
      hd_corr_x_in=0.0:   No diffusion in the interior, as is for lhdiff_mask=.TRUE.
      hd_corr_x_in>0.0:      Diffusion in the interior, as is for lhdiff_mask=.FALSE.
   The variable lhdiff_mask therefore has been eliminated.

   The effect of the generalization now is, that also for itype_hdiff=1 reduction
   factors can be specified for the interior and for the boundary zone of the
   domain separately. And pressure deviation can be treated separately from 
   temperature.

   The option itype_hdiff=3 has been eliminated, because it is not used any more.


   Changes in the Namelist /DYNCTL/
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

     Eliminated variables:   lhdiff_mask, hd_corr_u, hd_corr_q, hd_corr_t

     New variables:
          hd_corr_u_in, hd_corr_u_bd
          hd_corr_t_in, hd_corr_t_bd
          hd_corr_p_in, hd_corr_p_bd
          hd_corr_q_in, hd_corr_q_bd


   Reproducing the old settings
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   All old settings can be reproduced with the new namelist variables by a proper
   setting. This is explained shortly. hd_corr_u, hd_corr_q and hd_corr_t, resp.,
   are the settings of the old Namelist variables.

   itype_hdiff=1, lhdiff_mask=.TRUE.:
           (diffusion only in the boundary zone, no reduction)

     Set:  hd_corr_u_bd = 1.0                         hd_corr_u_in = 0.0
           hd_corr_t_bd = 1.0                         hd_corr_t_in = 0.0
           hd_corr_p_bd = 1.0                         hd_corr_p_in = 0.0
                                                      hd_corr_q_in = 0.0

           For the diffusion of the humidities in the boundary zone, the situation 
           is a bit different, because it could be switched off before with 
           hd_corr_q = 0.0. So the setting must be

                         / = 1.0    if hd_corr_q /= 0.0:  diffusion, but no reduction
           hd_corr_q_bd <
                         \ = 0.0    if hd_corr_q == 0.0:  no diffusion
   

   itype_hdiff=1, lhdiff_mask=.FALSE.:
           (diffusion in the boundary and in the interior zone, no reduction)

     Set:  hd_corr_u_bd = 1.0                         hd_corr_u_in = 1.0
           hd_corr_t_bd = 1.0                         hd_corr_t_in = 1.0
           hd_corr_p_bd = 1.0                         hd_corr_p_in = 1.0

           Again, the diffusion of the humidities could be switched off in the old
           settings, which must now be reflected for the boundary and the 
           interior zone:

           hd_corr_q_bd  / = 1.0    if hd_corr_q /= 0.0:  diffusion, but no reduction
                        <
           hd_corr_q_in  \ = 0.0    if hd_corr_q == 0.0:  no diffusion


   itype_hdiff=2, lhdiff_mask=.TRUE.:     (COSMO-DE setting)
           (diffusion and reduction of fluxes only in the boundary zone)
   
     Set:  hd_corr_u_bd = hd_corr_u                   hd_corr_u_in = 0.0
           hd_corr_q_bd = hd_corr_q                   hd_corr_q_in = 0.0
           hd_corr_t_bd = hd_corr_t                   hd_corr_t_in = 0.0
           hd_corr_p_bd = hd_corr_t                   hd_corr_p_in = 0.0


   itype_hdiff=2, lhdiff_mask=.FALSE.:    (COSMO-EU setting)
           (diffusion and reduction of fluxes in the boundary and in the interior zone)

     Set:  hd_corr_u_bd = hd_corr_u                   hd_corr_u_in = hd_corr_u
           hd_corr_q_bd = hd_corr_q                   hd_corr_q_in = hd_corr_q
           hd_corr_t_bd = hd_corr_t                   hd_corr_t_in = hd_corr_t
           hd_corr_p_bd = hd_corr_t                   hd_corr_p_in = hd_corr_t

    With the appropriate settings, the results are not changed.


Changes in the LHN scheme
-------------------------
   (by Daniel Leuenberger, 28.12.2009)

   a. Reintroduction of spatial quality function w
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   In the original LHN method of Jones and Macpherson (1997), a spatial quality function
   w is used to weight the radar observed and model precipitation to form the
   analysed precipitation. They calculated w from the distance to the next radar
   station, which is a good approximation to the radar quality over flat
   terrain. In mountainous regions such a quality function may not be optimal
   since in such regions the quality of radar precipitation is affected by
   various effects such as partial beam blocking or ground clutter. Leuenberger
   (2005) introduced a quality function based on geometrical visibility
   calculations of the Swiss radar network taking into account terrain induced
   radar problems. More recently, Rossa et al. (2009) proposed a spatial quality
   function based on statistical radar information, mainly using frequency of
   occurence as means to detect ground clutter and regions with low radar
   visibility. 
   In order to take such spatial quality information into account, the COSMO 
   LHN code needed an upgrade, mainly to reactivate the possibility to use w in
   the calculation of the analysed precipitation, on which the determination of
   the latent heat increments are based. No fundamentally new code has been
   written to this end, instead the existing code that was still present for the
   use of the PI product has been refactured. A switch lhn_spqual has
   been introduced. If this switch is set to true, a 2D grib record named
   RADSPQUAL is read after each radar observation record (TOT_PREC). The order of
   the records is important, meaning that after each obs record, a quality record
   has to follow immediately. The field spqual must contain values in [0,1], so
   in contrast to the old code, no distances to the next radar station are read
   in, but directly the quality w. 
   
   b. Generalisation of the use of the radar observation input frequency
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   Up to now there was no possibility to chose the radar observation input
   frequency, but it was determined based on the switch lhn_radar_dx. This switch
   was introduced to differentiate between two DWD radar products, namely the
   old PI and the new DX product. The switch not only determined the radar input
   frequency but also the time interpolation between two subsequent radar
   observations and the use of the spatial radar weigth w.
   Now, the radar input time step can be specified in the namelist INPUT_ASS
   (lhn_dt_obs). Dependent on the radar input frequency, the time interpolation
   between subsequent radar observations is chosen:
   - lhn_dt_obs <= 10min: observations in the range [-2,3]*lhn_dt_obs are
     considered in the time interpolation (like up to now using lhn_radar_dx = true)
   - lhn_dt_obs > 10min: observations in the range [0,1]*lhn_dt_obs are
     considered in the time interpolation, i.e. only the current and next
     observation is used (like up to now using lhn_radar_dx = false)
   
   
   c. More robust check in input of radar observations
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   Up to now no consistency check was made upon the radar observation grib
   records read in from the LHN input files, making the code vulnerable to the
   input of completely wrong grib fields. Therefore a more robust check was
   introduced if the input observations are consistent with the expected input.
   Beside the check for the appropriate observation time, the following
   additional properties of the grib records are now checked:
   - grib number and grib table number
   - dimensions of the 2D domain
   
   
   References:
   ~~~~~~~~~~~
   
   Jones, C. D. and B. Macpherson, 1997: A Latent Heat Nudging Scheme for the 
        Assimilation of Precipitation Data into an Operational Mesoscale Model. 
        Meteorol. Appl., 4, 269-277
   Leuenberger, D., 2005: High-resolution Radar Rainfall Assimilation:
        Exploratory  Studies with Latent Heat Nudging, Dissertation Nr. 15884,
        ETH Zuerich. Available from 
        http://e-collection.ethbib.ethz.ch/cgi-bin/show.pl?type=diss&nr=15884
   Rossa, A., del Guerra, F. and Leuenberger, D., 2009: An Empirical Radar Data 
        Quality Function, Proceedings of the 34th AMS Conference on Radar 
        Meteorology, 5. - 9. October 2009 (Williamsburg,VA, USA), 8pp.
   
   Changes in the Namelist switches (INPUT_ASS)
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   => removed switch lhn_radar_dx
   => added switch lhn_spqual       (default value: false)
   => added lhn_dt_obs              (default vaule: 5min)
   
   NOTE that no changes to the namelist variables is required, the defaults
   should match the behaviour of the old code. In this case, there are also 
   no changes of the results.
   

Update of the new multi-layer snow model
----------------------------------------
  An update of this scheme has been implemented. This is still a preliminary,
  non-operational version, which is under testing at DWD. It is not meant
  for "public use".

  (by Ekaterina Machulskaya)

Update of sea-ice scheme
------------------------
  An adapted sea-surface temperature is passed to subroutine tgcom as
  argument: t_s now contains t_ice at sea points covered with ice.

  (by Jan-Peter Schulz)

Technical Changes
-----------------

 - Modification of interfaces in pp_utilities and meteo_utilities:
   Some interfaces in these modules have been changed for their usage
   in the postprocessing program FieldExtra. The modified subroutines
   are:

   => cal_conv_ind in module pp_utilities:
      Insertion of additional interface arguments for error checking
      and provision of a mask, for which the computations have to be done

   => Subroutine calc_sdi has been moved from module pp_utilities to 
      module src_output, because of formal reasons. 
      It does not fit to a utility module, because it uses other utility 
      and data modules. This restricts its usage in FieldExtra

   => reference_atmosphere, reference_atmosphere_2 in module meteo_utilities:
      some arguments have been declared as optional

 - Introduced a new subroutine in src_input.f90, to check consistency of
   vertical coordinate parameters for all fields.

 - src_radiation.f90:
   => Added computations for sunshine durations (by MCH)
   => Some changes in the ART part for new aerosol developments


Bug corrections and minor changes
---------------------------------

   => src_radiation.f90 (by Lucio Torrisi)
      The call to exchg_boundaries had a wrong vertical dimension in the 
      9th position of array kzdims

   => numeric_utilities_rk.f90, SR zadv_pd_rk_cri_bott (by Stephan Pfahl)
      the 4th order option had erroneously been mixed with the vector 
      optimizations of the 2nd order option
      (changes results for 4th order option of Bott advection)

      Another bug has been in the 2nd order option, where index lists
      are created for the cases that the integer courant numbers are
      >= 1 or <= -1. Intermediate values for both cases have been
      written to the same variable by mistake.

   => Corrected comment for dimension of qvsflx in several subroutines

   => Renamed t0 to t0_melt because of conflicting names

   => Changed following short names because of conflicting names with
      other applications:

      old          new
      --------------------
      QNC          QNCLOUD
      QNR          QNRAIN
      QNI          QNICE
      QNS          QNSNOW
      QNG          QNGRAUPEL
      QNH          QNHAIL        especially QNH is used for surface pressure
                                 reduced to Mean-Sea Level in air traffic applications
                                 (reported by MeteoSwiss)

      PRS_MIN      RSMIN         is minimum stomata resistance of plants, but old name
                                 confusing name with PRS_GSP, PRS_CON, which means
                                 precipitation rate of snow 
                                 (COSMO variable now called rsmin2d, to distinguish
                                  from the real value crsmin)



Changes of the results:
-----------------------

  - COSMO-DE:  changes due to modifications in the bottom boundary condition
               for the Runge-Kutta dynamics and
               in the case that ABS(icr) >= 1, because of the bug in 
               SR zadv_pd_rk_cri_bott

  - COSMO-EU:  no changes for the operational application


Changes in the Namelist variables
---------------------------------

/DYNCTL/:     

     => Renamed Namelist variable itype_lbc_w to itype_bbc_w

     => Eliminated variables:   lhdiff_mask, hd_corr_u, hd_corr_q, hd_corr_t

     => New variables:
          hd_corr_u_in, hd_corr_u_bd
          hd_corr_t_in, hd_corr_t_bd
          hd_corr_p_in, hd_corr_p_bd
          hd_corr_q_in, hd_corr_q_bd


/NUDGING/:    => removed switch lhn_radar_dx
              => added switch lhn_spqual       (default value: false)
              => added lhn_dt_obs              (default vaule: 5min)
   

/GRIBIN/:   The namelist variables yvarini and yvarbd have been eliminated.
            With these variables, the lists of initial and boundary variables, 
            resp., could be specified. But depending on the configuration 
            chosen, these lists are also set up by the program. 
            Specifying them by hand was too error-prone.

Ulrich Schaettler

-------------------------------------------------------------------------------
 
4.11:                                                    27.11.2009
=====

Modifications implemented in this new version

 - Changes in the Dynamics (by Guenther Zaengl)

    a) Bug fix for Tiedtke convection scheme ccombined with Runge-Kutta dynamics: 
       corrected use of cloud ice tendency

    b) Option for generalized Asselin Filter (after Williams 2009)
       With default setting of new NL switch alphaass (default: 1.0) the same
       results as before are obtained

    c) Option for preventing runaway cold pools in steep valleys 
       (new NL switch ltadv_limiter = true, works only in combination with potential 
        temperature advection; itheta_adv=2)

    d) Option for selecting the lower boundary condition for vertical wind speed 
       (new NL switch itype_lbc_w):
        0/1: RK-like method following iadv_order
        2/3: Second-order centered differences
        4/5: Fourth-order centered differences
        0/2/4: include extrapolation of horizontal wind to surface
        1/3/5: no extrapolation of horizontal wind to surface

    e) more efficient implementation of metric terms in fast_waves_rk, including 
       quadratic extrapolation to surface level for consistent second-order accuracy

       NOTE: This changes also influences the results

    f) Option for reference atmosphere with constant Brunt-Vaisala-frequency 
       (idealized runs only: set NL switch irefatm to 3.
        NOTE: this NL switch is only available in the NL group for idealized 
              test cases)

    g) vectorized routine for third-order explicit vertical advection


 - Introduction of the multi-layer snow model (by Ekaterina Machulskaya)

 - Introduction of additional external parameter fields for
    => surface emissivity            (in the radiation)
    => aerosol distributions         (in the radiation)
    => minimum stomata resistance for plants (in the multi-layer soil model)
   (by Juergen Helmert and Hermann Asensio)

 - Modifications for the new sea-ice model with respect to T_ICE and H_ICE
   (by Jan-Peter Schulz)

 - Technical Adaptations and Bug Fixes
    => environment.f90: 
       Adaptations for definition of special integer variables in order to
       run with MPI datatypes also on 64-bit architectures
       (ldatatypes=.TRUE. can now be used on all architectures)

    => pp_utilities.f90:
       Initialization of logical variable lcomp (=.TRUE.) for option lzcalc_si
       (by Oli Fuhrer)

    => src_input.f90: 
       computation of nlandpoints (by Jan-Peter Schulz)


Changes of the results:
-----------------------

The operational COSMO-DE application is affected by the more efficient implementation
of metric terms for Runge-Kutta dynamics in fast_waves_rk.

The Leapfrog Applications are not changed.


Changes in the Namelist variables
---------------------------------

New Namelist variables in the group /PHYCTL/:

     Switch           Description                                   Default

  - lmulti_snow     to switch on/off the multi-layer snow model     .FALSE.
  - ke_snow         number of layers in multi-layer snow model         2

  - itype_aerosol   type of aerosol map                                1
                       1:  Tanre (Default)
                       2:  Tegen (exp)

  - itype_root      type of root distribution                          1
                      1: uniform (Default)
                      2: exponential (following Arora & Boer, 2003)

  - itype_heatcond  type of soil heat conductivity                     1
                      1: use average soil moisture
                      2: take into account soil moisture/soil ice

  - itype_hydbound  type of hydraulic lower boundary                   1
                      1: allow for drainage but not diffusion
                    ( 2: rigid lid:  not yet implemented )
                      3: ground water with drainage and diffusion 

  - lemiss          if true, use an external surface emissivity map    .FALSE.
  - lstomata        if true, use a minimum stomata resistance map      .FALSE.


New Namelist variables in the group /DYNCTL/:

  - alphaass

  - itype_lbc_w     Lower boundary condition for vertical wind             1
                      =0/1: RK-like method following iadv_order
                      =2/3: Second-order centered differences
                      =4/5: Fourth-order centered differences
                      0/2/4: include linear extrapolation of 
                             horizontal wind to sfc
                      1/3/5: no extrapolation of horizontal wind to sfc

  - ltadv_limiter   if true, use limiter for temperature advection    .FALSE.
                    (itheta_adv=2 only)

Ulrich Schaettler

-------------------------------------------------------------------------------
 
4.10:                                                    11.09.2009
=====


This version introduces 
 - a new sea ice scheme
 - changes to the TKE scheme
 - a bug fix in SR hydci_pp_gr, src_gscp.f90
 - more vector optimizations, technical adaptations and bug fixes

A new sea ice scheme:                by Jan-Peter Schulz
---------------------


 Technical changes:

 - data_runcontrol.f90:  added new NL switch  lseaice
 - data_fields.f90:      added new field lseamask, to identify ocean points
 - organize_physics.f90: read new NL switch lseaice
                         call to new Module src_seaice
 - src_allocation.f90:   allocate new field lseamask
                         allocate fields h_ice, t_ice also for lseaice

 - src_radiation.f90:    
    In case the sea ice model is used AND water point AND ice is present,
    compute ice albedo for water points with an empirical formula taken from GME.
    The ice albedo is the lower the warmer, and therefore wetter, the ice is.
    Use ice temperature at time level nnow (2-time level scheme in sea ice model).

 - src_turbdiff.f90:  (turbdiff.incf, turbtran.incf)
    Discriminate now between ice-covered and open-water grid boxes.
    Note that this is done different for lake and sea grid boxes, 
    if the FLake Model is used.

 - New Module: src_seaice.f90

(by Jan-Peter Schulz)


Changes to the TKE scheme:           by Matthias Raschendorfer, et al.
--------------------------

The following changes were implemented in the TKE scheme
 - Introduction of implicit vertical diffusion also for TKE and
   correction of a bug related with the explicite TKE diffusion (by Oliver Fuhrer).
   Adoptions with respect to the implicit vertical TKE diffusion.
   This is controlled by a new Namelist switch limpltkediff (default: .FALSE.)

 - Introduction of 3D and horizontal corrections for windshear production 
   incl. metric terms.
   This is controlled by a new Namelist switch itype_sher (default: 0)

 - Introduction of a separate horizontal shere mode and wake turbulence 
   terms due to the SSO-scheme.
   This is controlled by a new Namelist switch ltkesso (default: .FALSE.)

 - Introduction of a stablity correction for turbulent length scale.

 - Removing the horizontal loops for SCLM treatment.

 - New Tuning Constants have been introduced:
    => a_hshr:  Length scale factor for separate horizontal shear production 
                of TKE (default value: 0.2)
    => a_stab:  Length scale factor for the stability correction
                (default value: 0.0;  no stability correction so far)
   (Namelist parameters in /TUNINIG/)

 - The horizontal loops for the SCLM have been removed.

(by Matthias Raschendorfer)


A bug fix in SR hydci_pp_gr (src_gscp.f90)
------------------------------------------

The variable scac in Section 4 has been set twice.
A line has been removed.


More vector optimizations, technical adaptations and bug fixes
--------------------------------------------------------------

 - Introduced field for snow_melt amount (data_fields.f90, src_allocation.f90,
   src_setup_vartab.f90)

 - Add characters after a backslash in comments; g95 interprets that as 
   continuation line 
   (in Modules src_gridpoints.f90, src_lheat_nudge.f90, src_mult_local.f90,
   src_obs_proc_cdf.f90, src_obs_processing.f90)

 - organize_data.f90:
   Initialize default values for a subdomain output to avoid compiler problems
   in case of small numerical discrepancies in organize_data.f90

 - src_output.f90:
   Call to calc_bulk_richardson, calc_pbl_brn and output of fields BRN, HPBL

 - fast_waves.f90:
   Another adaptation of the indices to compute the dynamical bottom boundary
   condition for the Leapfrog scheme

 - src_radiation.f90:
   Bug correction for the case "icldm_rad==2" when coud ice is present.
   Additional vector optimizations by NEC

 - src_slow_tendencies_rk.f90:
   Renamed option on_adb to _on_adb for new NEC Compiler Version 

 - src_conv_tiedtke.f90:
   field cu_evap was hardcoded with 60 levels; is now ALLOCATABLE

 - src_input.f90:
   extension of NetCDF attributes for ivctype and irefatm
   correction of model input for irefatm=2 and/or ivctype=2

 - Added NEC compiler directives for opion _on_adb in Modules:
   numeric_utilities_rk.f90, src_diagbudget.f90, src_gscp.f90, src_meanvalues.f90,
   src_output.f90, src_soil_multlay.f90, utilities.f90


Changes in the Namelist variables
---------------------------------

New Namelist variables in /RUNCTL/:
  
  - lseaice         to switch on/off the sea ice scheme    Default:  .FALSE.


New Namelist variables in /PHYCTL/:
  
  - limpltkediff    to switch on/off the implicit diffusion for TKE
                                                           Default:  .FALSE.

  - ltkesso         to calculate SSO-wake turbulence production for TKE
                                                           Default:  .FALSE.

  - itype_sher      type of shear production for TKE       Default:    1
                       1:  only vertical shear
                       2:  full isotropic 3D-shear
                       3:  vertical shear and separted horizontal shear mode


New Namelist variables in /TUNING/:
  - a_hshr:         Length scale factor for separate horizontal shear production 
                    of TKE 
                                                           Default:    0.2

  - a_stab:         Length scale factor for the stability correction
                                                           Default:    0.0


Changes of Results:
-------------------

The results are affected by the following changes:

 - TKE scheme: Because of some reformulation of formulas, there are some
               small (only numerical) changes to the results
               (COSMO-EU and COSMO-DE)

 - Precipitation: Because of the bugfix in hydci_pp_gr the results of the
                  applications using graupel (itype_gscp=4) change.

 - Sea ice:    There has been an adaptation in turbtran: There were 2 places 
               where the sea-ice mask was computed, but with different 
               temperatures. This has now been harmonized to use t_g in
               both cases. This also changes the results a bit.

 
   
Ulrich Schaettler

-------------------------------------------------------------------------------

4.9:                                                     10.06.2009
====

This version introduces the first implementation of COSMO_ART (Aerosol and
Reactive Tracers) into the COSMO-Model. Besides that, more routines are 
optimized for vectorization. In the dynamics, there have been changes for
a better treatment of the metric terms and, finally, there are some technical
(editorial) changes.

With COSMO_ART and the necessity to have some vector processor specific
(or NEC-SX specific) optimizations, we implemented more ifdef-directives to
the COSMO-Model. If you want to run the corresponding features, you have to
define the appropriate directives before compiling the program.

  - COSMOART: if you want to compile the model for including the COSMO-ART,
              you have to set -DCOSMOART

  - POLLEN:   if you want to compile the model for including the Pollen package,
              you have to set -DPOLLEN

  - NEC_SX:   if you want to do some special optimizations for the NEC-SX,
              you have to set -DNECSX. These special optimizations are:
               => use of 3D versions of advection- and relaxation operators
                  Tests on the IBM in Reading showed, that this is not 
                  beneficial for this architecture. Most probably the cache
                  use is heavily disturbed because of bigger local variables
               => Enabling of loop collapsing in some routines: 
                  The computational indices of the horizontal loops are
                  changed so that a twodimensional field is processed as one
                  long vector.

Because of introducing more ifdefs, we changed the suffix of the main program
again to be lmorg.f90 (in the last versions it was lmorg.F90). For a successful
compilation of the COSMO-Model (no matter whether you use some of the ifdef
variables or not), you have to use the preprocessor of your compiler in 
any case.


Implementation of COSMO_ART:
----------------------------

COSMO_ART is a chemistry package to compute aerosols and reactive tracers.
It also includes a package to use pollen as tracers. The work of 
implementing COSMO_ART into the COSMO-model has been done at the 
"Karlsruhe Institute of Technology".

The COSMO-Model has been adapted to include this package via online 
coupling into its meteorology. The setup of the model, the I/O-module
and the dynamics have been adapted to work with the additional variables.

COSMO_ART is implemented using ifdef-statements.  Therefore 
COSMO_ART or the Pollen part have to be activated at compile time with 
the preprocessor directives -DCOSMOART or -DPOLLEN, resp. If these
directives are not set, no change to the COSMO-Model is done.

There are 3 new Namelist switches in /RUNCTL/: with l_cosmo_art and l_pollen, resp.,
the execution of COSMO_ART can be controlled. In addition, with ldebug_art, a 
debug mode for COSMO_ART can be activated. The default for all these variables
is .FALSE.

The COSMO_ART package itself is NOT part of the COSMO-Model. For accessing
the source code for COSMO_ART, the "Karlsruhe Institute of Technology" has
to be contacted.

(Modified sources:
     data_io, data_runcontrol, hori_diffusion, lmorg, organize_data, 
     slow_tendencies, src_input, , src_leapfrog, src_radiation, 
     src_relaxation, src_setup, src_setup_vartab)


Changes in the dynamics:
------------------------

 - A more accurate discretization of the metric terms has been implemented 
   in the sound wave solver of the Runge-Kutta scheme (fast_waves_rk).
   This changes the results for the Runge-Kutta applications and it takes
   more computational time!

 - The SR calc_sqrtg_r has been moved from module src_integrals to 
   numeric_utilities and is now called for Leapfrog and Runge-Kutta
   applications.

 - An option for using potential temperature as advected variable has 
   been implemented in the Runge-Kutta scheme. The default still is using
   perturbed temperature.

   New Namelist Variable itheta_adv in /DYNCTL/:
    itheta_adv = 0: use T' (perturbation temperature) for advection (default)
                 1: use theta' (perturbation potential temperature)
                 2: use theta (full potential temperature)

 - A new Namelist switch itype_lbc_qrsg has been introduced to control
   the setting of the humidity variables qr, qs and qg at the boundary zones
   after the dynamics and before the microphysics:
    itype_lbc_qrsg = 1: (default) no gradient condition
                     2: set qr,qs,qg to 0.0 at the boundaries
                     3: no presetting at the boundaries at all
                        (must not be chosen for Leapfrog applications)

 - To avoid confusion, the (former) Namelist switch itype_lbcqx has been 
   renamed to itype_outflow_qrsg, because it only affects the relaxation
   of qr, qs and qg, and not the setting at the boundaries.
   With itype_outflow_qrsg, the type of relaxation treatment for qr, qs, qg
   is chosen:
    itype_outflow_qrsg = 1: (default) same treatment as all variables
                         2: no relaxation for qr,qs,qg at outflow boundary points

 - fast_waves.f90: 
   A bug was fixed for computing the dynamical bottom boundary condition
   in the Leapfrog sound wave solver. Wrong computational indices were
   used for a local variable.
   This changes the results for the Leapfrog applications using ldyn_bbc=.TRUE.

 - Horizontal Diffusion:
   Additional fields hd_mask_dcoeff_t,q,u have been allocated in the global memory,
   to avoid computation of these fields in every time step.



Vector Optimizations:
---------------------

 - Computing of synthetic satellite images
   The interface of RTTOV7_supsat and RTTOV7_spline have been modified in 
   order to call these routines for a whole vector.
   The initialization routine RTTOV7_RTTVI is now only called once at the
   beginning of the model run.
   Some routines of the RTTOV7-library have been optimized for vectorization

 - Radiation on a coarser grid
   In organize_radiation, the local variables have been implemented now
   as 3D versions, to get a cleaner code for the interpolation on a 
   coarser grid and for better vectorization of this interpolation.

 - fast_waves_rk: 
     => Vectorization over small loops is now avoided in the boundary zone
     => ON_ADB directives have been implemented

 - hori_diffusion.f90, numeric_utilities.f90:
     => implemented 3D versions for diffusion operators lap_2, lap_4am, 
        lap_4aml to save CALLs

 - meteo_utilities.f90:
     => SR satad: To avoid setting up the index arrays, if no work has to
        be done, the minimum of local variable zdqd is computed and checked
        against 0.0

 - pp_utilities.f90:
     => implemented a vectorized version of routine vert_avg

 - src_advection_rk.f90, numeric_utilities_rk.f90:
     => implemented 3D versions of advection operators: xadv_rk_ppm, yadv_rk_ppm,
        xadv_pd_rk_vanleer, yadv_pd_rk_vanleer, xadv_pd_rk_bott, yadv_pd_rk_bott,
        ufrac_crint_rk, vfrac_crint_rk
        But these operators are only called threedimensional, if the ifdef-directive
        NECSX is set during compilation. Otherwise, the operators are still called
        twodimensional, which might be better for cache architectures.
        (At least on the Reading IBM we saw a performance loss, if running with 
         3D operators)
     => implemented index lists for Bott-cri advection (SR zadv_pd_rk_cri_bott)
     => replace SELECT by IF...ELSEIF in function udsdx

 - src_gscp.f90, src_relaxation.f90, src_runge_kutta.f90, src_soil_multlay.f90
   environment.f90
     => A subroutine "collapse" was implemented in the module environment.f90,
        which sets the horizontal loop indices in a way, that the (NEC) compiler
        can collapse the twodimensional field to one big loop, to get a bigger
        vector length. 
        This subroutine serves as a switch: it has to be "turned on" before the 
        loop and also has to be "set off" after the loop, to reset the loop
        indices to the usual values.
     => This is used in some routines, to collapse loops. 

 - src_output.f90:
   The vertical interpolations to p- and z-levels have been optimized for 
   vectorization.


Changes for lana_qi, llb_qi = .FALSE.:
--------------------------------------

 - initialize_loop (in lmorg), dfi_initialization.f90:
   In case of lana_qi and/or llb_qi = .FALSE., but running with cloud ice
   in the COSMO-Model (itype_gscp=3/4), cloud ice is taken from cloud 
   water, where the temperatures are low enough. In addition, the humidity 
   field qv is recalculated in order to be consistent with the water vapour
   saturation curve for ice at T < 248.15K and not for water. 
   But this is only applicable for GME boundary data that do not contain 
   cloud ice. For other driving models this would lead to an erroneous 
   reduction of humidity in the model.

   As a first action, this recalculation of qv is not done any more now.
   because GME data without cloud ice are not used now in the operational
   setup. The computation of cloud ice for the COSMO-Model, if it is not 
   available in the driving model, will be put to the INT2LM, where it 
   will be different for GME and other models. Then the switches lana_qi,
   llb_qi can be eliminated from the COSMO-Models at all.
   


Further Changes and Bug Fixes:
------------------------------

 - There were still some calls to get_timings, that were not enclosed
   with IF (ltime) (in organize_physics, semi_implicit, src_2timelevel)

 - numeric_utilities_rk.f90
    => routine sum_DDI: use gather_values only if (num_compute > 1)

 - organize_data.f90:
    => removed unnecessary SSO fields from restarts
    => included radtopo fields to initial- and constant- field lists

 - organize_physics.f90:
    => corrected a comment for CO2 concentration
    => adapted a check for ltrans_prec and l2tls
    => included boundary exchange necessary for running the radiation 
       on a coarser grid

 - pp_utilities.f90:
    => corrected some PRESENT checks for optional variables in routine ascent

 - time_utilities
   Corrected computations of sums, which started an index too early

 - src_obs_proc_air.f90, src_obs_proc_aof.f90, src_obs_proc_cdf.f90
   A string comparison with '???' has to be changed to "???", because the
   IBM preprocessor could  not handle that correcty, if using the single
   quotation mark.


Changes in the Namelists
------------------------

   Change of an existing Namelist variable:
      The Namelist variable itype_lbcqx (old name) has been renamed to 
      itype_outflow_qrsg (new name) to better reflect its meaning

    itype_outflow_qrsg = 1: (default) same treatment as all variables
                         2: no relaxation for qr,qs,qg at outflow boundary points


   New Namelist variables in DYNCTL:

    itype_lbc_qrsg: type of lateral boundary treatment for qr, qs, qg:
         = 1: (default) zero-gradient condition
           2: set qr,qs,qg to 0.0 at the boundaries
           3: no presetting at the boundaries at all
              (must not be chosen for Leapfrog applications)


    itheta_adv: option for using potential temperature as advected variable
         = 0: (default) use T' (perturbation temperature) for advection
           1: use theta' (perturbation potential temperature)
           2: use theta (full potential temperature)


   New Namelist variables in RUNCTL:

    l_cosmo_art:  if .TRUE., run the COSMO_ART          (Default: .FALSE.)
    l_pollen:     if .TRUE., run the Pollen component   (Default: .FALSE.)
    idebug_art:   if .TRUE., debug output for COSMO_ART (Default: .FALSE.)


Changes of the Results
----------------------

   The results are affected by the following changes:

    - The more accurate discretization of the metric terms in the 
      Runge-Kutta scheme. This also takes more computational time.

    - If running the Leapfrog scheme and ldyn_bbc=.TRUE., the results
      are changed by the bugfix for computing the dynamical bottom boundary 
      condition

    - At least some of the vector optimizations do change the order of the
      computations. Although this is mathematically correct, the results
      will change numerically.



Ulrich Schaettler

-------------------------------------------------------------------------------

4.8.1.1:                                                    05.2009
========

This version is just a correction update.
The new implementation of the lower boundary condition for w
is switched off again because of stability problems with the
Bott advection scheme.

Ulrich Schaettler

-------------------------------------------------------------------------------

4.8:                                                     12.02.2009
====

This version contains many technical changes, some bug fixes and a more 
consolidated implementation of the new reference atmosphere.
In the Runge-Kutta dynamics, a change in the computation of the coriolis
term has been introduced, which is tested first before putting it to
operations.


New Reference Atmosphere:
-------------------------

A consistent implementation of the base-state calculation of the new 
reference atmosphere has been finished. The old calculation is retained
for the standard reference atmosphere.

A new field p0hl (reference pressure on half levels) has been introduced
and is now used in the whole model. Before, this field has been calculated
separately in different components.

!!! NOTE: This changes the results slightly, because of numerical reasons!

The Grib encoding has been modified for the new reference atmosphere to 
facilitate future extensions. 
Also a new NL switch l_ke_in_gds has been introduced, to explicitly write
the number of vertical levels in the gds area, where the vertical coordinate
parameters are written.

!!! NOTE: The reference atmosphere can only be chosen in the INT2LM!


Runge-Kutta dynamics:
---------------------

A stable integration of the coriolis terms is achieved by calculating their
tendencies in every RK substep like the horizontal advection terms.
Neglecting these terms (as done up to now) causes a (in fact very) weak
instability. To test this implementation first, the changes depend on the
setting of the variable l_Coriolis_every_RK_substep: .FALSE. is the old way,
.TRUE. is the new computation. After testing and evaluation, this variable
will disappear again and the new way will be taken over for operations.)

NOTE: To use the stable integration of the coriolis terms, set 
      l_Coriolis_every_RK_substep=.TRUE. in src_runge_kutta.f90


Assimilation:
-------------

 - src_obs_proc_cdf.f90:
   Bug correction: Reading a second wind gust value removed for buoys,
   array initialisation and setting of quality flag corrected for profilers.
   Moved routine obs_cdf_distrib_reports to module src_obs_proc_util.

 - src_obs_proc_util.f90:
   Included routine obs_cdf_distrib_reports from src_obs_proc_cdf

 - src_lheat_nudge.f90:
   Elimination of some unused variables

 - src_obs_proc_air.f90, src_obs_proc_aof.f90, src_obs_processing.f90:
   Use global values only if num_compute > 1


Diagnostics:
------------

 - included old computation of 2m Temperature again:
    itype_diag_t2m = 1: new computation with an exponential canopy profile,
                        but with a diagnostic Prandtl layer interpolation 
                        even for scalars, using an adopted canopy layer 
                        resistance.
                   = 2: old computation with exponential canopy profile

 - included several options for gust computation:
    itype_diag_gusts = 1: dynamical gust derived from lowest model layer
                     = 2: dynamical gust derived from 30 m
                     = 3: computation of dynamical gust after Brasseur

   the computation of the gust has been splitted into a dynamical and a
   convective gust (with corresponding fields and output variables 
   vgust_dyn and vgust_con). vmax_10m still is the combination of both.


Restart Runs:
-------------

 - Restart runs have been adapted to the latest modifications in the 
   convection. The tendency fields for qi and qc due to convection have
   to be put to restart files.

 - At the request of the CLM community, result files are also written
   immediately after a restart, but not at the end of a simulation 
   period, that will be restarted. This caused several adaptations.

 - A new Nl variable ydate_end has been introduced, to identify the
   end of a total simulation. Then a result file will be written.


Additional bug fixes and technical adaptations:
-----------------------------------------------

 - utilities.f90:
   Corrected leap year calculation for centuries in Gregorian calendar

 - io_utilities.f90:
   check for undefined values only with an "undef+eps" value and not
   exactly with "undef"

 - pp_utilities.f90:
   Added computation of SWISSxx-Indices to cal_conv_ind
   Added new SR calc_bulk_richardson and calc_pbl_brn (Daniel Leuenberger)
   Adjusted interface of vert_avg

 - organize_eps.f90:
   The setting of default values for NL switches has been corrected

 - src_runge_kutta.f90:
   A print-statement for the maximal horizontal wind velocity has been moved
   to a higher debug-level

 - src_turbulence.f90:
   Bug fix in SR prankolmo_rk for computing the grid spacing in meters

 - src_setup_vartab.f90:
   Add the land-sea-mask flag for variable FRESHSNW

 - hori_diffusion.f90:
   Initialize fields for limiters, if new NL switch linit_fields is set

 - organize_data.f90:
   write sso- and forest-fields in case of analysis runs

 - src_input.f90:
   read vertical coordinate parameters only for 3D variables 
   (i.e. with levtyp = 109/110)

 - src_output.f90, data_io.f90:
   allow (much) more than 40 vertical levels for p- and z-interpolation
   Corrections for NetCDF Input and Grib Output 
   Adapted interface to SR cal_conv_ind to changes in pp_utilities


Additional GRIB numbers:
------------------------

The following GRIB numbers are now official in Table 203:

 ee=135:  LCL_ML:    lifting condensation level of mean layer parcel
 ee=136:  LFC_ML:    level of free convection of mean layer parcel
 ee=137:  CAPE_3KM:  CAPE of mean layer parcel in lowest 3 km
 ee=155:  BRN:       Bulk Richardson Number
 ee=156:  HPBL:      Height of boundary layer

Some more GRIB numbers have been introduced in Table 201 (still unofficial):

 ee= 27:  SOD_T:     solar downward radiation at top
 ee= 88:  DQC_CON:   tendency of qc due to convection
 ee= 89:  DQI_CON:   tendency of qi due to convection
 ee=218:  VGUST_DYN: maximal dynamical wind gust in 10m 
 ee=218:  VGUST_CON: maximal convective wind gust in 10m 

With the new variables sod_t and asod_t, additional output from the
radiation parameterization is now possible.


Changes in the Namelists:
-------------------------

New variables in /RUNCTL/:

 - ydate_end:
   End date of the total forecast: with this date, a variable nfinalstop 
   is computed. If ydate_end is not set, it is assumed that hstop/nstop
   indicate the end of the total forecast, i.e. nfinalstop = nstop:

   Default: ydate_end = '          '

 - linit_fields:
   For debugging purposes it might be helpful to initialize local arrays. 
   For operational purposes this should be avoided because of performance 
   reasons.

   Default: .FALSE.

New variables in /IOCTL/:

 - l_ke_in_gds: explicit GDS entry for number of model levels

Moved variables:

 - lcori, lmetr, lradlbc have been moved from /RUNCTL/ to /DYNCTL/

Changed name of a variable

   Before:   lgen           in  /IOCTL/
   Now:      lartif_data    in  /RUNCTL/

   And renamed the new Namelist group /idealctl/ for idealized test cases
   to /ARTIFCTL/, similar to GME

Other changes in /DIACTL/:

 - itype_diag_t2m:   allowed range now from 1..2
 - itype_diag_gusts: allowed range now from 1..3

Ulrich Schaettler

-------------------------------------------------------------------------------

4.7:                                                     12.12.2008
====

This version is a pure correction update:

Problems in the assimilation:  (Christoph Schraff)
-----------------------------

The following bugs were corrected within in the nudging scheme / reading of
observations:

- a (lethal) bug at distributing values from multi-level AMDAR reports
- bugs which prevented the whitelist from being used properly
- a bug because of which a check for consistency between reported station
  pressure and reduced pressure did not work properly; this check avoids
  using station pressure from stations that have erroneous stations height
- a bug on organising the IWV check
- bugs on control output (for using GPS obs resp. evaluating black-/whitelist)


Problems in the dynamics:      (Ulrich Schaettler)
-------------------------

- The variable ldiabf_satad has to be initialized with FALSE (in init_dynamics)
  otherwise it is not set for the Leapfrog dynamics

- Some technical adaptations in SR horiz_adv_driver and called subroutines

- A WRITE statement has been eliminated in SR interpol_sl_tricubic, because
  it prevented vectorization


Problems in the soil model:    (Ulrich Schaettler)
---------------------------

- Some more IF-statements have been splitted, where llandmask and m_styp were
  in the same line (if llandmask is FALSE, m_styp is not defined)


Problems in the I/O:           (Jan-Peter Schulz)
--------------------

- The fields AVDISSSO, AVSTRSSO, AUSTRSSO do now have time range indicator 3


All modified files of the library <lm_f90> release V4_7:

===== data_obs_process.f90, modified by: Christoph Schraff =====
Bug correction for control output (nfmt24, nfmt25 introduced).
===== numeric_utilities.f90, modified by: Ulrich Schaettler =====
Remove a WRITE statement from SR interpol_sl_tricubic for vectorization
===== organize_data.f90, modified by: Ulrich Schaettler =====
FOR_E and FOR_D are added to default list for constant fields yvarc
===== src_advection_rk.f90, modified by: Ulrich Schaettler =====
Technical adaptations in horiz_adv_driver
===== src_mult_local.f90, modified by: Christoph Schraff =====
Small bug corrections on managing IWV check and on control output for GPS.
===== src_obs_proc_cdf.f90, modified by: Christoph Schraff =====
Bug corrections to use the whitelist, on control output for white- and black-
listed reports, and at distributing values from multi-level AMDAR reports.
Check for consistency between reported station pressure and reduced pressure
introduced (if inconsistent then use reduced instead of station pressure).
===== src_obs_processing.f90, modified by: Christoph Schraff =====
Bug correction, for control output (nfmt24, nfmt25 introduced).
===== src_setup_vartab.f90, modified by: Ulrich Schaettler =====
Fields AVDISSSO, AUSTRSSO, AVSTRSSO get time range indicator 3
===== src_soil_multlay.f90, modified by: Ulrich Schaettler =====
There were still some loops left with llandmask and m_styp in one line


Ulrich Schaettler

-------------------------------------------------------------------------------

4.6:                                                     24.09.2008
====

This is just a correction update:
The new (analytical) computation of the reference pressure has been removed
again, because this should have been done concurrently in INT2LM, which was 
not the case. Also, the changes in both programs need further testing.

Ulrich Schaettler

-------------------------------------------------------------------------------

4.5:                                                     05.09.2008
====

  - Reading observation data from NetCDF files
    (Christoph Schraff)

    A new interface has been introduced to read and pre-process observation
    data from NetCDF files instead of an AOF file.
    These NetCDF files are obtained by simple conversion from BUFR files
    which contain BUFR reports according to Table Driven Code Formats (TDCF)
    of WMO (see
    http://www.wmo.int/pages/prog/www/WMOCodes/OperationalCodes.html,
    http://www.wmo.int/pages/prog/www/WMOCodes/TemplateExamples.html)
    for those data types where TDCF have been defined, namely for
    SYNOP, SHIP, PILOT and TEMP types, but also for BUOY and AMDAR.
    For ACARS, BUFR from ARINC Centre 56 (USA) and from UK Met Office
    can be read, or alternatively, and a combined format.
    For wind profiler, RASS, and VAD radar wind, a format defined by
    DWD is read, since there is no standard format defined by WMO yet.
    The names of the input files, that can already be used, are:
    - 'cdfin_temp      ':
    - 'cdfin_tempship  ':
    - 'cdfin_pilot     ':
    - 'cdfin_pilot_p   ':
    - 'cdfin_amdar_ml  ':
    - 'cdfin_amdar     ':
    - 'cdfin_acars     ': ACARS combined format from DWD
    - 'cdfin_wprof     ':
    - 'cdfin_rass      ':
    - 'cdfin_radar_vad ':
    - 'cdfin_synop     ':
    - 'cdfin_synop_mob ':
    - 'cdfin_ship      ':
    - 'cdfin_buoy      ':
    - 'cdfin_acars_uk  ': ACARS BUFR from UK Met Office
    - 'cdfin_acars_us  ': ACARS BUFR from ARINC Centre 56 (USA)
    Other input files cannot yet be used.
    If a file is empty, it should be removed.

    New namelist variables:
    - ycdfdir      : directory in which the NetCDF input observation files reside
                     default value: './'
    - type_obfile  : values: 1: read observations from AOF (default)
                             2: read observations from NetCDF files


  - Correction for computing the reference pressure on full levels: 
    (Guenther Zaengl)

    The reference pressure is now computed using the analytically integrated
    hydrostatic equation, starting from the fact that the height of the full
    levels is the arithmetic mean of the neighboring half levels.

    This changes the results of all applications!

  - Optimizations for vector processors
    (Ulrich Schaettler, with Jens-Olaf Beismann and Christian Bollmann from NEC)

     => Microphysics (SR hydci_pp and hydci_pp_gr)
        In the routines for the microphysics there are several IF-clauses, to
        check, which conditions are valid. Up to now, all these IF-clauses have
        been in a big loop. For vector processors it is better, first to collect
        all indices, for which a certain condition holds, and then to loop only
        over these indices. 
        On scalar machines, this organization takes more or less the same time
        (perhaps slightly slower).

     => Runge-Kutta dynamics (Module numeric_utilities_rk)
        The coefficients for the Bott advection routines have been modified to
        save several divisions during the forecast.

     => Synthetic satellite images (Use of RTTOV7 Library)
        The dimensions of several variables from the RTTOV-library have been 
        changed, to enable vectorization over the profiles. The routine org_sat_tbs
        (in the module src_sat_tbs) and the call in organize_satellites have 
        been adapted accordingly. Now the RTTOV-library is called for a whole
        vector (a latitude) of grid points.

     => Latent Heat Nudging
        The definition and allocation of the global field blacklist_tot has 
        been moved outside the subroutine lhn_obs_prep, because the values 
        are also needed after this routine has finished.
        

  - Introduction of SSO scheme
    (Jan-Peter Schulz)

    The sub-grid scale orography (SSO) scheme by Lott and Miller (1997) has
    been implemented in the COSMO model. It is also included in the DWD
    global model and works here well. The scheme deals explicitly with a
    low-level flow which is blocked when the sub-grid scale orography is
    sufficiently high. For this blocked flow separation occurs at the
    mountain flanks, resulting in a form drag. The upper part of the
    low-level flow is lead over the orography, while generating gravity
    waves. Verification at DWD had shown that the forecasted surface
    pressure in the COSMO-EU model shows a systematic bias. In particular,
    in wintertime high pressure systems tend to develop a positive pressure
    bias, by 1-2 hPa after 48h, low pressure systems a negative bias ("highs
    too high, lows too low"). Assumed causes are an underestimation of the
    cross-isobar flow in the PBL, caused by too little surface drag or too
    weak blocking at the orography. Tests with an envelope orography which
    exhibits considerably higher values in the mountains have shown a high
    sensitivity of the model to this change in orography with respect to the
    blocking of cyclones. Consequently, low pressure systems were filled
    more efficiently, the negative pressure bias was reduced. But an obvious
    disadvantage of the envelope orography is that the precipitation fields
    are altered in an unfavourable way. An alternative way to increase the
    surface drag and the blocking while not altering the precipitation
    fields is the use of an SSO scheme. 

        New Namelist switches:
              lsso:        to turn on / off the scheme
              nincsso:     to call the scheme only in intervals of nincsso steps

  - New (alternative) reference atmosphere
    (Guenther Zaengl)

    A new (alternative) reference atmosphere has been introduced 

    The new reference atmosphere is based on the temperature profile
                   T0(z) = T00 + delta_t exp(-z/h_scal),
    with default values of T00 = 213.15 K, delta_t = 75 K and h_scal = 10 km.
    (in the model code, T00 = t0sl - delta_t)
    Thus, the reference atmosphere approaches an isothermal profile in the
    stratosphere, whereas the existing reference profile has an increasingly
    negative vertical temperature gradient in the stratosphere. The vertical
    extent of the model domain is no longer limited with the new reference
    atmosphere.

    Except for idealized simulations, the reference atmosphere can only be
    chosen in INT2LM (from Version 1.9 on). All parameters of the reference
    atmosphere are coded in the GRIB files, and the COSMO-Model determines
    the type of reference atmosphere by encoding the GRIBs.

    The following holds:
     => old reference atmosphere (internal model variable irefatm = 1)
         vertical coordinate type coded in Grib:  1 - 3
     => new reference atmosphere (internal model variable irefatm = 2)
         vertical coordinate type coded in Grib:  4 - 6

           i.e. depending on ivctype, the type of the reference atmosphere
           is determined:
               1 <= ivctype <= 3:   irefatm = 1
               4 <= ivctype <= 6:   irefatm = 2

           where ivctpye = 
             1, 4:   Pressure-based vertical coordinate on input
             2, 5:   Heigt based verical coordinate on input
             3, 6:   SLEVE coordinate

     => The new reference atmosphere needs 2 additional parameters, which 
        are also coded in the GRIBs:

          delta_t: temperature difference between sea level and stratosphere
          h_scal:  scale height

        For the old style of coding (ldwd_grib_use=.TRUE.), it is
          delta_t = igds (29 + ke1 + 5)
          h_scal  = igds (29 + ke1 + 6)

        For the new style of coding (ldwd_grib_use=.FALSE.), it is
          delta_t = igds (31 + ke1 + 4)
          h_scal  = igds (31 + ke1 + 5)


  - Optimizations / Modifications of Runge-Kutta Dynamics 
    (Michael Baldauf, Guenther Zaengl)

     => src_runge_kutta.f90: incorporated use of modified Tiedtke scheme
        (same as in Version 4.4 for Leapfrog)
        Deliver tendencies of qi and qc of the modified convection scheme
        for the cloud microphysics scheme.

     => src_integrals.f90: Additional flux calculation method (Lax-Wendroff) 
        (by R. Petrik, MPI Hamburg)

     => src_advection_rk.f90: Optimized horizontal advection routines used 
        also for wcon in advection_pd.

     => fast_waves_rk.f90: More efficient implementation of a lower boundary 
        condition for w
        This changes the results of the Runge-Kutta applications slightly!

  - Modifications / Alternatives for idealized cases
    (Guenther Zaengl)

     => Implementation of a new sponge layer near upper model boundary
        (according to Klemp et al., MWR 2008):
          (Modifications in fast_waves_rk; organize_dynamics)

        New value for NL parameter itype_spubc = 3

     => Finish the implementation of radiative lateral boundary condition.
           (Modification in fast_waves_rk, src_relaxation, src_setup and
            organize_data)

        New NL parameter lradlbc (Default .FALSE.) to switch on/off the
          radiative lateral boundary condition 
          This parameter can be used only in connection with idealized cases
          (lgen=.TRUE.)

        New NL parameter relax_fac (Default 0.01): Reduction factor for the
          lateral relaxation zone (effective only if lradlbc = .TRUE.; it
          allows to combine the radiative lateral boundary condition with
          a weak Davies relaxation).

     => Possibility to switch off surface momentum fluxes in the Runge-Kutta
        dynamics for idealized cases, even if the turbulence scheme is used.

        New NL parameter lfreeslip_sfc (Default: .FALSE.): 

  - More Namelist Input for Ensemble Mode
    (Christoph Gebhardt)

    3 more Namelist parameters have been introduced in /TUNING/:
      - entr_sc:    mean entrainment rate for shallow convection
      - mu_rain: 
      - cloud_num:  cloud droplet number concentration

    Before, these were parameters in the convection or the microphysics, resp.
    As namelist parameters they are used by the ensemble group, but are considered
    to be of general interest.

    More Namelist parameters have been included in /EPSCTL/:
      - fac_lai,    rmin_lai,    rmax_lai:    
        a factor to modify values of the leaf area index; but the values 
        should stay in the interval [rmin_lai, rmax_lai]

      - fac_plcov,  rmin_plcov,  rmax_plcov
        a factor to modify values of the plant cover: but the values
        should stay in the interval [rmin_plcov, rmax_plcov]

      - fac_rootdp, rmin_rootdp, rmax_rootdp
        a factor to modify values of the root depth; but the values 
        should stay in the interval [rmin_rootdp, rmax_rootdp]

    These parameters are considered to be of interest only for ensemble runs
    and therefore are available only in the EPS namelist group.

-------------------------------------------------------------------------------

4.4:                                                     16.07.2008
====

This new version contains changes in the Tiedtke convection scheme (up to now
only in affect with the Leapfrog scheme), some optimizations in the advection
of the Runge-Kutta scheme, some optimizations for vector processors and 
(again) technical adaptations.


Tiedtke Convection:
-------------------

A number of changes in the Tiedtke cumulus convection scheme, that are related
to the treatment of convective cloud condensate as a mixed water-ice phase and 
of detrained convective cloud condensate are made.

These are 

  (a) the relative humidity threshold for the evaporation of convective 
      precipitation in the sub-cloud layer is set to 80% 
      (95% in the previous operational formulation),

  (b) cloud water-cloud ice mixed phase in convective clouds is allowed over 
      a certain temperature range (in the previous operational formulation, 
      convective cloud condensate is either water or ice, depending upon the 
      air temperature being higher or lower than the water freezing point), and

  (c) detrained convective cloud condensate is saved as tendencies of the 
      cloud water and of the cloud ice, these tendencies are then passed to 
      the COSMO-model physics and dynamics schemes for further processing 
      (the previous operational formulation assumes instantaneous evaporation
       of detrained convective cloud condensate).

The fraction of cloud ice is computed as a function of temperature. The lower
and the upper bounds of the temperature range, where convective cloud water 
and convective cloud ice are allowed to co-exist and the form of the 
interpolation function are the same as in the ECMWF IFS (IFS Documentation 2006).


These changes affect the results of the Leapfrog applications in combination
with the Tiedtke convection schemes.

(Dmitrii Mironov)


Advection in Runge-Kutta Dynamics:
----------------------------------

The structure of the advection routines in the Runge-Kutta dynamics has been
changed for higher efficiency.

These changes affect the results of the Runge-Kutta applications.

(Michael Baldauf)


Vectorization:
--------------

Some more routines have been optimized for vectorization:

 - Subroutine cal_conv_ind of module pp_utilities (for the output of 
   convective indices)

 - src_turbdiff:      Elimination of POINTERS in SR stab_funct

 - src_lheat_nudge:   vectorization of SR horizontal_filtering
                      some loops have been reordered

 - src_lheating:      introduced compiler directives

 - src_leapfrog:      moved a SQRT function outside a loop

 - numeric_utilities: vectorization of mean_over_box and mean_cov_over_box
                      by loop reordering

 - fast_waves:        introduced compiler directives
                      changed some loop organizations

All these changes do not affect the results at all!

(Ulrich Schaettler, Jens-Olaf Beismann)


Technical Adaptations:
----------------------

 - Reorganization of time_utilities:
    => introduced the option to calculate the sum of the timings over the 
       whole forecast. The Namelist switches ltime_mean, ltime_proc have
       been eliminated and itype_timing has been introduced instead:

          itype_timing:    0:     no timings at all
                           1:     timings per processor and per hour
                           2:     timings per processor, sum over forecast 
                           3:     mean values of all processors, per hour
              Default      4:     mean values, sum over forecast

    => eliminated the search algorithm in get_timings and use a direct mapping
       with fixed integers

    => the computation of the forecast time in seconds is done with 
       double precision integers


 - Adaptations for some compiler complaints
   Some compilers are more restrict (or less flexible) regarding syntax.
   The following 2 issues were changed in several subroutines:

    => Declaration of variables in an argument list of a subroutine
       The dimensions of fields have to be declared before the field:
       i.e:   
             INTEGER (KIND=iintegers)  :: idim, jdim
             REAL    (KIND=ireals)     :: field (idim,jdim)
       NOT:
             REAL    (KIND=ireals)     :: field (idim,jdim)
             INTEGER (KIND=iintegers)  :: idim, jdim

    => Some compilers produce a program interuption, if a variable in an 
       argument list is not initialized, even if this variable is not used
       in a certain application. So these variables are initialized in any 
       case.

 - Bug Fixes 

    => Initialization of hd_mask in src_setup:
       The initialization of the variables i_west, i_east, j_south, j_north
       was not reproducible. For certain configurations, these values could
       be different, depending on the special MPI-task. They are now
       computed by a global operation.

    => Fix in the subroutine multiplicative_filling, to avoid negative integrals
       which could appear in special cases.

    => Fix in the initialization of the blacklist field for the latent heat 
       nudging

    => Fix in the initialization of nincrad in SR input_phyctl (organize_physics)
       If hincrad is given in the Namelist input, the variable nincrad was 
       initialized with 0 and not adapted to hincrad. This led to a wrong
       computation of the solar zenith angle, which should be computed for the
       middle of the time interval between 2 radiation steps.

       This Bug Fix changes the results of all applications!!

 - Miscellaneous

    => Values smaller than E-300 could appear in the subroutine tautsp2D,
       if the value of Z_VEC is smaller than E-100. To avoid such small
       values (which lead to underflow on certain machines), values of 
       Z_VEC < 1E-50 are treated as zero.

    => Some adaptations to avoid "invalid operations" on the NEC in the
       module src_mult_local.f90

    => Decoding of vertical coordinate parameter nfltvc (for SLEVE) with 
       Grib function REFSTF

    => Adaptations for running the Runge-Kutta scheme with DFI
       (initialization of rho_snow in dfi_initializations, consideration of 
        sign of dt in several RK routines)

    => 2 new GRIB fields have been introduced for use in Switzerland: 
       Swiss00, Swiss12


Changes in Namelist Input:
--------------------------

There were some changes in the Namelists to reduce the number of input 
variables and to get a more consistent way of choosing between different
options:

   eliminated         new               values
   variables          variables

 /RUNCTL/

   ltime_mean         itype_timing       0: no timing
   ltime_proc                            1: timings per processor and per hour
                                         2: timings per processor, sum over forecast 
                                         3: mean values of all processors, per hour
                            Default      4: mean values, sum over forecast


   lyear_360          itype_calendar     0: gregorian calendar
                                         1: a year with 360 days


 /PHYCTL/

   ltiedtke           itype_conv         0: Tiedtke convection (Default)
   lkainfri                              1: Kain-Fritsch convection
   lbechtol                              2: not active yet
   lshallow                              3: shallow convection

     (Note: To switch off the convection at all, set lconv=.FALSE.)

      ---             lsso               to switch on the subgrid scale 
                                         orography scheme


 /DIACTL/

      ---             itype_diag_t2m     to choose type of T_2M diagnostics
      ---             itype_diag_gusts   to choose type of gusts diagnostics

       (only value=1 possible at the moment)

-------------------------------------------------------------------------------

4.3:                                                         22.02.2008
====

In this version, the computation of some diagnostic fields has been changed
in the turbulence. Also, some technical adaptations have been done.


 - Turbulence:
   Changing interpolation onto diagnostic levels, in particular without an 
   exponential canopy profile, but with a diagnostic Prandtl layer 
   interpolation even for scalars, using an adopted canopy layer resistance.

   NOTE:
   Because the 2m-temperature is also used in the soil model, these changes
   also influence the results of the forecast.

   Calculation of the 3D diagnostic field 'edr' for the eddy dissipotion rate.
   This field has been introduced in data_fields, organize_data, src_allocation,
   src_setup_vartab, src_turbulence, src_turbdiff

   Changing the treatment of parameter field dd(:,:,:) to achieve better 
   vectorization in SUBROUTINE 'stab_funct'.

 - New Grib Numbers in src_setup_vartab:
   Field edr (eddy dissipation rate)
                  ee         table
      EDR        151          201

   The fields for the topographical corrections in the radiation scheme now
   have official GRIB numbers:
                  ee         table
      HORIZON     96          202
      SWDIR_COR   97          202
      SLO_ANG     98          202
      SLO_ASP     99          202
      SKYVIEW    100          202
      ASWDIR_S    22          201
      ASWDIFD_S   23          201
      ASWDIFD_U   24          201
      ALWD_S      25          201
      ALWU_S      26          201

    Also the field TINC_LH (which is needed in the restart files) 
    now has an official number
                  ee         table
      TINC_LH     32          202

    New Grib numbers have been allocated for new moisture variables:
                  ee         table
      PRH_GSP    134          201
      HAIL_GSP   135          201

      QH          98          201
      QNC        221          201
      QNR        222          201
      QNI        223          201
      QNS        224          201
      QNG        225          201
      QNH        226          201

 - Changes for the computation of the synthetic satellites:
   On February 18th, the COSMO_EU got a "hard limit violation" of the surface
   pressure for the RTTOV library: the model pressure was 1100.14 hPa!!
   But this was at the Death Sea, which is not too unrealistic.
   Now, if the surface pressure exceeds the 1100 hPa (which is the hard limit)
   it is reduced.

 - Technical Adaptations and Bug Corrections:
   => src_radiation.f90:
      There still were 2 arguments wrongly swapped in the call to SR fesft

   => time_utilities.f90: 
      In restart runs, YUTIMING now starts output at hstart, not at hour 0

   => src_input.f90:
      Corrected reading of boundary data for ytunit_bd='d'

   => src_output.f90:
      Avoided GRIB warnings in case of long simulation runs

   => lmorg.F90:
      Adapted interface of init_timings

   => organize_diagnosis.f90:
      Corrected computation of nstepsgp

   => src_gridpoints.f90; src_meanvalues.f90:
      Changed 'LM' into 'COSMO' for ASCII output

Ulrich Schaettler

-------------------------------------------------------------------------------

4.2.1.1:
========

Temporary patch for usage of RTTOV library:

This version was necessary to suppress the huge amount of warnings
from the RTTOV library. This huge amount led to delays in the
operational production at DWD.

The temperature profiles that are computed and extrapolated above the highest
modellevel in COSMO_EU can violate the soft limits, that are allowed for
RTTOV, because the linear extrapolation algorithm did not take care of the
proper temperature profile. We made 2 changes:

 - The extrapolated values are checked against the lower soft limits. If they
   are too small, the minimum value plus a security constant is chosen.
   (another possibility is to use a standard atmosphere above the highest
    model level; but for the diagnostic purpose in the COSMO-Model, the
    solution now implemented should suffice)

 - Warnings are not printed for every grid point now, but only once per
   output step, if such a violation occured somewhere.
   In future versions we will implement the possibility of a more
   verbose output by using idbg_level.


Ulrich Schaettler

-------------------------------------------------------------------------------

4.2:
====

This is just a correction update:
 - src_lheat_nudge.f90: has just been forgotten in the last version
 - organize_assimilation.f90: changed default name of radar height file
 - src_setup.f90: Correction of initialization of hlastmxt in case of restarts

Ulrich Schaettler

-------------------------------------------------------------------------------

4.1:
====

Changes in the Source Code:
---------------------------

In this version there are some bug fixes but also some new options and
developments:

 - Bug Fixes for reproducibility in Runge-Kutta dynamical core:
   There were some problems with the reproducibility of the Runge-Kutta 
   dynamical core related to cases with high vertical velocity and also
   due to the lateral boundary relaxation. Fixes have been implemented in
   the modules:
    => src_setup.f90: 
       fixed computation of lnorth, lsouth, least, lwest in subroutine 
       constant_fields
    => src_runge_kutta.f90:
       compute MAXVAL for zwmax only in the range istartpar:iendpar and
       jstartpar:jendpar
    => numeric_utilities_rk.f90:
       need a global exchange of variable icr in subroutine wcfrac_crint_rk
    => src_advection_rk.f90:
       changed interface to SR wcfrac_crint_rk

 - Bug Fixes for reproducibility in data assimilation (by Christoph Schraff):
   The value for startlat_tot has to be used to compute the rotated latitude
   of a special grid point. If only startlat from a special subdomain is used,
   rounding errors can be different, depending on the decomposition.

 - Reproducibility for Semi-Lagrange Advection (by Michael Baldauf):
   To ensure that the summation of REAL variables is done in a reproducible
   manner requires that the whole field is summed up in one processor. 
   If this is not done, summing up a field on distributed computers can 
   deliver different results, depending on  the decomposition.
   Another method has been implemented now in the COSMO-Model, which is used
   in the Semi-Lagrange Advection, which transforms the REAL numbers to 
   long INTEGERS first and then does the summation.

 - Technical bug fixes:
   => organize_data.f90
      correction in setting up restart files with FLake 
      if ytunitbd='d', only full hours are allowed for hincbound
   => src_input.f90
      changed argument for 3rd dimension in call to check_record
      call to sleve_split_oro: introduced my_cart_id as argument
   => src_output.f90
      corrected settings of igds_out for ivctype=3
      corrected re-initialization of rain rates after restart file
      all variables are checked, whether their ABS values is nearly 0
   => src_radiation.f90
      changed downward and upward component in call to subroutine fesft
   => dfi_initialization.f90
      initialize t_so, w_so in case of multi-layer soil model

 - Editorial changes and adaptations to modules in INT2LM:
   => data_io.f90
   => meteo_utilities.f90
   => io_utilities.f90
   => utilities.f90
   => parallel_utilities.f90  (more generic implementations for several subroutines)

 - Calculation of Supercell Detection Indices (by Michael Baldauf):
   The 2 Supercell Detection Indices can be calculated in the postprocessing.
   There are 2 new output fields SDI1 and SDI2, which can be specified for output.

 - Changes in the gust Parameterization (by Jan-Peter Schulz):
   A re-tuning of gusts has been implemented by using wind speeds at 10 meters
   above ground, instead of 30 meters.

 - Brightband detection in Radar data (by Klaus Stephan):
   => The possibility to use radar beam height as an additional information has
      been implemented. Therefore, an additional GRIB ("height_file") file is 
      required.
      This is controlled by the Namelist variable lhn_height

   => Also, a brightband detection algorithm has been implemented, which can be
      chosen optionally. This is controlled by the Namelist variable lhn_bright.


Changes in the Namelists:
-------------------------

There are 3 new Namelist variables in /NUDGING/ for the
Latent Heat Nudging:
                                                             Default
 - lhn_height   :   use height infos for radar data          .TRUE.
 - lhn_bright   :   apply bright band detection              .TRUE.
 - height_file  :   dxheight_file_name                   radarhoehe_bin.grib1


Changes in the Results:
-----------------------

The changes in the gust parameterization do change the values for the maximal
wind gust VMAX_10M.

The clipping of variables to 0 affect some variables, e.g. the rain rates
and some moisture variables.

Note, that only the values in the output file are changed. The COSMO-Model
itself still works with the original values.


Ulrich Schaettler

-------------------------------------------------------------------------------

3.28  =  4.0:
=============

Changes in src_lheat_nugde:
  lhn_prof_search: new criteria for choosing a point as valuable
  reference precipitaion: integegration of precipitation flux startes
                          at layer k which is the first to be greater
                          or equal than the maximum of the flux within
                          the column
  vertical restriction: definition of the uppest layer by indication
                        the temperature of the layer
  diagnosis: introduction of rain histogram
  IO:        bugfix of generation of INPUT-filename (D. Leuenberger)
             reproducibility check, possibility to ingnore date by
             namelist noobs_date
Changes in data_lheat_nudge.f90, and organize_assimilation.f90
  New Namelist variables for
  - data input: noobs_date,n_noobs
  - reference precipitaion: rqrsgflux
  - vertical restriction: ktop_temp

Klaus Stephan
